
filesystem/demos/service/service.elf:     file format elf32-i386


Disassembly of section .init:

00000074 <_init>:
  74:	e8 13 01 00 00       	call   18c <frame_dummy>
  79:	e8 82 24 00 00       	call   2500 <__do_global_ctors_aux>
  7e:	c2 00 00             	ret    0x0

Disassembly of section .text:

00000084 <_start>:
      84:	55                   	push   ebp
      85:	89 e5                	mov    ebp,esp
      87:	83 ec 08             	sub    esp,0x8
      8a:	c7 05 c8 36 00 00 00 	mov    DWORD PTR ds:0x36c8,0x0
      91:	00 00 00 
      94:	e8 f4 0e 00 00       	call   f8d <init_stdlib>
      99:	e8 9e 04 00 00       	call   53c <init_stdio>
      9e:	83 ec 08             	sub    esp,0x8
      a1:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
      a4:	ff 75 08             	push   DWORD PTR [ebp+0x8]
      a7:	e8 d7 01 00 00       	call   283 <main>
      ac:	83 c4 10             	add    esp,0x10
      af:	e8 3d 0f 00 00       	call   ff1 <clean_stdlib>
      b4:	90                   	nop
      b5:	c9                   	leave
      b6:	c3                   	ret
      b7:	90                   	nop

000000b8 <deregister_tm_clones>:
      b8:	b8 64 36 00 00       	mov    eax,0x3664
      bd:	3d 64 36 00 00       	cmp    eax,0x3664
      c2:	74 1c                	je     e0 <deregister_tm_clones+0x28>
      c4:	b8 00 00 00 00       	mov    eax,0x0
      c9:	85 c0                	test   eax,eax
      cb:	74 13                	je     e0 <deregister_tm_clones+0x28>
      cd:	55                   	push   ebp
      ce:	89 e5                	mov    ebp,esp
      d0:	83 ec 14             	sub    esp,0x14
      d3:	68 64 36 00 00       	push   0x3664
      d8:	ff d0                	call   eax
      da:	83 c4 10             	add    esp,0x10
      dd:	c9                   	leave
      de:	c3                   	ret
      df:	90                   	nop
      e0:	c3                   	ret
      e1:	8d 76 00             	lea    esi,[esi+0x0]

000000e4 <register_tm_clones>:
      e4:	b8 64 36 00 00       	mov    eax,0x3664
      e9:	2d 64 36 00 00       	sub    eax,0x3664
      ee:	89 c2                	mov    edx,eax
      f0:	c1 fa 02             	sar    edx,0x2
      f3:	c1 e8 1f             	shr    eax,0x1f
      f6:	01 d0                	add    eax,edx
      f8:	d1 f8                	sar    eax,1
      fa:	74 1c                	je     118 <register_tm_clones+0x34>
      fc:	ba 00 00 00 00       	mov    edx,0x0
     101:	85 d2                	test   edx,edx
     103:	74 13                	je     118 <register_tm_clones+0x34>
     105:	55                   	push   ebp
     106:	89 e5                	mov    ebp,esp
     108:	83 ec 10             	sub    esp,0x10
     10b:	50                   	push   eax
     10c:	68 64 36 00 00       	push   0x3664
     111:	ff d2                	call   edx
     113:	83 c4 10             	add    esp,0x10
     116:	c9                   	leave
     117:	c3                   	ret
     118:	c3                   	ret
     119:	8d 76 00             	lea    esi,[esi+0x0]

0000011c <__do_global_dtors_aux>:
     11c:	80 3d 64 36 00 00 00 	cmp    BYTE PTR ds:0x3664,0x0
     123:	75 63                	jne    188 <__do_global_dtors_aux+0x6c>
     125:	55                   	push   ebp
     126:	89 e5                	mov    ebp,esp
     128:	56                   	push   esi
     129:	53                   	push   ebx
     12a:	be 4c 36 00 00       	mov    esi,0x364c
     12f:	a1 68 36 00 00       	mov    eax,ds:0x3668
     134:	bb 50 36 00 00       	mov    ebx,0x3650
     139:	81 eb 4c 36 00 00    	sub    ebx,0x364c
     13f:	c1 fb 02             	sar    ebx,0x2
     142:	4b                   	dec    ebx
     143:	39 d8                	cmp    eax,ebx
     145:	73 13                	jae    15a <__do_global_dtors_aux+0x3e>
     147:	90                   	nop
     148:	40                   	inc    eax
     149:	a3 68 36 00 00       	mov    ds:0x3668,eax
     14e:	ff 14 86             	call   DWORD PTR [esi+eax*4]
     151:	a1 68 36 00 00       	mov    eax,ds:0x3668
     156:	39 d8                	cmp    eax,ebx
     158:	72 ee                	jb     148 <__do_global_dtors_aux+0x2c>
     15a:	e8 59 ff ff ff       	call   b8 <deregister_tm_clones>
     15f:	b8 00 00 00 00       	mov    eax,0x0
     164:	85 c0                	test   eax,eax
     166:	74 10                	je     178 <__do_global_dtors_aux+0x5c>
     168:	83 ec 0c             	sub    esp,0xc
     16b:	68 40 26 00 00       	push   0x2640
     170:	e8 8b fe ff ff       	call   0 <_init-0x74>
     175:	83 c4 10             	add    esp,0x10
     178:	c6 05 64 36 00 00 01 	mov    BYTE PTR ds:0x3664,0x1
     17f:	8d 65 f8             	lea    esp,[ebp-0x8]
     182:	5b                   	pop    ebx
     183:	5e                   	pop    esi
     184:	5d                   	pop    ebp
     185:	c3                   	ret
     186:	66 90                	xchg   ax,ax
     188:	c3                   	ret
     189:	8d 76 00             	lea    esi,[esi+0x0]

0000018c <frame_dummy>:
     18c:	b8 00 00 00 00       	mov    eax,0x0
     191:	85 c0                	test   eax,eax
     193:	74 1f                	je     1b4 <frame_dummy+0x28>
     195:	55                   	push   ebp
     196:	89 e5                	mov    ebp,esp
     198:	83 ec 10             	sub    esp,0x10
     19b:	68 6c 36 00 00       	push   0x366c
     1a0:	68 40 26 00 00       	push   0x2640
     1a5:	e8 56 fe ff ff       	call   0 <_init-0x74>
     1aa:	83 c4 10             	add    esp,0x10
     1ad:	c9                   	leave
     1ae:	e9 31 ff ff ff       	jmp    e4 <register_tm_clones>
     1b3:	90                   	nop
     1b4:	e9 2b ff ff ff       	jmp    e4 <register_tm_clones>

000001b9 <fib>:
     1b9:	55                   	push   ebp
     1ba:	89 e5                	mov    ebp,esp
     1bc:	53                   	push   ebx
     1bd:	83 ec 14             	sub    esp,0x14
     1c0:	e8 36 03 00 00       	call   4fb <__x86.get_pc_thunk.bx>
     1c5:	81 c3 8f 34 00 00    	add    ebx,0x348f
     1cb:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [ebp-0x18],0x0
     1d2:	c7 45 f0 01 00 00 00 	mov    DWORD PTR [ebp-0x10],0x1
     1d9:	8b 55 e8             	mov    edx,DWORD PTR [ebp-0x18]
     1dc:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
     1df:	01 d0                	add    eax,edx
     1e1:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
     1e4:	c7 c0 84 36 00 00    	mov    eax,0x3684
     1ea:	8b 00                	mov    eax,DWORD PTR [eax]
     1ec:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
     1ef:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
     1f2:	8d 93 e4 ee ff ff    	lea    edx,[ebx-0x111c]
     1f8:	52                   	push   edx
     1f9:	50                   	push   eax
     1fa:	e8 96 05 00 00       	call   795 <fprintf>
     1ff:	83 c4 10             	add    esp,0x10
     202:	c7 45 f4 03 00 00 00 	mov    DWORD PTR [ebp-0xc],0x3
     209:	eb 38                	jmp    243 <fib+0x8a>
     20b:	c7 c0 84 36 00 00    	mov    eax,0x3684
     211:	8b 00                	mov    eax,DWORD PTR [eax]
     213:	83 ec 04             	sub    esp,0x4
     216:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
     219:	8d 93 ff ee ff ff    	lea    edx,[ebx-0x1101]
     21f:	52                   	push   edx
     220:	50                   	push   eax
     221:	e8 6f 05 00 00       	call   795 <fprintf>
     226:	83 c4 10             	add    esp,0x10
     229:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
     22c:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
     22f:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
     232:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
     235:	8b 55 e8             	mov    edx,DWORD PTR [ebp-0x18]
     238:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
     23b:	01 d0                	add    eax,edx
     23d:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
     240:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
     243:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     246:	3b 45 08             	cmp    eax,DWORD PTR [ebp+0x8]
     249:	7e c0                	jle    20b <fib+0x52>
     24b:	c7 c0 84 36 00 00    	mov    eax,0x3684
     251:	8b 00                	mov    eax,DWORD PTR [eax]
     253:	83 ec 08             	sub    esp,0x8
     256:	50                   	push   eax
     257:	6a 0a                	push   0xa
     259:	e8 81 0a 00 00       	call   cdf <fputc>
     25e:	83 c4 10             	add    esp,0x10
     261:	90                   	nop
     262:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     265:	c9                   	leave
     266:	c3                   	ret

00000267 <read_notification>:
     267:	55                   	push   ebp
     268:	89 e5                	mov    ebp,esp
     26a:	e8 88 02 00 00       	call   4f7 <__x86.get_pc_thunk.ax>
     26f:	05 e5 33 00 00       	add    eax,0x33e5
     274:	c7 c0 90 36 00 00    	mov    eax,0x3690
     27a:	c7 00 01 00 00 00    	mov    DWORD PTR [eax],0x1
     280:	90                   	nop
     281:	5d                   	pop    ebp
     282:	c3                   	ret

00000283 <main>:
     283:	8d 4c 24 04          	lea    ecx,[esp+0x4]
     287:	83 e4 f0             	and    esp,0xfffffff0
     28a:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
     28d:	55                   	push   ebp
     28e:	89 e5                	mov    ebp,esp
     290:	53                   	push   ebx
     291:	51                   	push   ecx
     292:	83 ec 30             	sub    esp,0x30
     295:	e8 61 02 00 00       	call   4fb <__x86.get_pc_thunk.bx>
     29a:	81 c3 ba 33 00 00    	add    ebx,0x33ba
     2a0:	83 ec 08             	sub    esp,0x8
     2a3:	c7 c0 b9 01 00 00    	mov    eax,0x1b9
     2a9:	50                   	push   eax
     2aa:	8d 83 04 ef ff ff    	lea    eax,[ebx-0x10fc]
     2b0:	50                   	push   eax
     2b1:	e8 12 05 00 00       	call   7c8 <printf>
     2b6:	83 c4 10             	add    esp,0x10
     2b9:	83 ec 08             	sub    esp,0x8
     2bc:	8d 83 28 ef ff ff    	lea    eax,[ebx-0x10d8]
     2c2:	50                   	push   eax
     2c3:	8d 83 2a ef ff ff    	lea    eax,[ebx-0x10d6]
     2c9:	50                   	push   eax
     2ca:	e8 ed 05 00 00       	call   8bc <fopen>
     2cf:	83 c4 10             	add    esp,0x10
     2d2:	c7 c2 84 36 00 00    	mov    edx,0x3684
     2d8:	89 02                	mov    DWORD PTR [edx],eax
     2da:	83 ec 0c             	sub    esp,0xc
     2dd:	6a 0a                	push   0xa
     2df:	e8 d5 fe ff ff       	call   1b9 <fib>
     2e4:	83 c4 10             	add    esp,0x10
     2e7:	83 ec 08             	sub    esp,0x8
     2ea:	8d 83 38 ef ff ff    	lea    eax,[ebx-0x10c8]
     2f0:	50                   	push   eax
     2f1:	8d 83 3a ef ff ff    	lea    eax,[ebx-0x10c6]
     2f7:	50                   	push   eax
     2f8:	e8 bf 05 00 00       	call   8bc <fopen>
     2fd:	83 c4 10             	add    esp,0x10
     300:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
     303:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
     307:	75 1c                	jne    325 <main+0xa2>
     309:	83 ec 0c             	sub    esp,0xc
     30c:	8d 83 44 ef ff ff    	lea    eax,[ebx-0x10bc]
     312:	50                   	push   eax
     313:	e8 49 05 00 00       	call   861 <puts>
     318:	83 c4 10             	add    esp,0x10
     31b:	b8 01 00 00 00       	mov    eax,0x1
     320:	e9 c8 01 00 00       	jmp    4ed <main+0x26a>
     325:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
     328:	6a 01                	push   0x1
     32a:	6a 18                	push   0x18
     32c:	8d 45 d0             	lea    eax,[ebp-0x30]
     32f:	50                   	push   eax
     330:	e8 47 07 00 00       	call   a7c <fread>
     335:	83 c4 10             	add    esp,0x10
     338:	83 ec 0c             	sub    esp,0xc
     33b:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
     33e:	e8 30 06 00 00       	call   973 <fclose>
     343:	83 c4 10             	add    esp,0x10
     346:	83 ec 0c             	sub    esp,0xc
     349:	68 e8 03 00 00       	push   0x3e8
     34e:	e8 d7 0c 00 00       	call   102a <malloc>
     353:	83 c4 10             	add    esp,0x10
     356:	89 c2                	mov    edx,eax
     358:	c7 c0 88 36 00 00    	mov    eax,0x3688
     35e:	89 10                	mov    DWORD PTR [eax],edx
     360:	c7 c0 8c 36 00 00    	mov    eax,0x368c
     366:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
     36c:	c7 c0 90 36 00 00    	mov    eax,0x3690
     372:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
     378:	c7 c0 88 36 00 00    	mov    eax,0x3688
     37e:	8b 00                	mov    eax,DWORD PTR [eax]
     380:	83 ec 04             	sub    esp,0x4
     383:	68 e8 03 00 00       	push   0x3e8
     388:	6a 00                	push   0x0
     38a:	50                   	push   eax
     38b:	e8 68 13 00 00       	call   16f8 <memset>
     390:	83 c4 10             	add    esp,0x10
     393:	c7 c0 8c 36 00 00    	mov    eax,0x368c
     399:	8b 10                	mov    edx,DWORD PTR [eax]
     39b:	c7 c0 88 36 00 00    	mov    eax,0x3688
     3a1:	8b 00                	mov    eax,DWORD PTR [eax]
     3a3:	52                   	push   edx
     3a4:	8d 93 56 ef ff ff    	lea    edx,[ebx-0x10aa]
     3aa:	52                   	push   edx
     3ab:	68 e8 03 00 00       	push   0x3e8
     3b0:	50                   	push   eax
     3b1:	e8 b7 09 00 00       	call   d6d <snprintf>
     3b6:	83 c4 10             	add    esp,0x10
     3b9:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
     3bc:	c7 c2 88 36 00 00    	mov    edx,0x3688
     3c2:	8b 12                	mov    edx,DWORD PTR [edx]
     3c4:	83 ec 04             	sub    esp,0x4
     3c7:	6a 02                	push   0x2
     3c9:	68 e8 03 00 00       	push   0x3e8
     3ce:	52                   	push   edx
     3cf:	ff d0                	call   eax
     3d1:	83 c4 10             	add    esp,0x10
     3d4:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
     3d7:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
     3da:	83 ec 0c             	sub    esp,0xc
     3dd:	6a 00                	push   0x0
     3df:	6a 00                	push   0x0
     3e1:	c7 c2 67 02 00 00    	mov    edx,0x267
     3e7:	52                   	push   edx
     3e8:	6a 00                	push   0x0
     3ea:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
     3ed:	ff d0                	call   eax
     3ef:	83 c4 20             	add    esp,0x20
     3f2:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
     3f5:	83 ec 08             	sub    esp,0x8
     3f8:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
     3fb:	8d 93 65 ef ff ff    	lea    edx,[ebx-0x109b]
     401:	52                   	push   edx
     402:	ff d0                	call   eax
     404:	83 c4 10             	add    esp,0x10
     407:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
     40a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
     40d:	83 ec 0c             	sub    esp,0xc
     410:	8d 93 6a ef ff ff    	lea    edx,[ebx-0x1096]
     416:	52                   	push   edx
     417:	ff d0                	call   eax
     419:	83 c4 10             	add    esp,0x10
     41c:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
     41f:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
     422:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
     425:	83 ec 08             	sub    esp,0x8
     428:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
     42b:	52                   	push   edx
     42c:	ff d0                	call   eax
     42e:	83 c4 10             	add    esp,0x10
     431:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
     434:	83 ec 08             	sub    esp,0x8
     437:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
     43a:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
     43d:	ff d0                	call   eax
     43f:	83 c4 10             	add    esp,0x10
     442:	83 ec 08             	sub    esp,0x8
     445:	c7 c0 90 36 00 00    	mov    eax,0x3690
     44b:	50                   	push   eax
     44c:	8d 83 6f ef ff ff    	lea    eax,[ebx-0x1091]
     452:	50                   	push   eax
     453:	e8 70 03 00 00       	call   7c8 <printf>
     458:	83 c4 10             	add    esp,0x10
     45b:	c7 c0 90 36 00 00    	mov    eax,0x3690
     461:	8b 00                	mov    eax,DWORD PTR [eax]
     463:	85 c0                	test   eax,eax
     465:	74 7c                	je     4e3 <main+0x260>
     467:	c7 c0 90 36 00 00    	mov    eax,0x3690
     46d:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
     473:	c7 c0 84 36 00 00    	mov    eax,0x3684
     479:	8b 00                	mov    eax,DWORD PTR [eax]
     47b:	50                   	push   eax
     47c:	6a 10                	push   0x10
     47e:	6a 01                	push   0x1
     480:	8d 83 80 ef ff ff    	lea    eax,[ebx-0x1080]
     486:	50                   	push   eax
     487:	e8 7d 05 00 00       	call   a09 <fwrite>
     48c:	83 c4 10             	add    esp,0x10
     48f:	c7 c0 88 36 00 00    	mov    eax,0x3688
     495:	8b 00                	mov    eax,DWORD PTR [eax]
     497:	83 ec 04             	sub    esp,0x4
     49a:	68 e8 03 00 00       	push   0x3e8
     49f:	6a 00                	push   0x0
     4a1:	50                   	push   eax
     4a2:	e8 51 12 00 00       	call   16f8 <memset>
     4a7:	83 c4 10             	add    esp,0x10
     4aa:	c7 c0 8c 36 00 00    	mov    eax,0x368c
     4b0:	8b 00                	mov    eax,DWORD PTR [eax]
     4b2:	8d 50 01             	lea    edx,[eax+0x1]
     4b5:	c7 c0 8c 36 00 00    	mov    eax,0x368c
     4bb:	89 10                	mov    DWORD PTR [eax],edx
     4bd:	c7 c0 8c 36 00 00    	mov    eax,0x368c
     4c3:	8b 10                	mov    edx,DWORD PTR [eax]
     4c5:	c7 c0 88 36 00 00    	mov    eax,0x3688
     4cb:	8b 00                	mov    eax,DWORD PTR [eax]
     4cd:	52                   	push   edx
     4ce:	8d 93 56 ef ff ff    	lea    edx,[ebx-0x10aa]
     4d4:	52                   	push   edx
     4d5:	68 e8 03 00 00       	push   0x3e8
     4da:	50                   	push   eax
     4db:	e8 8d 08 00 00       	call   d6d <snprintf>
     4e0:	83 c4 10             	add    esp,0x10
     4e3:	e8 b8 1c 00 00       	call   21a0 <yield>
     4e8:	e9 6e ff ff ff       	jmp    45b <main+0x1d8>
     4ed:	8d 65 f8             	lea    esp,[ebp-0x8]
     4f0:	59                   	pop    ecx
     4f1:	5b                   	pop    ebx
     4f2:	5d                   	pop    ebp
     4f3:	8d 61 fc             	lea    esp,[ecx-0x4]
     4f6:	c3                   	ret

000004f7 <__x86.get_pc_thunk.ax>:
     4f7:	8b 04 24             	mov    eax,DWORD PTR [esp]
     4fa:	c3                   	ret

000004fb <__x86.get_pc_thunk.bx>:
     4fb:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
     4fe:	c3                   	ret

000004ff <internal_createFileFD>:
     4ff:	55                   	push   ebp
     500:	89 e5                	mov    ebp,esp
     502:	53                   	push   ebx
     503:	83 ec 14             	sub    esp,0x14
     506:	e8 ec ff ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
     50b:	05 49 31 00 00       	add    eax,0x3149
     510:	83 ec 0c             	sub    esp,0xc
     513:	6a 08                	push   0x8
     515:	89 c3                	mov    ebx,eax
     517:	e8 0e 0b 00 00       	call   102a <malloc>
     51c:	83 c4 10             	add    esp,0x10
     51f:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
     522:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     525:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
     52b:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     52e:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
     531:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
     534:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     537:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     53a:	c9                   	leave
     53b:	c3                   	ret

0000053c <init_stdio>:
     53c:	55                   	push   ebp
     53d:	89 e5                	mov    ebp,esp
     53f:	56                   	push   esi
     540:	53                   	push   ebx
     541:	e8 b5 ff ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     546:	81 c3 0e 31 00 00    	add    ebx,0x310e
     54c:	83 ec 0c             	sub    esp,0xc
     54f:	6a 28                	push   0x28
     551:	e8 d4 0a 00 00       	call   102a <malloc>
     556:	83 c4 10             	add    esp,0x10
     559:	c7 c2 94 36 00 00    	mov    edx,0x3694
     55f:	89 02                	mov    DWORD PTR [edx],eax
     561:	c7 c0 94 36 00 00    	mov    eax,0x3694
     567:	8b 00                	mov    eax,DWORD PTR [eax]
     569:	83 ec 04             	sub    esp,0x4
     56c:	6a 04                	push   0x4
     56e:	6a 00                	push   0x0
     570:	50                   	push   eax
     571:	e8 82 11 00 00       	call   16f8 <memset>
     576:	83 c4 10             	add    esp,0x10
     579:	c7 c0 94 36 00 00    	mov    eax,0x3694
     57f:	8b 00                	mov    eax,DWORD PTR [eax]
     581:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
     587:	83 ec 08             	sub    esp,0x8
     58a:	6a 02                	push   0x2
     58c:	8d 83 91 ef ff ff    	lea    eax,[ebx-0x106f]
     592:	50                   	push   eax
     593:	e8 3b 1a 00 00       	call   1fd3 <open>
     598:	83 c4 10             	add    esp,0x10
     59b:	c7 c2 94 36 00 00    	mov    edx,0x3694
     5a1:	8b 12                	mov    edx,DWORD PTR [edx]
     5a3:	8d 72 04             	lea    esi,[edx+0x4]
     5a6:	83 ec 0c             	sub    esp,0xc
     5a9:	50                   	push   eax
     5aa:	e8 50 ff ff ff       	call   4ff <internal_createFileFD>
     5af:	83 c4 10             	add    esp,0x10
     5b2:	89 06                	mov    DWORD PTR [esi],eax
     5b4:	c7 c0 94 36 00 00    	mov    eax,0x3694
     5ba:	8b 00                	mov    eax,DWORD PTR [eax]
     5bc:	c7 c2 94 36 00 00    	mov    edx,0x3694
     5c2:	8b 12                	mov    edx,DWORD PTR [edx]
     5c4:	83 c2 08             	add    edx,0x8
     5c7:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
     5ca:	89 02                	mov    DWORD PTR [edx],eax
     5cc:	c7 c0 98 36 00 00    	mov    eax,0x3698
     5d2:	c7 00 03 00 00 00    	mov    DWORD PTR [eax],0x3
     5d8:	90                   	nop
     5d9:	8d 65 f8             	lea    esp,[ebp-0x8]
     5dc:	5b                   	pop    ebx
     5dd:	5e                   	pop    esi
     5de:	5d                   	pop    ebp
     5df:	c3                   	ret

000005e0 <vfprintf>:
     5e0:	55                   	push   ebp
     5e1:	89 e5                	mov    ebp,esp
     5e3:	53                   	push   ebx
     5e4:	83 ec 44             	sub    esp,0x44
     5e7:	e8 0f ff ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     5ec:	81 c3 68 30 00 00    	add    ebx,0x3068
     5f2:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
     5f9:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
     5fd:	0f 85 7d 01 00 00    	jne    780 <vfprintf+0x1a0>
     603:	b8 00 00 00 00       	mov    eax,0x0
     608:	e9 83 01 00 00       	jmp    790 <vfprintf+0x1b0>
     60d:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
     610:	8a 00                	mov    al,BYTE PTR [eax]
     612:	3c 25                	cmp    al,0x25
     614:	74 22                	je     638 <vfprintf+0x58>
     616:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     619:	6a 01                	push   0x1
     61b:	6a 01                	push   0x1
     61d:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
     620:	e8 e4 03 00 00       	call   a09 <fwrite>
     625:	83 c4 10             	add    esp,0x10
     628:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     62b:	01 d0                	add    eax,edx
     62d:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
     630:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
     633:	e9 48 01 00 00       	jmp    780 <vfprintf+0x1a0>
     638:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
     63b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
     63e:	8a 00                	mov    al,BYTE PTR [eax]
     640:	0f be c0             	movsx  eax,al
     643:	83 f8 78             	cmp    eax,0x78
     646:	0f 84 e3 00 00 00    	je     72f <vfprintf+0x14f>
     64c:	83 f8 78             	cmp    eax,0x78
     64f:	0f 8f 28 01 00 00    	jg     77d <vfprintf+0x19d>
     655:	83 f8 73             	cmp    eax,0x73
     658:	0f 84 99 00 00 00    	je     6f7 <vfprintf+0x117>
     65e:	83 f8 73             	cmp    eax,0x73
     661:	0f 8f 16 01 00 00    	jg     77d <vfprintf+0x19d>
     667:	83 f8 64             	cmp    eax,0x64
     66a:	74 39                	je     6a5 <vfprintf+0xc5>
     66c:	83 f8 64             	cmp    eax,0x64
     66f:	0f 8f 08 01 00 00    	jg     77d <vfprintf+0x19d>
     675:	83 f8 25             	cmp    eax,0x25
     678:	74 08                	je     682 <vfprintf+0xa2>
     67a:	83 f8 46             	cmp    eax,0x46
     67d:	e9 fb 00 00 00       	jmp    77d <vfprintf+0x19d>
     682:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     685:	6a 01                	push   0x1
     687:	6a 01                	push   0x1
     689:	8d 83 a0 ef ff ff    	lea    eax,[ebx-0x1060]
     68f:	50                   	push   eax
     690:	e8 74 03 00 00       	call   a09 <fwrite>
     695:	83 c4 10             	add    esp,0x10
     698:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     69b:	01 d0                	add    eax,edx
     69d:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
     6a0:	e9 d8 00 00 00       	jmp    77d <vfprintf+0x19d>
     6a5:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
     6a8:	8d 50 04             	lea    edx,[eax+0x4]
     6ab:	89 55 10             	mov    DWORD PTR [ebp+0x10],edx
     6ae:	8b 00                	mov    eax,DWORD PTR [eax]
     6b0:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
     6b3:	83 ec 04             	sub    esp,0x4
     6b6:	6a 0a                	push   0xa
     6b8:	8d 45 c0             	lea    eax,[ebp-0x40]
     6bb:	50                   	push   eax
     6bc:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
     6bf:	e8 b6 0b 00 00       	call   127a <itoa>
     6c4:	83 c4 10             	add    esp,0x10
     6c7:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
     6ca:	83 ec 0c             	sub    esp,0xc
     6cd:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
     6d0:	e8 ad 11 00 00       	call   1882 <strlen>
     6d5:	83 c4 10             	add    esp,0x10
     6d8:	40                   	inc    eax
     6d9:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     6dc:	6a 01                	push   0x1
     6de:	50                   	push   eax
     6df:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
     6e2:	e8 22 03 00 00       	call   a09 <fwrite>
     6e7:	83 c4 10             	add    esp,0x10
     6ea:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     6ed:	01 d0                	add    eax,edx
     6ef:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
     6f2:	e9 86 00 00 00       	jmp    77d <vfprintf+0x19d>
     6f7:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
     6fa:	8d 50 04             	lea    edx,[eax+0x4]
     6fd:	89 55 10             	mov    DWORD PTR [ebp+0x10],edx
     700:	8b 00                	mov    eax,DWORD PTR [eax]
     702:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
     705:	83 ec 0c             	sub    esp,0xc
     708:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
     70b:	e8 72 11 00 00       	call   1882 <strlen>
     710:	83 c4 10             	add    esp,0x10
     713:	40                   	inc    eax
     714:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     717:	6a 01                	push   0x1
     719:	50                   	push   eax
     71a:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
     71d:	e8 e7 02 00 00       	call   a09 <fwrite>
     722:	83 c4 10             	add    esp,0x10
     725:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     728:	01 d0                	add    eax,edx
     72a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
     72d:	eb 4e                	jmp    77d <vfprintf+0x19d>
     72f:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
     732:	8d 50 04             	lea    edx,[eax+0x4]
     735:	89 55 10             	mov    DWORD PTR [ebp+0x10],edx
     738:	8b 00                	mov    eax,DWORD PTR [eax]
     73a:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
     73d:	83 ec 04             	sub    esp,0x4
     740:	6a 10                	push   0x10
     742:	8d 45 c0             	lea    eax,[ebp-0x40]
     745:	50                   	push   eax
     746:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
     749:	e8 2c 0b 00 00       	call   127a <itoa>
     74e:	83 c4 10             	add    esp,0x10
     751:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
     754:	83 ec 0c             	sub    esp,0xc
     757:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
     75a:	e8 23 11 00 00       	call   1882 <strlen>
     75f:	83 c4 10             	add    esp,0x10
     762:	40                   	inc    eax
     763:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     766:	6a 01                	push   0x1
     768:	50                   	push   eax
     769:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
     76c:	e8 98 02 00 00       	call   a09 <fwrite>
     771:	83 c4 10             	add    esp,0x10
     774:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     777:	01 d0                	add    eax,edx
     779:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
     77c:	90                   	nop
     77d:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
     780:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
     783:	8a 00                	mov    al,BYTE PTR [eax]
     785:	84 c0                	test   al,al
     787:	0f 85 80 fe ff ff    	jne    60d <vfprintf+0x2d>
     78d:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     790:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     793:	c9                   	leave
     794:	c3                   	ret

00000795 <fprintf>:
     795:	55                   	push   ebp
     796:	89 e5                	mov    ebp,esp
     798:	53                   	push   ebx
     799:	83 ec 14             	sub    esp,0x14
     79c:	e8 56 fd ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
     7a1:	05 b3 2e 00 00       	add    eax,0x2eb3
     7a6:	8d 55 10             	lea    edx,[ebp+0x10]
     7a9:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
     7ac:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     7af:	83 ec 04             	sub    esp,0x4
     7b2:	52                   	push   edx
     7b3:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
     7b6:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     7b9:	89 c3                	mov    ebx,eax
     7bb:	e8 20 fe ff ff       	call   5e0 <vfprintf>
     7c0:	83 c4 10             	add    esp,0x10
     7c3:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     7c6:	c9                   	leave
     7c7:	c3                   	ret

000007c8 <printf>:
     7c8:	55                   	push   ebp
     7c9:	89 e5                	mov    ebp,esp
     7cb:	53                   	push   ebx
     7cc:	83 ec 14             	sub    esp,0x14
     7cf:	e8 23 fd ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
     7d4:	05 80 2e 00 00       	add    eax,0x2e80
     7d9:	8d 55 0c             	lea    edx,[ebp+0xc]
     7dc:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
     7df:	c7 c2 94 36 00 00    	mov    edx,0x3694
     7e5:	8b 12                	mov    edx,DWORD PTR [edx]
     7e7:	83 c2 04             	add    edx,0x4
     7ea:	8b 12                	mov    edx,DWORD PTR [edx]
     7ec:	85 d2                	test   edx,edx
     7ee:	75 07                	jne    7f7 <printf+0x2f>
     7f0:	b8 00 00 00 00       	mov    eax,0x0
     7f5:	eb 22                	jmp    819 <printf+0x51>
     7f7:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
     7fa:	c7 c2 94 36 00 00    	mov    edx,0x3694
     800:	8b 12                	mov    edx,DWORD PTR [edx]
     802:	83 c2 04             	add    edx,0x4
     805:	8b 12                	mov    edx,DWORD PTR [edx]
     807:	83 ec 04             	sub    esp,0x4
     80a:	51                   	push   ecx
     80b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     80e:	52                   	push   edx
     80f:	89 c3                	mov    ebx,eax
     811:	e8 ca fd ff ff       	call   5e0 <vfprintf>
     816:	83 c4 10             	add    esp,0x10
     819:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     81c:	c9                   	leave
     81d:	c3                   	ret

0000081e <fputs>:
     81e:	55                   	push   ebp
     81f:	89 e5                	mov    ebp,esp
     821:	53                   	push   ebx
     822:	83 ec 04             	sub    esp,0x4
     825:	e8 d1 fc ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     82a:	81 c3 2a 2e 00 00    	add    ebx,0x2e2a
     830:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
     834:	75 07                	jne    83d <fputs+0x1f>
     836:	b8 00 00 00 00       	mov    eax,0x0
     83b:	eb 1f                	jmp    85c <fputs+0x3e>
     83d:	83 ec 0c             	sub    esp,0xc
     840:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     843:	e8 3a 10 00 00       	call   1882 <strlen>
     848:	83 c4 10             	add    esp,0x10
     84b:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
     84e:	6a 01                	push   0x1
     850:	50                   	push   eax
     851:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     854:	e8 b0 01 00 00       	call   a09 <fwrite>
     859:	83 c4 10             	add    esp,0x10
     85c:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     85f:	c9                   	leave
     860:	c3                   	ret

00000861 <puts>:
     861:	55                   	push   ebp
     862:	89 e5                	mov    ebp,esp
     864:	53                   	push   ebx
     865:	83 ec 14             	sub    esp,0x14
     868:	e8 8e fc ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     86d:	81 c3 e7 2d 00 00    	add    ebx,0x2de7
     873:	c7 c0 94 36 00 00    	mov    eax,0x3694
     879:	8b 00                	mov    eax,DWORD PTR [eax]
     87b:	83 c0 04             	add    eax,0x4
     87e:	8b 00                	mov    eax,DWORD PTR [eax]
     880:	83 ec 08             	sub    esp,0x8
     883:	50                   	push   eax
     884:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     887:	e8 92 ff ff ff       	call   81e <fputs>
     88c:	83 c4 10             	add    esp,0x10
     88f:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
     892:	c7 c0 94 36 00 00    	mov    eax,0x3694
     898:	8b 00                	mov    eax,DWORD PTR [eax]
     89a:	83 c0 04             	add    eax,0x4
     89d:	8b 00                	mov    eax,DWORD PTR [eax]
     89f:	50                   	push   eax
     8a0:	6a 01                	push   0x1
     8a2:	6a 01                	push   0x1
     8a4:	8d 83 a2 ef ff ff    	lea    eax,[ebx-0x105e]
     8aa:	50                   	push   eax
     8ab:	e8 59 01 00 00       	call   a09 <fwrite>
     8b0:	83 c4 10             	add    esp,0x10
     8b3:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     8b6:	40                   	inc    eax
     8b7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     8ba:	c9                   	leave
     8bb:	c3                   	ret

000008bc <fopen>:
     8bc:	55                   	push   ebp
     8bd:	89 e5                	mov    ebp,esp
     8bf:	56                   	push   esi
     8c0:	53                   	push   ebx
     8c1:	83 ec 10             	sub    esp,0x10
     8c4:	e8 32 fc ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     8c9:	81 c3 8b 2d 00 00    	add    ebx,0x2d8b
     8cf:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
     8d6:	eb 19                	jmp    8f1 <fopen+0x35>
     8d8:	c7 c0 94 36 00 00    	mov    eax,0x3694
     8de:	8b 00                	mov    eax,DWORD PTR [eax]
     8e0:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     8e3:	c1 e2 02             	shl    edx,0x2
     8e6:	01 d0                	add    eax,edx
     8e8:	8b 00                	mov    eax,DWORD PTR [eax]
     8ea:	85 c0                	test   eax,eax
     8ec:	74 0b                	je     8f9 <fopen+0x3d>
     8ee:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
     8f1:	83 7d f4 09          	cmp    DWORD PTR [ebp-0xc],0x9
     8f5:	7e e1                	jle    8d8 <fopen+0x1c>
     8f7:	eb 01                	jmp    8fa <fopen+0x3e>
     8f9:	90                   	nop
     8fa:	83 7d f4 0a          	cmp    DWORD PTR [ebp-0xc],0xa
     8fe:	75 07                	jne    907 <fopen+0x4b>
     900:	b8 00 00 00 00       	mov    eax,0x0
     905:	eb 65                	jmp    96c <fopen+0xb0>
     907:	83 ec 08             	sub    esp,0x8
     90a:	6a 03                	push   0x3
     90c:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     90f:	e8 bf 16 00 00       	call   1fd3 <open>
     914:	83 c4 10             	add    esp,0x10
     917:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
     91a:	83 7d f0 ff          	cmp    DWORD PTR [ebp-0x10],0xffffffff
     91e:	75 19                	jne    939 <fopen+0x7d>
     920:	83 ec 0c             	sub    esp,0xc
     923:	8d 83 a4 ef ff ff    	lea    eax,[ebx-0x105c]
     929:	50                   	push   eax
     92a:	e8 99 fe ff ff       	call   7c8 <printf>
     92f:	83 c4 10             	add    esp,0x10
     932:	b8 00 00 00 00       	mov    eax,0x0
     937:	eb 33                	jmp    96c <fopen+0xb0>
     939:	c7 c0 94 36 00 00    	mov    eax,0x3694
     93f:	8b 00                	mov    eax,DWORD PTR [eax]
     941:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     944:	c1 e2 02             	shl    edx,0x2
     947:	8d 34 10             	lea    esi,[eax+edx*1]
     94a:	83 ec 0c             	sub    esp,0xc
     94d:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
     950:	e8 aa fb ff ff       	call   4ff <internal_createFileFD>
     955:	83 c4 10             	add    esp,0x10
     958:	89 06                	mov    DWORD PTR [esi],eax
     95a:	c7 c0 94 36 00 00    	mov    eax,0x3694
     960:	8b 00                	mov    eax,DWORD PTR [eax]
     962:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     965:	c1 e2 02             	shl    edx,0x2
     968:	01 d0                	add    eax,edx
     96a:	8b 00                	mov    eax,DWORD PTR [eax]
     96c:	8d 65 f8             	lea    esp,[ebp-0x8]
     96f:	5b                   	pop    ebx
     970:	5e                   	pop    esi
     971:	5d                   	pop    ebp
     972:	c3                   	ret

00000973 <fclose>:
     973:	55                   	push   ebp
     974:	89 e5                	mov    ebp,esp
     976:	53                   	push   ebx
     977:	83 ec 14             	sub    esp,0x14
     97a:	e8 7c fb ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     97f:	81 c3 d5 2c 00 00    	add    ebx,0x2cd5
     985:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
     98c:	eb 6b                	jmp    9f9 <fclose+0x86>
     98e:	c7 c0 94 36 00 00    	mov    eax,0x3694
     994:	8b 00                	mov    eax,DWORD PTR [eax]
     996:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     999:	c1 e2 02             	shl    edx,0x2
     99c:	01 d0                	add    eax,edx
     99e:	8b 00                	mov    eax,DWORD PTR [eax]
     9a0:	39 45 08             	cmp    DWORD PTR [ebp+0x8],eax
     9a3:	75 51                	jne    9f6 <fclose+0x83>
     9a5:	c7 c0 94 36 00 00    	mov    eax,0x3694
     9ab:	8b 00                	mov    eax,DWORD PTR [eax]
     9ad:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     9b0:	c1 e2 02             	shl    edx,0x2
     9b3:	01 d0                	add    eax,edx
     9b5:	8b 00                	mov    eax,DWORD PTR [eax]
     9b7:	8b 00                	mov    eax,DWORD PTR [eax]
     9b9:	85 c0                	test   eax,eax
     9bb:	75 21                	jne    9de <fclose+0x6b>
     9bd:	c7 c0 94 36 00 00    	mov    eax,0x3694
     9c3:	8b 00                	mov    eax,DWORD PTR [eax]
     9c5:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     9c8:	c1 e2 02             	shl    edx,0x2
     9cb:	01 d0                	add    eax,edx
     9cd:	8b 00                	mov    eax,DWORD PTR [eax]
     9cf:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
     9d2:	83 ec 0c             	sub    esp,0xc
     9d5:	50                   	push   eax
     9d6:	e8 1c 16 00 00       	call   1ff7 <close>
     9db:	83 c4 10             	add    esp,0x10
     9de:	c7 c0 94 36 00 00    	mov    eax,0x3694
     9e4:	8b 00                	mov    eax,DWORD PTR [eax]
     9e6:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     9e9:	c1 e2 02             	shl    edx,0x2
     9ec:	01 d0                	add    eax,edx
     9ee:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
     9f4:	eb 09                	jmp    9ff <fclose+0x8c>
     9f6:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
     9f9:	83 7d f4 09          	cmp    DWORD PTR [ebp-0xc],0x9
     9fd:	7e 8f                	jle    98e <fclose+0x1b>
     9ff:	b8 00 00 00 00       	mov    eax,0x0
     a04:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     a07:	c9                   	leave
     a08:	c3                   	ret

00000a09 <fwrite>:
     a09:	55                   	push   ebp
     a0a:	89 e5                	mov    ebp,esp
     a0c:	53                   	push   ebx
     a0d:	83 ec 14             	sub    esp,0x14
     a10:	e8 e6 fa ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     a15:	81 c3 3f 2c 00 00    	add    ebx,0x2c3f
     a1b:	83 7d 14 00          	cmp    DWORD PTR [ebp+0x14],0x0
     a1f:	74 06                	je     a27 <fwrite+0x1e>
     a21:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
     a25:	75 07                	jne    a2e <fwrite+0x25>
     a27:	b8 00 00 00 00       	mov    eax,0x0
     a2c:	eb 49                	jmp    a77 <fwrite+0x6e>
     a2e:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
     a35:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
     a3c:	eb 2e                	jmp    a6c <fwrite+0x63>
     a3e:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
     a41:	8b 00                	mov    eax,DWORD PTR [eax]
     a43:	85 c0                	test   eax,eax
     a45:	75 22                	jne    a69 <fwrite+0x60>
     a47:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
     a4a:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
     a4d:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
     a50:	83 ec 04             	sub    esp,0x4
     a53:	52                   	push   edx
     a54:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     a57:	50                   	push   eax
     a58:	e8 e3 15 00 00       	call   2040 <write>
     a5d:	83 c4 10             	add    esp,0x10
     a60:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
     a63:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
     a66:	01 45 f4             	add    DWORD PTR [ebp-0xc],eax
     a69:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
     a6c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
     a6f:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
     a72:	72 ca                	jb     a3e <fwrite+0x35>
     a74:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     a77:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     a7a:	c9                   	leave
     a7b:	c3                   	ret

00000a7c <fread>:
     a7c:	55                   	push   ebp
     a7d:	89 e5                	mov    ebp,esp
     a7f:	53                   	push   ebx
     a80:	83 ec 14             	sub    esp,0x14
     a83:	e8 73 fa ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     a88:	81 c3 cc 2b 00 00    	add    ebx,0x2bcc
     a8e:	83 7d 14 00          	cmp    DWORD PTR [ebp+0x14],0x0
     a92:	74 06                	je     a9a <fread+0x1e>
     a94:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
     a98:	75 07                	jne    aa1 <fread+0x25>
     a9a:	b8 00 00 00 00       	mov    eax,0x0
     a9f:	eb 4f                	jmp    af0 <fread+0x74>
     aa1:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
     aa8:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
     aaf:	eb 34                	jmp    ae5 <fread+0x69>
     ab1:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
     ab4:	8b 00                	mov    eax,DWORD PTR [eax]
     ab6:	85 c0                	test   eax,eax
     ab8:	75 28                	jne    ae2 <fread+0x66>
     aba:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
     abd:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     ac0:	0f af 45 0c          	imul   eax,DWORD PTR [ebp+0xc]
     ac4:	89 c1                	mov    ecx,eax
     ac6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
     ac9:	01 c1                	add    ecx,eax
     acb:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
     ace:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
     ad1:	83 ec 04             	sub    esp,0x4
     ad4:	52                   	push   edx
     ad5:	51                   	push   ecx
     ad6:	50                   	push   eax
     ad7:	e8 3b 15 00 00       	call   2017 <read>
     adc:	83 c4 10             	add    esp,0x10
     adf:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
     ae2:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
     ae5:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
     ae8:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
     aeb:	72 c4                	jb     ab1 <fread+0x35>
     aed:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     af0:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     af3:	c9                   	leave
     af4:	c3                   	ret

00000af5 <feof>:
     af5:	55                   	push   ebp
     af6:	89 e5                	mov    ebp,esp
     af8:	53                   	push   ebx
     af9:	83 ec 14             	sub    esp,0x14
     afc:	e8 fa f9 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     b01:	81 c3 53 2b 00 00    	add    ebx,0x2b53
     b07:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
     b0b:	75 07                	jne    b14 <feof+0x1f>
     b0d:	b8 01 00 00 00       	mov    eax,0x1
     b12:	eb 68                	jmp    b7c <feof+0x87>
     b14:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
     b17:	8b 00                	mov    eax,DWORD PTR [eax]
     b19:	85 c0                	test   eax,eax
     b1b:	75 5f                	jne    b7c <feof+0x87>
     b1d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
     b20:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
     b23:	83 ec 04             	sub    esp,0x4
     b26:	6a 01                	push   0x1
     b28:	6a 00                	push   0x0
     b2a:	50                   	push   eax
     b2b:	e8 39 15 00 00       	call   2069 <lseek>
     b30:	83 c4 10             	add    esp,0x10
     b33:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
     b36:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
     b39:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
     b3c:	83 ec 04             	sub    esp,0x4
     b3f:	6a 02                	push   0x2
     b41:	6a 00                	push   0x0
     b43:	50                   	push   eax
     b44:	e8 20 15 00 00       	call   2069 <lseek>
     b49:	83 c4 10             	add    esp,0x10
     b4c:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
     b4f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
     b52:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
     b55:	83 ec 04             	sub    esp,0x4
     b58:	6a 00                	push   0x0
     b5a:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
     b5d:	50                   	push   eax
     b5e:	e8 06 15 00 00       	call   2069 <lseek>
     b63:	83 c4 10             	add    esp,0x10
     b66:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     b69:	3b 45 f0             	cmp    eax,DWORD PTR [ebp-0x10]
     b6c:	7c 07                	jl     b75 <feof+0x80>
     b6e:	b8 01 00 00 00       	mov    eax,0x1
     b73:	eb 07                	jmp    b7c <feof+0x87>
     b75:	b8 00 00 00 00       	mov    eax,0x0
     b7a:	eb 00                	jmp    b7c <feof+0x87>
     b7c:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     b7f:	c9                   	leave
     b80:	c3                   	ret

00000b81 <ftell>:
     b81:	55                   	push   ebp
     b82:	89 e5                	mov    ebp,esp
     b84:	53                   	push   ebx
     b85:	83 ec 04             	sub    esp,0x4
     b88:	e8 6a f9 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
     b8d:	05 c7 2a 00 00       	add    eax,0x2ac7
     b92:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
     b96:	75 07                	jne    b9f <ftell+0x1e>
     b98:	b8 00 00 00 00       	mov    eax,0x0
     b9d:	eb 28                	jmp    bc7 <ftell+0x46>
     b9f:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
     ba2:	8b 12                	mov    edx,DWORD PTR [edx]
     ba4:	85 d2                	test   edx,edx
     ba6:	75 1a                	jne    bc2 <ftell+0x41>
     ba8:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
     bab:	8b 52 04             	mov    edx,DWORD PTR [edx+0x4]
     bae:	83 ec 04             	sub    esp,0x4
     bb1:	6a 01                	push   0x1
     bb3:	6a 00                	push   0x0
     bb5:	52                   	push   edx
     bb6:	89 c3                	mov    ebx,eax
     bb8:	e8 ac 14 00 00       	call   2069 <lseek>
     bbd:	83 c4 10             	add    esp,0x10
     bc0:	eb 05                	jmp    bc7 <ftell+0x46>
     bc2:	b8 00 00 00 00       	mov    eax,0x0
     bc7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     bca:	c9                   	leave
     bcb:	c3                   	ret

00000bcc <fseek>:
     bcc:	55                   	push   ebp
     bcd:	89 e5                	mov    ebp,esp
     bcf:	53                   	push   ebx
     bd0:	83 ec 04             	sub    esp,0x4
     bd3:	e8 1f f9 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
     bd8:	05 7c 2a 00 00       	add    eax,0x2a7c
     bdd:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
     be1:	75 07                	jne    bea <fseek+0x1e>
     be3:	b8 ff ff ff ff       	mov    eax,0xffffffff
     be8:	eb 2f                	jmp    c19 <fseek+0x4d>
     bea:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
     bed:	8b 12                	mov    edx,DWORD PTR [edx]
     bef:	85 d2                	test   edx,edx
     bf1:	75 21                	jne    c14 <fseek+0x48>
     bf3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
     bf6:	8b 52 04             	mov    edx,DWORD PTR [edx+0x4]
     bf9:	83 ec 04             	sub    esp,0x4
     bfc:	ff 75 10             	push   DWORD PTR [ebp+0x10]
     bff:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
     c02:	52                   	push   edx
     c03:	89 c3                	mov    ebx,eax
     c05:	e8 5f 14 00 00       	call   2069 <lseek>
     c0a:	83 c4 10             	add    esp,0x10
     c0d:	b8 00 00 00 00       	mov    eax,0x0
     c12:	eb 05                	jmp    c19 <fseek+0x4d>
     c14:	b8 ff ff ff ff       	mov    eax,0xffffffff
     c19:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     c1c:	c9                   	leave
     c1d:	c3                   	ret

00000c1e <freopen>:
     c1e:	55                   	push   ebp
     c1f:	89 e5                	mov    ebp,esp
     c21:	56                   	push   esi
     c22:	53                   	push   ebx
     c23:	83 ec 10             	sub    esp,0x10
     c26:	e8 d0 f8 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     c2b:	81 c3 29 2a 00 00    	add    ebx,0x2a29
     c31:	c7 45 f4 ff ff ff ff 	mov    DWORD PTR [ebp-0xc],0xffffffff
     c38:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
     c3f:	eb 22                	jmp    c63 <freopen+0x45>
     c41:	c7 c0 94 36 00 00    	mov    eax,0x3694
     c47:	8b 00                	mov    eax,DWORD PTR [eax]
     c49:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
     c4c:	c1 e2 02             	shl    edx,0x2
     c4f:	01 d0                	add    eax,edx
     c51:	8b 00                	mov    eax,DWORD PTR [eax]
     c53:	39 45 10             	cmp    DWORD PTR [ebp+0x10],eax
     c56:	75 08                	jne    c60 <freopen+0x42>
     c58:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
     c5b:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
     c5e:	eb 10                	jmp    c70 <freopen+0x52>
     c60:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
     c63:	c7 c0 98 36 00 00    	mov    eax,0x3698
     c69:	8b 00                	mov    eax,DWORD PTR [eax]
     c6b:	39 45 f0             	cmp    DWORD PTR [ebp-0x10],eax
     c6e:	7c d1                	jl     c41 <freopen+0x23>
     c70:	83 7d f4 ff          	cmp    DWORD PTR [ebp-0xc],0xffffffff
     c74:	74 51                	je     cc7 <freopen+0xa9>
     c76:	83 ec 0c             	sub    esp,0xc
     c79:	ff 75 10             	push   DWORD PTR [ebp+0x10]
     c7c:	e8 f2 fc ff ff       	call   973 <fclose>
     c81:	83 c4 10             	add    esp,0x10
     c84:	83 ec 08             	sub    esp,0x8
     c87:	6a 03                	push   0x3
     c89:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     c8c:	e8 42 13 00 00       	call   1fd3 <open>
     c91:	83 c4 10             	add    esp,0x10
     c94:	c7 c2 94 36 00 00    	mov    edx,0x3694
     c9a:	8b 12                	mov    edx,DWORD PTR [edx]
     c9c:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
     c9f:	c1 e1 02             	shl    ecx,0x2
     ca2:	8d 34 0a             	lea    esi,[edx+ecx*1]
     ca5:	83 ec 0c             	sub    esp,0xc
     ca8:	50                   	push   eax
     ca9:	e8 51 f8 ff ff       	call   4ff <internal_createFileFD>
     cae:	83 c4 10             	add    esp,0x10
     cb1:	89 06                	mov    DWORD PTR [esi],eax
     cb3:	c7 c0 94 36 00 00    	mov    eax,0x3694
     cb9:	8b 00                	mov    eax,DWORD PTR [eax]
     cbb:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     cbe:	c1 e2 02             	shl    edx,0x2
     cc1:	01 d0                	add    eax,edx
     cc3:	8b 00                	mov    eax,DWORD PTR [eax]
     cc5:	eb 11                	jmp    cd8 <freopen+0xba>
     cc7:	83 ec 08             	sub    esp,0x8
     cca:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
     ccd:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     cd0:	e8 e7 fb ff ff       	call   8bc <fopen>
     cd5:	83 c4 10             	add    esp,0x10
     cd8:	8d 65 f8             	lea    esp,[ebp-0x8]
     cdb:	5b                   	pop    ebx
     cdc:	5e                   	pop    esi
     cdd:	5d                   	pop    ebp
     cde:	c3                   	ret

00000cdf <fputc>:
     cdf:	55                   	push   ebp
     ce0:	89 e5                	mov    ebp,esp
     ce2:	53                   	push   ebx
     ce3:	83 ec 14             	sub    esp,0x14
     ce6:	e8 0c f8 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
     ceb:	05 69 29 00 00       	add    eax,0x2969
     cf0:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
     cf3:	88 55 f7             	mov    BYTE PTR [ebp-0x9],dl
     cf6:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
     cf9:	6a 01                	push   0x1
     cfb:	6a 01                	push   0x1
     cfd:	8d 55 f7             	lea    edx,[ebp-0x9]
     d00:	52                   	push   edx
     d01:	89 c3                	mov    ebx,eax
     d03:	e8 01 fd ff ff       	call   a09 <fwrite>
     d08:	83 c4 10             	add    esp,0x10
     d0b:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     d0e:	c9                   	leave
     d0f:	c3                   	ret

00000d10 <putc>:
     d10:	55                   	push   ebp
     d11:	89 e5                	mov    ebp,esp
     d13:	53                   	push   ebx
     d14:	83 ec 04             	sub    esp,0x4
     d17:	e8 db f7 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
     d1c:	05 38 29 00 00       	add    eax,0x2938
     d21:	83 ec 08             	sub    esp,0x8
     d24:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
     d27:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     d2a:	89 c3                	mov    ebx,eax
     d2c:	e8 ae ff ff ff       	call   cdf <fputc>
     d31:	83 c4 10             	add    esp,0x10
     d34:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     d37:	c9                   	leave
     d38:	c3                   	ret

00000d39 <putchar>:
     d39:	55                   	push   ebp
     d3a:	89 e5                	mov    ebp,esp
     d3c:	53                   	push   ebx
     d3d:	83 ec 04             	sub    esp,0x4
     d40:	e8 b2 f7 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
     d45:	05 0f 29 00 00       	add    eax,0x290f
     d4a:	c7 c2 94 36 00 00    	mov    edx,0x3694
     d50:	8b 12                	mov    edx,DWORD PTR [edx]
     d52:	83 c2 04             	add    edx,0x4
     d55:	8b 12                	mov    edx,DWORD PTR [edx]
     d57:	83 ec 08             	sub    esp,0x8
     d5a:	52                   	push   edx
     d5b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
     d5e:	89 c3                	mov    ebx,eax
     d60:	e8 ab ff ff ff       	call   d10 <putc>
     d65:	83 c4 10             	add    esp,0x10
     d68:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     d6b:	c9                   	leave
     d6c:	c3                   	ret

00000d6d <snprintf>:
     d6d:	55                   	push   ebp
     d6e:	89 e5                	mov    ebp,esp
     d70:	53                   	push   ebx
     d71:	81 ec a4 00 00 00    	sub    esp,0xa4
     d77:	e8 7f f7 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     d7c:	81 c3 d8 28 00 00    	add    ebx,0x28d8
     d82:	8d 45 14             	lea    eax,[ebp+0x14]
     d85:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
     d88:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
     d8c:	74 0c                	je     d9a <snprintf+0x2d>
     d8e:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
     d92:	74 06                	je     d9a <snprintf+0x2d>
     d94:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
     d98:	75 0a                	jne    da4 <snprintf+0x37>
     d9a:	b8 00 00 00 00       	mov    eax,0x0
     d9f:	e9 e4 01 00 00       	jmp    f88 <snprintf+0x21b>
     da4:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
     dab:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
     db2:	e9 b9 01 00 00       	jmp    f70 <snprintf+0x203>
     db7:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
     dba:	8a 00                	mov    al,BYTE PTR [eax]
     dbc:	3c 25                	cmp    al,0x25
     dbe:	74 25                	je     de5 <snprintf+0x78>
     dc0:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
     dc3:	8d 50 01             	lea    edx,[eax+0x1]
     dc6:	89 55 10             	mov    DWORD PTR [ebp+0x10],edx
     dc9:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
     dcc:	8d 4a 01             	lea    ecx,[edx+0x1]
     dcf:	89 4d f4             	mov    DWORD PTR [ebp-0xc],ecx
     dd2:	89 d1                	mov    ecx,edx
     dd4:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
     dd7:	01 ca                	add    edx,ecx
     dd9:	8a 00                	mov    al,BYTE PTR [eax]
     ddb:	88 02                	mov    BYTE PTR [edx],al
     ddd:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
     de0:	e9 8b 01 00 00       	jmp    f70 <snprintf+0x203>
     de5:	ff 45 10             	inc    DWORD PTR [ebp+0x10]
     de8:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
     deb:	8a 00                	mov    al,BYTE PTR [eax]
     ded:	0f be c0             	movsx  eax,al
     df0:	83 f8 78             	cmp    eax,0x78
     df3:	0f 84 f6 00 00 00    	je     eef <snprintf+0x182>
     df9:	83 f8 78             	cmp    eax,0x78
     dfc:	0f 8f 6b 01 00 00    	jg     f6d <snprintf+0x200>
     e02:	83 f8 64             	cmp    eax,0x64
     e05:	74 6d                	je     e74 <snprintf+0x107>
     e07:	83 f8 73             	cmp    eax,0x73
     e0a:	0f 85 5d 01 00 00    	jne    f6d <snprintf+0x200>
     e10:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
     e13:	8d 50 04             	lea    edx,[eax+0x4]
     e16:	89 55 c8             	mov    DWORD PTR [ebp-0x38],edx
     e19:	8b 00                	mov    eax,DWORD PTR [eax]
     e1b:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
     e1e:	83 ec 0c             	sub    esp,0xc
     e21:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
     e24:	e8 59 0a 00 00       	call   1882 <strlen>
     e29:	83 c4 10             	add    esp,0x10
     e2c:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
     e2f:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
     e36:	eb 23                	jmp    e5b <snprintf+0xee>
     e38:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
     e3b:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
     e3e:	8d 0c 02             	lea    ecx,[edx+eax*1]
     e41:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     e44:	8d 50 01             	lea    edx,[eax+0x1]
     e47:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
     e4a:	89 c2                	mov    edx,eax
     e4c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
     e4f:	01 c2                	add    edx,eax
     e51:	8a 01                	mov    al,BYTE PTR [ecx]
     e53:	88 02                	mov    BYTE PTR [edx],al
     e55:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
     e58:	ff 45 ec             	inc    DWORD PTR [ebp-0x14]
     e5b:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
     e5e:	3b 45 d4             	cmp    eax,DWORD PTR [ebp-0x2c]
     e61:	0f 8d ff 00 00 00    	jge    f66 <snprintf+0x1f9>
     e67:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
     e6a:	3b 45 0c             	cmp    eax,DWORD PTR [ebp+0xc]
     e6d:	72 c9                	jb     e38 <snprintf+0xcb>
     e6f:	e9 f2 00 00 00       	jmp    f66 <snprintf+0x1f9>
     e74:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
     e77:	8d 50 04             	lea    edx,[eax+0x4]
     e7a:	89 55 c8             	mov    DWORD PTR [ebp-0x38],edx
     e7d:	8b 00                	mov    eax,DWORD PTR [eax]
     e7f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
     e82:	83 ec 04             	sub    esp,0x4
     e85:	6a 0a                	push   0xa
     e87:	8d 85 64 ff ff ff    	lea    eax,[ebp-0x9c]
     e8d:	50                   	push   eax
     e8e:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
     e91:	e8 e4 03 00 00       	call   127a <itoa>
     e96:	83 c4 10             	add    esp,0x10
     e99:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
     e9c:	83 ec 0c             	sub    esp,0xc
     e9f:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
     ea2:	e8 db 09 00 00       	call   1882 <strlen>
     ea7:	83 c4 10             	add    esp,0x10
     eaa:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
     ead:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [ebp-0x18],0x0
     eb4:	eb 23                	jmp    ed9 <snprintf+0x16c>
     eb6:	8b 55 e8             	mov    edx,DWORD PTR [ebp-0x18]
     eb9:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
     ebc:	8d 0c 02             	lea    ecx,[edx+eax*1]
     ebf:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     ec2:	8d 50 01             	lea    edx,[eax+0x1]
     ec5:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
     ec8:	89 c2                	mov    edx,eax
     eca:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
     ecd:	01 c2                	add    edx,eax
     ecf:	8a 01                	mov    al,BYTE PTR [ecx]
     ed1:	88 02                	mov    BYTE PTR [edx],al
     ed3:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
     ed6:	ff 45 e8             	inc    DWORD PTR [ebp-0x18]
     ed9:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
     edc:	3b 45 cc             	cmp    eax,DWORD PTR [ebp-0x34]
     edf:	0f 8d 84 00 00 00    	jge    f69 <snprintf+0x1fc>
     ee5:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
     ee8:	3b 45 0c             	cmp    eax,DWORD PTR [ebp+0xc]
     eeb:	72 c9                	jb     eb6 <snprintf+0x149>
     eed:	eb 7a                	jmp    f69 <snprintf+0x1fc>
     eef:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
     ef2:	8d 50 04             	lea    edx,[eax+0x4]
     ef5:	89 55 c8             	mov    DWORD PTR [ebp-0x38],edx
     ef8:	8b 00                	mov    eax,DWORD PTR [eax]
     efa:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
     efd:	83 ec 04             	sub    esp,0x4
     f00:	6a 10                	push   0x10
     f02:	8d 85 64 ff ff ff    	lea    eax,[ebp-0x9c]
     f08:	50                   	push   eax
     f09:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
     f0c:	e8 69 03 00 00       	call   127a <itoa>
     f11:	83 c4 10             	add    esp,0x10
     f14:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
     f17:	83 ec 0c             	sub    esp,0xc
     f1a:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
     f1d:	e8 60 09 00 00       	call   1882 <strlen>
     f22:	83 c4 10             	add    esp,0x10
     f25:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
     f28:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
     f2f:	eb 23                	jmp    f54 <snprintf+0x1e7>
     f31:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
     f34:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
     f37:	8d 0c 02             	lea    ecx,[edx+eax*1]
     f3a:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
     f3d:	8d 50 01             	lea    edx,[eax+0x1]
     f40:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
     f43:	89 c2                	mov    edx,eax
     f45:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
     f48:	01 c2                	add    edx,eax
     f4a:	8a 01                	mov    al,BYTE PTR [ecx]
     f4c:	88 02                	mov    BYTE PTR [edx],al
     f4e:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
     f51:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
     f54:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
     f57:	3b 45 d8             	cmp    eax,DWORD PTR [ebp-0x28]
     f5a:	7d 10                	jge    f6c <snprintf+0x1ff>
     f5c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
     f5f:	3b 45 0c             	cmp    eax,DWORD PTR [ebp+0xc]
     f62:	72 cd                	jb     f31 <snprintf+0x1c4>
     f64:	eb 06                	jmp    f6c <snprintf+0x1ff>
     f66:	90                   	nop
     f67:	eb 04                	jmp    f6d <snprintf+0x200>
     f69:	90                   	nop
     f6a:	eb 01                	jmp    f6d <snprintf+0x200>
     f6c:	90                   	nop
     f6d:	ff 45 10             	inc    DWORD PTR [ebp+0x10]
     f70:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
     f73:	8a 00                	mov    al,BYTE PTR [eax]
     f75:	84 c0                	test   al,al
     f77:	74 0c                	je     f85 <snprintf+0x218>
     f79:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
     f7c:	3b 45 0c             	cmp    eax,DWORD PTR [ebp+0xc]
     f7f:	0f 82 32 fe ff ff    	jb     db7 <snprintf+0x4a>
     f85:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
     f88:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     f8b:	c9                   	leave
     f8c:	c3                   	ret

00000f8d <init_stdlib>:
     f8d:	55                   	push   ebp
     f8e:	89 e5                	mov    ebp,esp
     f90:	53                   	push   ebx
     f91:	83 ec 04             	sub    esp,0x4
     f94:	e8 62 f5 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
     f99:	81 c3 bb 26 00 00    	add    ebx,0x26bb
     f9f:	c7 c0 9c 36 00 00    	mov    eax,0x369c
     fa5:	c7 40 04 00 00 00 01 	mov    DWORD PTR [eax+0x4],0x1000000
     fac:	c7 c0 9c 36 00 00    	mov    eax,0x369c
     fb2:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
     fb5:	83 ec 0c             	sub    esp,0xc
     fb8:	50                   	push   eax
     fb9:	e8 15 11 00 00       	call   20d3 <memory_requestRegion>
     fbe:	83 c4 10             	add    esp,0x10
     fc1:	c7 c2 9c 36 00 00    	mov    edx,0x369c
     fc7:	89 02                	mov    DWORD PTR [edx],eax
     fc9:	c7 c0 9c 36 00 00    	mov    eax,0x369c
     fcf:	8b 10                	mov    edx,DWORD PTR [eax]
     fd1:	c7 c0 9c 36 00 00    	mov    eax,0x369c
     fd7:	89 50 08             	mov    DWORD PTR [eax+0x8],edx
     fda:	c7 c0 9c 36 00 00    	mov    eax,0x369c
     fe0:	8b 50 08             	mov    edx,DWORD PTR [eax+0x8]
     fe3:	c7 c0 a8 36 00 00    	mov    eax,0x36a8
     fe9:	89 10                	mov    DWORD PTR [eax],edx
     feb:	90                   	nop
     fec:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
     fef:	c9                   	leave
     ff0:	c3                   	ret

00000ff1 <clean_stdlib>:
     ff1:	55                   	push   ebp
     ff2:	89 e5                	mov    ebp,esp
     ff4:	53                   	push   ebx
     ff5:	83 ec 04             	sub    esp,0x4
     ff8:	e8 fa f4 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
     ffd:	05 57 26 00 00       	add    eax,0x2657
    1002:	c7 c2 9c 36 00 00    	mov    edx,0x369c
    1008:	8b 52 04             	mov    edx,DWORD PTR [edx+0x4]
    100b:	89 d1                	mov    ecx,edx
    100d:	c7 c2 9c 36 00 00    	mov    edx,0x369c
    1013:	8b 12                	mov    edx,DWORD PTR [edx]
    1015:	83 ec 08             	sub    esp,0x8
    1018:	51                   	push   ecx
    1019:	52                   	push   edx
    101a:	89 c3                	mov    ebx,eax
    101c:	e8 cf 10 00 00       	call   20f0 <memory_returnRegion>
    1021:	83 c4 10             	add    esp,0x10
    1024:	90                   	nop
    1025:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1028:	c9                   	leave
    1029:	c3                   	ret

0000102a <malloc>:
    102a:	55                   	push   ebp
    102b:	89 e5                	mov    ebp,esp
    102d:	53                   	push   ebx
    102e:	83 ec 14             	sub    esp,0x14
    1031:	e8 c1 f4 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    1036:	05 1e 26 00 00       	add    eax,0x261e
    103b:	c7 c2 a8 36 00 00    	mov    edx,0x36a8
    1041:	8b 12                	mov    edx,DWORD PTR [edx]
    1043:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
    1046:	c7 c2 a8 36 00 00    	mov    edx,0x36a8
    104c:	8b 12                	mov    edx,DWORD PTR [edx]
    104e:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
    1051:	83 c1 10             	add    ecx,0x10
    1054:	01 d1                	add    ecx,edx
    1056:	c7 c2 a8 36 00 00    	mov    edx,0x36a8
    105c:	89 0a                	mov    DWORD PTR [edx],ecx
    105e:	c7 c2 a8 36 00 00    	mov    edx,0x36a8
    1064:	8b 0a                	mov    ecx,DWORD PTR [edx]
    1066:	c7 c2 9c 36 00 00    	mov    edx,0x369c
    106c:	8b 1a                	mov    ebx,DWORD PTR [edx]
    106e:	c7 c2 9c 36 00 00    	mov    edx,0x369c
    1074:	8b 52 04             	mov    edx,DWORD PTR [edx+0x4]
    1077:	01 da                	add    edx,ebx
    1079:	39 d1                	cmp    ecx,edx
    107b:	72 16                	jb     1093 <malloc+0x69>
    107d:	83 ec 0c             	sub    esp,0xc
    1080:	8d 90 b4 ef ff ff    	lea    edx,[eax-0x104c]
    1086:	52                   	push   edx
    1087:	89 c3                	mov    ebx,eax
    1089:	e8 3a f7 ff ff       	call   7c8 <printf>
    108e:	83 c4 10             	add    esp,0x10
    1091:	eb fe                	jmp    1091 <malloc+0x67>
    1093:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1096:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1099:	c9                   	leave
    109a:	c3                   	ret

0000109b <calloc>:
    109b:	55                   	push   ebp
    109c:	89 e5                	mov    ebp,esp
    109e:	53                   	push   ebx
    109f:	83 ec 04             	sub    esp,0x4
    10a2:	e8 50 f4 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    10a7:	05 ad 25 00 00       	add    eax,0x25ad
    10ac:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    10af:	0f af 55 0c          	imul   edx,DWORD PTR [ebp+0xc]
    10b3:	83 ec 0c             	sub    esp,0xc
    10b6:	52                   	push   edx
    10b7:	89 c3                	mov    ebx,eax
    10b9:	e8 6c ff ff ff       	call   102a <malloc>
    10be:	83 c4 10             	add    esp,0x10
    10c1:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    10c4:	c9                   	leave
    10c5:	c3                   	ret

000010c6 <free>:
    10c6:	55                   	push   ebp
    10c7:	89 e5                	mov    ebp,esp
    10c9:	e8 29 f4 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    10ce:	05 86 25 00 00       	add    eax,0x2586
    10d3:	90                   	nop
    10d4:	5d                   	pop    ebp
    10d5:	c3                   	ret

000010d6 <realloc>:
    10d6:	55                   	push   ebp
    10d7:	89 e5                	mov    ebp,esp
    10d9:	53                   	push   ebx
    10da:	83 ec 14             	sub    esp,0x14
    10dd:	e8 19 f4 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    10e2:	81 c3 72 25 00 00    	add    ebx,0x2572
    10e8:	83 ec 0c             	sub    esp,0xc
    10eb:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
    10ee:	e8 37 ff ff ff       	call   102a <malloc>
    10f3:	83 c4 10             	add    esp,0x10
    10f6:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    10f9:	83 ec 04             	sub    esp,0x4
    10fc:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
    10ff:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    1102:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
    1105:	e8 34 05 00 00       	call   163e <memcpy>
    110a:	83 c4 10             	add    esp,0x10
    110d:	83 ec 0c             	sub    esp,0xc
    1110:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    1113:	e8 ae ff ff ff       	call   10c6 <free>
    1118:	83 c4 10             	add    esp,0x10
    111b:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    111e:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1121:	c9                   	leave
    1122:	c3                   	ret

00001123 <atoi>:
    1123:	55                   	push   ebp
    1124:	89 e5                	mov    ebp,esp
    1126:	83 ec 10             	sub    esp,0x10
    1129:	e8 c9 f3 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    112e:	05 26 25 00 00       	add    eax,0x2526
    1133:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
    113a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    113d:	8a 00                	mov    al,BYTE PTR [eax]
    113f:	3c 2d                	cmp    al,0x2d
    1141:	75 2a                	jne    116d <atoi+0x4a>
    1143:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
    1146:	c6 45 fb 01          	mov    BYTE PTR [ebp-0x5],0x1
    114a:	eb 21                	jmp    116d <atoi+0x4a>
    114c:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
    114f:	89 d0                	mov    eax,edx
    1151:	c1 e0 02             	shl    eax,0x2
    1154:	01 d0                	add    eax,edx
    1156:	01 c0                	add    eax,eax
    1158:	89 c2                	mov    edx,eax
    115a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    115d:	8a 00                	mov    al,BYTE PTR [eax]
    115f:	0f be c0             	movsx  eax,al
    1162:	83 e8 30             	sub    eax,0x30
    1165:	01 d0                	add    eax,edx
    1167:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    116a:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
    116d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1170:	8a 00                	mov    al,BYTE PTR [eax]
    1172:	84 c0                	test   al,al
    1174:	74 12                	je     1188 <atoi+0x65>
    1176:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1179:	8a 00                	mov    al,BYTE PTR [eax]
    117b:	3c 20                	cmp    al,0x20
    117d:	74 09                	je     1188 <atoi+0x65>
    117f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1182:	8a 00                	mov    al,BYTE PTR [eax]
    1184:	3c 0a                	cmp    al,0xa
    1186:	75 c4                	jne    114c <atoi+0x29>
    1188:	80 7d fb 00          	cmp    BYTE PTR [ebp-0x5],0x0
    118c:	74 07                	je     1195 <atoi+0x72>
    118e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1191:	f7 d8                	neg    eax
    1193:	eb 03                	jmp    1198 <atoi+0x75>
    1195:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1198:	c9                   	leave
    1199:	c3                   	ret

0000119a <atof>:
    119a:	55                   	push   ebp
    119b:	89 e5                	mov    ebp,esp
    119d:	83 ec 18             	sub    esp,0x18
    11a0:	e8 52 f3 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    11a5:	05 af 24 00 00       	add    eax,0x24af
    11aa:	d9 ee                	fldz
    11ac:	d9 5d fc             	fstp   DWORD PTR [ebp-0x4]
    11af:	c6 45 fb 00          	mov    BYTE PTR [ebp-0x5],0x0
    11b3:	d9 e8                	fld1
    11b5:	d9 5d f4             	fstp   DWORD PTR [ebp-0xc]
    11b8:	c6 45 f3 00          	mov    BYTE PTR [ebp-0xd],0x0
    11bc:	eb 03                	jmp    11c1 <atof+0x27>
    11be:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
    11c1:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    11c4:	8a 12                	mov    dl,BYTE PTR [edx]
    11c6:	80 fa 20             	cmp    dl,0x20
    11c9:	74 f3                	je     11be <atof+0x24>
    11cb:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    11ce:	8a 12                	mov    dl,BYTE PTR [edx]
    11d0:	80 fa 2d             	cmp    dl,0x2d
    11d3:	75 72                	jne    1247 <atof+0xad>
    11d5:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
    11d8:	c6 45 f3 01          	mov    BYTE PTR [ebp-0xd],0x1
    11dc:	eb 69                	jmp    1247 <atof+0xad>
    11de:	80 7d fb 00          	cmp    BYTE PTR [ebp-0x5],0x0
    11e2:	74 2c                	je     1210 <atof+0x76>
    11e4:	d9 45 f4             	fld    DWORD PTR [ebp-0xc]
    11e7:	d9 80 d0 ef ff ff    	fld    DWORD PTR [eax-0x1030]
    11ed:	de f9                	fdivp  st(1),st
    11ef:	d9 5d f4             	fstp   DWORD PTR [ebp-0xc]
    11f2:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    11f5:	8a 12                	mov    dl,BYTE PTR [edx]
    11f7:	0f be d2             	movsx  edx,dl
    11fa:	83 ea 30             	sub    edx,0x30
    11fd:	89 55 ec             	mov    DWORD PTR [ebp-0x14],edx
    1200:	db 45 ec             	fild   DWORD PTR [ebp-0x14]
    1203:	d8 4d f4             	fmul   DWORD PTR [ebp-0xc]
    1206:	d9 45 fc             	fld    DWORD PTR [ebp-0x4]
    1209:	de c1                	faddp  st(1),st
    120b:	d9 5d fc             	fstp   DWORD PTR [ebp-0x4]
    120e:	eb 34                	jmp    1244 <atof+0xaa>
    1210:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    1213:	8a 12                	mov    dl,BYTE PTR [edx]
    1215:	80 fa 2e             	cmp    dl,0x2e
    1218:	75 09                	jne    1223 <atof+0x89>
    121a:	8a 55 fb             	mov    dl,BYTE PTR [ebp-0x5]
    121d:	42                   	inc    edx
    121e:	88 55 fb             	mov    BYTE PTR [ebp-0x5],dl
    1221:	eb 21                	jmp    1244 <atof+0xaa>
    1223:	d9 45 fc             	fld    DWORD PTR [ebp-0x4]
    1226:	dd 80 d4 ef ff ff    	fld    QWORD PTR [eax-0x102c]
    122c:	de c9                	fmulp  st(1),st
    122e:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    1231:	8a 12                	mov    dl,BYTE PTR [edx]
    1233:	0f be d2             	movsx  edx,dl
    1236:	83 ea 30             	sub    edx,0x30
    1239:	89 55 ec             	mov    DWORD PTR [ebp-0x14],edx
    123c:	db 45 ec             	fild   DWORD PTR [ebp-0x14]
    123f:	de c1                	faddp  st(1),st
    1241:	d9 5d fc             	fstp   DWORD PTR [ebp-0x4]
    1244:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
    1247:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    124a:	8a 12                	mov    dl,BYTE PTR [edx]
    124c:	84 d2                	test   dl,dl
    124e:	74 18                	je     1268 <atof+0xce>
    1250:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    1253:	8a 12                	mov    dl,BYTE PTR [edx]
    1255:	80 fa 20             	cmp    dl,0x20
    1258:	74 0e                	je     1268 <atof+0xce>
    125a:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    125d:	8a 12                	mov    dl,BYTE PTR [edx]
    125f:	80 fa 0a             	cmp    dl,0xa
    1262:	0f 85 76 ff ff ff    	jne    11de <atof+0x44>
    1268:	80 7d f3 00          	cmp    BYTE PTR [ebp-0xd],0x0
    126c:	74 07                	je     1275 <atof+0xdb>
    126e:	d9 45 fc             	fld    DWORD PTR [ebp-0x4]
    1271:	d9 e0                	fchs
    1273:	eb 03                	jmp    1278 <atof+0xde>
    1275:	d9 45 fc             	fld    DWORD PTR [ebp-0x4]
    1278:	c9                   	leave
    1279:	c3                   	ret

0000127a <itoa>:
    127a:	55                   	push   ebp
    127b:	89 e5                	mov    ebp,esp
    127d:	83 ec 10             	sub    esp,0x10
    1280:	e8 72 f2 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    1285:	05 cf 23 00 00       	add    eax,0x23cf
    128a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    128d:	85 c0                	test   eax,eax
    128f:	79 02                	jns    1293 <itoa+0x19>
    1291:	f7 d8                	neg    eax
    1293:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    1296:	83 7d fc 00          	cmp    DWORD PTR [ebp-0x4],0x0
    129a:	75 15                	jne    12b1 <itoa+0x37>
    129c:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    129f:	c6 00 30             	mov    BYTE PTR [eax],0x30
    12a2:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    12a5:	40                   	inc    eax
    12a6:	c6 00 00             	mov    BYTE PTR [eax],0x0
    12a9:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    12ac:	e9 d7 00 00 00       	jmp    1388 <itoa+0x10e>
    12b1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    12b4:	c1 e8 1f             	shr    eax,0x1f
    12b7:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
    12ba:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    12bd:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    12c0:	eb 0d                	jmp    12cf <itoa+0x55>
    12c2:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    12c5:	99                   	cdq
    12c6:	f7 7d 10             	idiv   DWORD PTR [ebp+0x10]
    12c9:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    12cc:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
    12cf:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
    12d3:	75 ed                	jne    12c2 <itoa+0x48>
    12d5:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
    12d8:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    12db:	01 d0                	add    eax,edx
    12dd:	c6 00 00             	mov    BYTE PTR [eax],0x0
    12e0:	83 7d 10 0a          	cmp    DWORD PTR [ebp+0x10],0xa
    12e4:	0f 85 89 00 00 00    	jne    1373 <itoa+0xf9>
    12ea:	eb 3a                	jmp    1326 <itoa+0xac>
    12ec:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    12ef:	b9 0a 00 00 00       	mov    ecx,0xa
    12f4:	99                   	cdq
    12f5:	f7 f9                	idiv   ecx
    12f7:	89 d0                	mov    eax,edx
    12f9:	8d 48 30             	lea    ecx,[eax+0x30]
    12fc:	ff 4d f8             	dec    DWORD PTR [ebp-0x8]
    12ff:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
    1302:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1305:	01 d0                	add    eax,edx
    1307:	88 ca                	mov    dl,cl
    1309:	88 10                	mov    BYTE PTR [eax],dl
    130b:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
    130e:	ba 67 66 66 66       	mov    edx,0x66666667
    1313:	89 c8                	mov    eax,ecx
    1315:	f7 ea                	imul   edx
    1317:	89 d0                	mov    eax,edx
    1319:	c1 f8 02             	sar    eax,0x2
    131c:	c1 f9 1f             	sar    ecx,0x1f
    131f:	89 ca                	mov    edx,ecx
    1321:	29 d0                	sub    eax,edx
    1323:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    1326:	83 7d fc 00          	cmp    DWORD PTR [ebp-0x4],0x0
    132a:	75 c0                	jne    12ec <itoa+0x72>
    132c:	eb 4b                	jmp    1379 <itoa+0xff>
    132e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1331:	83 e0 0f             	and    eax,0xf
    1334:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    1337:	83 7d f0 09          	cmp    DWORD PTR [ebp-0x10],0x9
    133b:	7e 1a                	jle    1357 <itoa+0xdd>
    133d:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1340:	83 e0 0f             	and    eax,0xf
    1343:	8d 48 37             	lea    ecx,[eax+0x37]
    1346:	ff 4d f8             	dec    DWORD PTR [ebp-0x8]
    1349:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
    134c:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    134f:	01 d0                	add    eax,edx
    1351:	88 ca                	mov    dl,cl
    1353:	88 10                	mov    BYTE PTR [eax],dl
    1355:	eb 18                	jmp    136f <itoa+0xf5>
    1357:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    135a:	83 e0 0f             	and    eax,0xf
    135d:	8d 48 30             	lea    ecx,[eax+0x30]
    1360:	ff 4d f8             	dec    DWORD PTR [ebp-0x8]
    1363:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
    1366:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1369:	01 d0                	add    eax,edx
    136b:	88 ca                	mov    dl,cl
    136d:	88 10                	mov    BYTE PTR [eax],dl
    136f:	c1 7d fc 04          	sar    DWORD PTR [ebp-0x4],0x4
    1373:	83 7d fc 00          	cmp    DWORD PTR [ebp-0x4],0x0
    1377:	75 b5                	jne    132e <itoa+0xb4>
    1379:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
    137d:	79 06                	jns    1385 <itoa+0x10b>
    137f:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1382:	c6 00 2d             	mov    BYTE PTR [eax],0x2d
    1385:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1388:	c9                   	leave
    1389:	c3                   	ret

0000138a <exit>:
    138a:	55                   	push   ebp
    138b:	89 e5                	mov    ebp,esp
    138d:	53                   	push   ebx
    138e:	e8 64 f1 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    1393:	05 c1 22 00 00       	add    eax,0x22c1
    1398:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    139b:	89 c3                	mov    ebx,eax
    139d:	b8 1f 00 00 00       	mov    eax,0x1f
    13a2:	cd 80                	int    0x80
    13a4:	90                   	nop
    13a5:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    13a8:	c9                   	leave
    13a9:	c3                   	ret

000013aa <srand>:
    13aa:	55                   	push   ebp
    13ab:	89 e5                	mov    ebp,esp
    13ad:	53                   	push   ebx
    13ae:	e8 44 f1 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    13b3:	05 a1 22 00 00       	add    eax,0x22a1
    13b8:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
    13bb:	b8 1d 00 00 00       	mov    eax,0x1d
    13c0:	cd 80                	int    0x80
    13c2:	90                   	nop
    13c3:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    13c6:	c9                   	leave
    13c7:	c3                   	ret

000013c8 <rand>:
    13c8:	55                   	push   ebp
    13c9:	89 e5                	mov    ebp,esp
    13cb:	e8 27 f1 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    13d0:	05 84 22 00 00       	add    eax,0x2284
    13d5:	b8 1e 00 00 00       	mov    eax,0x1e
    13da:	cd 80                	int    0x80
    13dc:	5d                   	pop    ebp
    13dd:	c3                   	ret

000013de <strtol>:
    13de:	55                   	push   ebp
    13df:	89 e5                	mov    ebp,esp
    13e1:	57                   	push   edi
    13e2:	56                   	push   esi
    13e3:	53                   	push   ebx
    13e4:	83 ec 2c             	sub    esp,0x2c
    13e7:	e8 0f f1 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    13ec:	81 c3 68 22 00 00    	add    ebx,0x2268
    13f2:	8b 7d 08             	mov    edi,DWORD PTR [ebp+0x8]
    13f5:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
    13fc:	89 f8                	mov    eax,edi
    13fe:	8d 78 01             	lea    edi,[eax+0x1]
    1401:	8a 00                	mov    al,BYTE PTR [eax]
    1403:	0f be f0             	movsx  esi,al
    1406:	83 fe 20             	cmp    esi,0x20
    1409:	74 f1                	je     13fc <strtol+0x1e>
    140b:	83 fe 2d             	cmp    esi,0x2d
    140e:	75 13                	jne    1423 <strtol+0x45>
    1410:	c7 45 dc 01 00 00 00 	mov    DWORD PTR [ebp-0x24],0x1
    1417:	89 f8                	mov    eax,edi
    1419:	8d 78 01             	lea    edi,[eax+0x1]
    141c:	8a 00                	mov    al,BYTE PTR [eax]
    141e:	0f be f0             	movsx  esi,al
    1421:	eb 0f                	jmp    1432 <strtol+0x54>
    1423:	83 fe 2b             	cmp    esi,0x2b
    1426:	75 0a                	jne    1432 <strtol+0x54>
    1428:	89 f8                	mov    eax,edi
    142a:	8d 78 01             	lea    edi,[eax+0x1]
    142d:	8a 00                	mov    al,BYTE PTR [eax]
    142f:	0f be f0             	movsx  esi,al
    1432:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
    1436:	74 06                	je     143e <strtol+0x60>
    1438:	83 7d 10 10          	cmp    DWORD PTR [ebp+0x10],0x10
    143c:	75 23                	jne    1461 <strtol+0x83>
    143e:	83 fe 30             	cmp    esi,0x30
    1441:	75 1e                	jne    1461 <strtol+0x83>
    1443:	8a 07                	mov    al,BYTE PTR [edi]
    1445:	3c 78                	cmp    al,0x78
    1447:	74 06                	je     144f <strtol+0x71>
    1449:	8a 07                	mov    al,BYTE PTR [edi]
    144b:	3c 58                	cmp    al,0x58
    144d:	75 12                	jne    1461 <strtol+0x83>
    144f:	8d 47 01             	lea    eax,[edi+0x1]
    1452:	8a 00                	mov    al,BYTE PTR [eax]
    1454:	0f be f0             	movsx  esi,al
    1457:	83 c7 02             	add    edi,0x2
    145a:	c7 45 10 10 00 00 00 	mov    DWORD PTR [ebp+0x10],0x10
    1461:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
    1465:	75 14                	jne    147b <strtol+0x9d>
    1467:	83 fe 30             	cmp    esi,0x30
    146a:	75 07                	jne    1473 <strtol+0x95>
    146c:	b8 08 00 00 00       	mov    eax,0x8
    1471:	eb 05                	jmp    1478 <strtol+0x9a>
    1473:	b8 0a 00 00 00       	mov    eax,0xa
    1478:	89 45 10             	mov    DWORD PTR [ebp+0x10],eax
    147b:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
    147f:	74 07                	je     1488 <strtol+0xaa>
    1481:	b8 00 00 00 80       	mov    eax,0x80000000
    1486:	eb 05                	jmp    148d <strtol+0xaf>
    1488:	b8 ff ff ff 7f       	mov    eax,0x7fffffff
    148d:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
    1490:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
    1493:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
    1496:	ba 00 00 00 00       	mov    edx,0x0
    149b:	f7 f1                	div    ecx
    149d:	89 d0                	mov    eax,edx
    149f:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
    14a2:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
    14a5:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
    14a8:	ba 00 00 00 00       	mov    edx,0x0
    14ad:	f7 f1                	div    ecx
    14af:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
    14b2:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
    14b9:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
    14c0:	83 ec 0c             	sub    esp,0xc
    14c3:	56                   	push   esi
    14c4:	e8 68 0f 00 00       	call   2431 <isdigit>
    14c9:	83 c4 10             	add    esp,0x10
    14cc:	85 c0                	test   eax,eax
    14ce:	74 05                	je     14d5 <strtol+0xf7>
    14d0:	83 ee 30             	sub    esi,0x30
    14d3:	eb 2e                	jmp    1503 <strtol+0x125>
    14d5:	83 ec 0c             	sub    esp,0xc
    14d8:	56                   	push   esi
    14d9:	e8 7a 0f 00 00       	call   2458 <isalpha>
    14de:	83 c4 10             	add    esp,0x10
    14e1:	85 c0                	test   eax,eax
    14e3:	74 6d                	je     1552 <strtol+0x174>
    14e5:	83 ec 0c             	sub    esp,0xc
    14e8:	56                   	push   esi
    14e9:	e8 9d 0f 00 00       	call   248b <isupper>
    14ee:	83 c4 10             	add    esp,0x10
    14f1:	85 c0                	test   eax,eax
    14f3:	74 07                	je     14fc <strtol+0x11e>
    14f5:	b8 37 00 00 00       	mov    eax,0x37
    14fa:	eb 05                	jmp    1501 <strtol+0x123>
    14fc:	b8 57 00 00 00       	mov    eax,0x57
    1501:	29 c6                	sub    esi,eax
    1503:	3b 75 10             	cmp    esi,DWORD PTR [ebp+0x10]
    1506:	7d 4d                	jge    1555 <strtol+0x177>
    1508:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
    150c:	78 15                	js     1523 <strtol+0x145>
    150e:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
    1511:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
    1514:	39 d0                	cmp    eax,edx
    1516:	72 0b                	jb     1523 <strtol+0x145>
    1518:	39 c2                	cmp    edx,eax
    151a:	75 10                	jne    152c <strtol+0x14e>
    151c:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
    151f:	39 c6                	cmp    esi,eax
    1521:	7e 09                	jle    152c <strtol+0x14e>
    1523:	c7 45 e0 ff ff ff ff 	mov    DWORD PTR [ebp-0x20],0xffffffff
    152a:	eb 17                	jmp    1543 <strtol+0x165>
    152c:	c7 45 e0 01 00 00 00 	mov    DWORD PTR [ebp-0x20],0x1
    1533:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    1536:	8b 4d e4             	mov    ecx,DWORD PTR [ebp-0x1c]
    1539:	0f af c8             	imul   ecx,eax
    153c:	89 f0                	mov    eax,esi
    153e:	01 c1                	add    ecx,eax
    1540:	89 4d e4             	mov    DWORD PTR [ebp-0x1c],ecx
    1543:	89 f8                	mov    eax,edi
    1545:	8d 78 01             	lea    edi,[eax+0x1]
    1548:	8a 00                	mov    al,BYTE PTR [eax]
    154a:	0f be f0             	movsx  esi,al
    154d:	e9 6e ff ff ff       	jmp    14c0 <strtol+0xe2>
    1552:	90                   	nop
    1553:	eb 01                	jmp    1556 <strtol+0x178>
    1555:	90                   	nop
    1556:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
    155a:	79 17                	jns    1573 <strtol+0x195>
    155c:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
    1560:	74 07                	je     1569 <strtol+0x18b>
    1562:	b8 00 00 00 80       	mov    eax,0x80000000
    1567:	eb 05                	jmp    156e <strtol+0x190>
    1569:	b8 ff ff ff 7f       	mov    eax,0x7fffffff
    156e:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
    1571:	eb 09                	jmp    157c <strtol+0x19e>
    1573:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
    1577:	74 03                	je     157c <strtol+0x19e>
    1579:	f7 5d e4             	neg    DWORD PTR [ebp-0x1c]
    157c:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
    1580:	74 13                	je     1595 <strtol+0x1b7>
    1582:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
    1586:	74 05                	je     158d <strtol+0x1af>
    1588:	8d 47 ff             	lea    eax,[edi-0x1]
    158b:	eb 03                	jmp    1590 <strtol+0x1b2>
    158d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1590:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
    1593:	89 02                	mov    DWORD PTR [edx],eax
    1595:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1598:	8d 65 f4             	lea    esp,[ebp-0xc]
    159b:	5b                   	pop    ebx
    159c:	5e                   	pop    esi
    159d:	5f                   	pop    edi
    159e:	5d                   	pop    ebp
    159f:	c3                   	ret

000015a0 <memchr>:
    15a0:	55                   	push   ebp
    15a1:	89 e5                	mov    ebp,esp
    15a3:	83 ec 10             	sub    esp,0x10
    15a6:	e8 4c ef ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    15ab:	05 a9 20 00 00       	add    eax,0x20a9
    15b0:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    15b3:	88 45 fb             	mov    BYTE PTR [ebp-0x5],al
    15b6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    15b9:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    15bc:	eb 15                	jmp    15d3 <memchr+0x33>
    15be:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    15c1:	8a 00                	mov    al,BYTE PTR [eax]
    15c3:	38 45 fb             	cmp    BYTE PTR [ebp-0x5],al
    15c6:	75 05                	jne    15cd <memchr+0x2d>
    15c8:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    15cb:	eb 11                	jmp    15de <memchr+0x3e>
    15cd:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
    15d0:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
    15d3:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
    15d7:	75 e5                	jne    15be <memchr+0x1e>
    15d9:	b8 00 00 00 00       	mov    eax,0x0
    15de:	c9                   	leave
    15df:	c3                   	ret

000015e0 <memcmp>:
    15e0:	55                   	push   ebp
    15e1:	89 e5                	mov    ebp,esp
    15e3:	83 ec 10             	sub    esp,0x10
    15e6:	e8 0c ef ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    15eb:	05 69 20 00 00       	add    eax,0x2069
    15f0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    15f3:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    15f6:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    15f9:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
    15fc:	eb 33                	jmp    1631 <memcmp+0x51>
    15fe:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1601:	8a 10                	mov    dl,BYTE PTR [eax]
    1603:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    1606:	8a 00                	mov    al,BYTE PTR [eax]
    1608:	38 c2                	cmp    dl,al
    160a:	74 1c                	je     1628 <memcmp+0x48>
    160c:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    160f:	8a 10                	mov    dl,BYTE PTR [eax]
    1611:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    1614:	8a 00                	mov    al,BYTE PTR [eax]
    1616:	38 c2                	cmp    dl,al
    1618:	73 07                	jae    1621 <memcmp+0x41>
    161a:	b8 ff ff ff ff       	mov    eax,0xffffffff
    161f:	eb 1b                	jmp    163c <memcmp+0x5c>
    1621:	b8 01 00 00 00       	mov    eax,0x1
    1626:	eb 14                	jmp    163c <memcmp+0x5c>
    1628:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
    162b:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
    162e:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
    1631:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
    1635:	75 c7                	jne    15fe <memcmp+0x1e>
    1637:	b8 00 00 00 00       	mov    eax,0x0
    163c:	c9                   	leave
    163d:	c3                   	ret

0000163e <memcpy>:
    163e:	55                   	push   ebp
    163f:	89 e5                	mov    ebp,esp
    1641:	83 ec 10             	sub    esp,0x10
    1644:	e8 ae ee ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    1649:	05 0b 20 00 00       	add    eax,0x200b
    164e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1651:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    1654:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1657:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
    165a:	eb 13                	jmp    166f <memcpy+0x31>
    165c:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    165f:	8a 10                	mov    dl,BYTE PTR [eax]
    1661:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1664:	88 10                	mov    BYTE PTR [eax],dl
    1666:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
    1669:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
    166c:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
    166f:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
    1673:	75 e7                	jne    165c <memcpy+0x1e>
    1675:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1678:	c9                   	leave
    1679:	c3                   	ret

0000167a <memmove>:
    167a:	55                   	push   ebp
    167b:	89 e5                	mov    ebp,esp
    167d:	83 ec 10             	sub    esp,0x10
    1680:	e8 72 ee ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    1685:	05 cf 1f 00 00       	add    eax,0x1fcf
    168a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    168d:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    1690:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1693:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
    1696:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    1699:	3b 45 fc             	cmp    eax,DWORD PTR [ebp-0x4]
    169c:	73 4f                	jae    16ed <memmove+0x73>
    169e:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
    16a1:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    16a4:	01 d0                	add    eax,edx
    16a6:	39 45 fc             	cmp    DWORD PTR [ebp-0x4],eax
    16a9:	73 42                	jae    16ed <memmove+0x73>
    16ab:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    16ae:	01 45 fc             	add    DWORD PTR [ebp-0x4],eax
    16b1:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    16b4:	01 45 f8             	add    DWORD PTR [ebp-0x8],eax
    16b7:	eb 13                	jmp    16cc <memmove+0x52>
    16b9:	ff 4d f8             	dec    DWORD PTR [ebp-0x8]
    16bc:	ff 4d fc             	dec    DWORD PTR [ebp-0x4]
    16bf:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    16c2:	8a 10                	mov    dl,BYTE PTR [eax]
    16c4:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    16c7:	88 10                	mov    BYTE PTR [eax],dl
    16c9:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
    16cc:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
    16d0:	75 e7                	jne    16b9 <memmove+0x3f>
    16d2:	eb 1f                	jmp    16f3 <memmove+0x79>
    16d4:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
    16d7:	8d 42 01             	lea    eax,[edx+0x1]
    16da:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
    16dd:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    16e0:	8d 48 01             	lea    ecx,[eax+0x1]
    16e3:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
    16e6:	8a 12                	mov    dl,BYTE PTR [edx]
    16e8:	88 10                	mov    BYTE PTR [eax],dl
    16ea:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
    16ed:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
    16f1:	75 e1                	jne    16d4 <memmove+0x5a>
    16f3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    16f6:	c9                   	leave
    16f7:	c3                   	ret

000016f8 <memset>:
    16f8:	55                   	push   ebp
    16f9:	89 e5                	mov    ebp,esp
    16fb:	83 ec 10             	sub    esp,0x10
    16fe:	e8 f4 ed ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    1703:	05 51 1f 00 00       	add    eax,0x1f51
    1708:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    170b:	88 45 fb             	mov    BYTE PTR [ebp-0x5],al
    170e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1711:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    1714:	eb 0e                	jmp    1724 <memset+0x2c>
    1716:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1719:	8a 55 fb             	mov    dl,BYTE PTR [ebp-0x5]
    171c:	88 10                	mov    BYTE PTR [eax],dl
    171e:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
    1721:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
    1724:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
    1728:	75 ec                	jne    1716 <memset+0x1e>
    172a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    172d:	c9                   	leave
    172e:	c3                   	ret

0000172f <strcat>:
    172f:	55                   	push   ebp
    1730:	89 e5                	mov    ebp,esp
    1732:	83 ec 10             	sub    esp,0x10
    1735:	e8 bd ed ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    173a:	05 1a 1f 00 00       	add    eax,0x1f1a
    173f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1742:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    1745:	eb 03                	jmp    174a <strcat+0x1b>
    1747:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
    174a:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    174d:	8a 00                	mov    al,BYTE PTR [eax]
    174f:	84 c0                	test   al,al
    1751:	75 f4                	jne    1747 <strcat+0x18>
    1753:	eb 06                	jmp    175b <strcat+0x2c>
    1755:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
    1758:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
    175b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    175e:	8a 10                	mov    dl,BYTE PTR [eax]
    1760:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1763:	88 10                	mov    BYTE PTR [eax],dl
    1765:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1768:	8a 00                	mov    al,BYTE PTR [eax]
    176a:	84 c0                	test   al,al
    176c:	75 e7                	jne    1755 <strcat+0x26>
    176e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1771:	c9                   	leave
    1772:	c3                   	ret

00001773 <strcmp>:
    1773:	55                   	push   ebp
    1774:	89 e5                	mov    ebp,esp
    1776:	e8 7c ed ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    177b:	05 d9 1e 00 00       	add    eax,0x1ed9
    1780:	eb 16                	jmp    1798 <strcmp+0x25>
    1782:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1785:	8a 00                	mov    al,BYTE PTR [eax]
    1787:	84 c0                	test   al,al
    1789:	75 07                	jne    1792 <strcmp+0x1f>
    178b:	b8 00 00 00 00       	mov    eax,0x0
    1790:	eb 2e                	jmp    17c0 <strcmp+0x4d>
    1792:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
    1795:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
    1798:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    179b:	8a 10                	mov    dl,BYTE PTR [eax]
    179d:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    17a0:	8a 00                	mov    al,BYTE PTR [eax]
    17a2:	38 c2                	cmp    dl,al
    17a4:	74 dc                	je     1782 <strcmp+0xf>
    17a6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    17a9:	8a 10                	mov    dl,BYTE PTR [eax]
    17ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    17ae:	8a 00                	mov    al,BYTE PTR [eax]
    17b0:	38 c2                	cmp    dl,al
    17b2:	73 07                	jae    17bb <strcmp+0x48>
    17b4:	b8 ff ff ff ff       	mov    eax,0xffffffff
    17b9:	eb 05                	jmp    17c0 <strcmp+0x4d>
    17bb:	b8 01 00 00 00       	mov    eax,0x1
    17c0:	5d                   	pop    ebp
    17c1:	c3                   	ret

000017c2 <strcoll>:
    17c2:	55                   	push   ebp
    17c3:	89 e5                	mov    ebp,esp
    17c5:	53                   	push   ebx
    17c6:	83 ec 04             	sub    esp,0x4
    17c9:	e8 29 ed ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    17ce:	05 86 1e 00 00       	add    eax,0x1e86
    17d3:	83 ec 08             	sub    esp,0x8
    17d6:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
    17d9:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    17dc:	89 c3                	mov    ebx,eax
    17de:	e8 90 ff ff ff       	call   1773 <strcmp>
    17e3:	83 c4 10             	add    esp,0x10
    17e6:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    17e9:	c9                   	leave
    17ea:	c3                   	ret

000017eb <strcpy>:
    17eb:	55                   	push   ebp
    17ec:	89 e5                	mov    ebp,esp
    17ee:	83 ec 10             	sub    esp,0x10
    17f1:	e8 01 ed ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    17f6:	05 5e 1e 00 00       	add    eax,0x1e5e
    17fb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    17fe:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    1801:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1804:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    1807:	90                   	nop
    1808:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
    180b:	8d 42 01             	lea    eax,[edx+0x1]
    180e:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
    1811:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1814:	8d 48 01             	lea    ecx,[eax+0x1]
    1817:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
    181a:	8a 12                	mov    dl,BYTE PTR [edx]
    181c:	88 10                	mov    BYTE PTR [eax],dl
    181e:	8a 00                	mov    al,BYTE PTR [eax]
    1820:	84 c0                	test   al,al
    1822:	75 e4                	jne    1808 <strcpy+0x1d>
    1824:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1827:	c9                   	leave
    1828:	c3                   	ret

00001829 <strncmp>:
    1829:	55                   	push   ebp
    182a:	89 e5                	mov    ebp,esp
    182c:	53                   	push   ebx
    182d:	e8 c5 ec ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    1832:	05 22 1e 00 00       	add    eax,0x1e22
    1837:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
    183a:	eb 33                	jmp    186f <strncmp+0x46>
    183c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    183f:	8d 50 01             	lea    edx,[eax+0x1]
    1842:	89 55 08             	mov    DWORD PTR [ebp+0x8],edx
    1845:	8a 00                	mov    al,BYTE PTR [eax]
    1847:	88 c3                	mov    bl,al
    1849:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    184c:	8d 50 01             	lea    edx,[eax+0x1]
    184f:	89 55 0c             	mov    DWORD PTR [ebp+0xc],edx
    1852:	8a 00                	mov    al,BYTE PTR [eax]
    1854:	88 c2                	mov    dl,al
    1856:	38 d3                	cmp    bl,dl
    1858:	74 0a                	je     1864 <strncmp+0x3b>
    185a:	0f b6 c3             	movzx  eax,bl
    185d:	0f b6 d2             	movzx  edx,dl
    1860:	29 d0                	sub    eax,edx
    1862:	eb 19                	jmp    187d <strncmp+0x54>
    1864:	84 db                	test   bl,bl
    1866:	75 07                	jne    186f <strncmp+0x46>
    1868:	b8 00 00 00 00       	mov    eax,0x0
    186d:	eb 0e                	jmp    187d <strncmp+0x54>
    186f:	89 c8                	mov    eax,ecx
    1871:	8d 48 ff             	lea    ecx,[eax-0x1]
    1874:	85 c0                	test   eax,eax
    1876:	75 c4                	jne    183c <strncmp+0x13>
    1878:	b8 00 00 00 00       	mov    eax,0x0
    187d:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1880:	c9                   	leave
    1881:	c3                   	ret

00001882 <strlen>:
    1882:	55                   	push   ebp
    1883:	89 e5                	mov    ebp,esp
    1885:	83 ec 10             	sub    esp,0x10
    1888:	e8 6a ec ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    188d:	05 c7 1d 00 00       	add    eax,0x1dc7
    1892:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
    1899:	eb 06                	jmp    18a1 <strlen+0x1f>
    189b:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
    189e:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
    18a1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    18a4:	8a 00                	mov    al,BYTE PTR [eax]
    18a6:	84 c0                	test   al,al
    18a8:	75 f1                	jne    189b <strlen+0x19>
    18aa:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    18ad:	c9                   	leave
    18ae:	c3                   	ret

000018af <strtok_r>:
    18af:	55                   	push   ebp
    18b0:	89 e5                	mov    ebp,esp
    18b2:	53                   	push   ebx
    18b3:	83 ec 14             	sub    esp,0x14
    18b6:	e8 40 ec ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    18bb:	81 c3 99 1d 00 00    	add    ebx,0x1d99
    18c1:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
    18c5:	75 08                	jne    18cf <strtok_r+0x20>
    18c7:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    18ca:	8b 00                	mov    eax,DWORD PTR [eax]
    18cc:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax
    18cf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    18d2:	8a 00                	mov    al,BYTE PTR [eax]
    18d4:	84 c0                	test   al,al
    18d6:	75 0f                	jne    18e7 <strtok_r+0x38>
    18d8:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    18db:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    18de:	89 10                	mov    DWORD PTR [eax],edx
    18e0:	b8 00 00 00 00       	mov    eax,0x0
    18e5:	eb 6f                	jmp    1956 <strtok_r+0xa7>
    18e7:	83 ec 08             	sub    esp,0x8
    18ea:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
    18ed:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    18f0:	e8 66 00 00 00       	call   195b <strspn>
    18f5:	83 c4 10             	add    esp,0x10
    18f8:	01 45 08             	add    DWORD PTR [ebp+0x8],eax
    18fb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    18fe:	8a 00                	mov    al,BYTE PTR [eax]
    1900:	84 c0                	test   al,al
    1902:	75 0f                	jne    1913 <strtok_r+0x64>
    1904:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    1907:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    190a:	89 10                	mov    DWORD PTR [eax],edx
    190c:	b8 00 00 00 00       	mov    eax,0x0
    1911:	eb 43                	jmp    1956 <strtok_r+0xa7>
    1913:	83 ec 08             	sub    esp,0x8
    1916:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
    1919:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    191c:	e8 7f 02 00 00       	call   1ba0 <strcspn>
    1921:	83 c4 10             	add    esp,0x10
    1924:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    1927:	01 d0                	add    eax,edx
    1929:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    192c:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    192f:	8a 00                	mov    al,BYTE PTR [eax]
    1931:	84 c0                	test   al,al
    1933:	75 0d                	jne    1942 <strtok_r+0x93>
    1935:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    1938:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    193b:	89 10                	mov    DWORD PTR [eax],edx
    193d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1940:	eb 14                	jmp    1956 <strtok_r+0xa7>
    1942:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1945:	c6 00 00             	mov    BYTE PTR [eax],0x0
    1948:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    194b:	8d 50 01             	lea    edx,[eax+0x1]
    194e:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    1951:	89 10                	mov    DWORD PTR [eax],edx
    1953:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1956:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1959:	c9                   	leave
    195a:	c3                   	ret

0000195b <strspn>:
    195b:	55                   	push   ebp
    195c:	89 e5                	mov    ebp,esp
    195e:	53                   	push   ebx
    195f:	81 ec 24 01 00 00    	sub    esp,0x124
    1965:	e8 91 eb ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    196a:	81 c3 ea 1c 00 00    	add    ebx,0x1cea
    1970:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1973:	8a 00                	mov    al,BYTE PTR [eax]
    1975:	84 c0                	test   al,al
    1977:	75 0a                	jne    1983 <strspn+0x28>
    1979:	b8 00 00 00 00       	mov    eax,0x0
    197e:	e9 d1 01 00 00       	jmp    1b54 <strspn+0x1f9>
    1983:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1986:	40                   	inc    eax
    1987:	8a 00                	mov    al,BYTE PTR [eax]
    1989:	84 c0                	test   al,al
    198b:	75 24                	jne    19b1 <strspn+0x56>
    198d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1990:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
    1993:	eb 03                	jmp    1998 <strspn+0x3d>
    1995:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
    1998:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    199b:	8a 10                	mov    dl,BYTE PTR [eax]
    199d:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    19a0:	8a 00                	mov    al,BYTE PTR [eax]
    19a2:	38 c2                	cmp    dl,al
    19a4:	74 ef                	je     1995 <strspn+0x3a>
    19a6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    19a9:	2b 45 d8             	sub    eax,DWORD PTR [ebp-0x28]
    19ac:	e9 a3 01 00 00       	jmp    1b54 <strspn+0x1f9>
    19b1:	83 ec 04             	sub    esp,0x4
    19b4:	6a 40                	push   0x40
    19b6:	6a 00                	push   0x0
    19b8:	8d 85 d8 fe ff ff    	lea    eax,[ebp-0x128]
    19be:	50                   	push   eax
    19bf:	e8 34 fd ff ff       	call   16f8 <memset>
    19c4:	83 c4 10             	add    esp,0x10
    19c7:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    19ca:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    19cd:	83 c0 40             	add    eax,0x40
    19d0:	83 ec 04             	sub    esp,0x4
    19d3:	6a 40                	push   0x40
    19d5:	6a 00                	push   0x0
    19d7:	50                   	push   eax
    19d8:	e8 1b fd ff ff       	call   16f8 <memset>
    19dd:	83 c4 10             	add    esp,0x10
    19e0:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    19e3:	83 e8 80             	sub    eax,0xffffff80
    19e6:	83 ec 04             	sub    esp,0x4
    19e9:	6a 40                	push   0x40
    19eb:	6a 00                	push   0x0
    19ed:	50                   	push   eax
    19ee:	e8 05 fd ff ff       	call   16f8 <memset>
    19f3:	83 c4 10             	add    esp,0x10
    19f6:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    19f9:	05 c0 00 00 00       	add    eax,0xc0
    19fe:	83 ec 04             	sub    esp,0x4
    1a01:	6a 40                	push   0x40
    1a03:	6a 00                	push   0x0
    1a05:	50                   	push   eax
    1a06:	e8 ed fc ff ff       	call   16f8 <memset>
    1a0b:	83 c4 10             	add    esp,0x10
    1a0e:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1a11:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    1a14:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1a17:	8d 50 01             	lea    edx,[eax+0x1]
    1a1a:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
    1a1d:	8a 00                	mov    al,BYTE PTR [eax]
    1a1f:	0f b6 d0             	movzx  edx,al
    1a22:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1a25:	01 d0                	add    eax,edx
    1a27:	c6 00 01             	mov    BYTE PTR [eax],0x1
    1a2a:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1a2d:	8a 00                	mov    al,BYTE PTR [eax]
    1a2f:	84 c0                	test   al,al
    1a31:	75 e1                	jne    1a14 <strspn+0xb9>
    1a33:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1a36:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    1a39:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1a3c:	8a 00                	mov    al,BYTE PTR [eax]
    1a3e:	0f b6 d0             	movzx  edx,al
    1a41:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1a44:	01 d0                	add    eax,edx
    1a46:	8a 00                	mov    al,BYTE PTR [eax]
    1a48:	84 c0                	test   al,al
    1a4a:	75 0a                	jne    1a56 <strspn+0xfb>
    1a4c:	b8 00 00 00 00       	mov    eax,0x0
    1a51:	e9 fe 00 00 00       	jmp    1b54 <strspn+0x1f9>
    1a56:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1a59:	40                   	inc    eax
    1a5a:	8a 00                	mov    al,BYTE PTR [eax]
    1a5c:	0f b6 d0             	movzx  edx,al
    1a5f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1a62:	01 d0                	add    eax,edx
    1a64:	8a 00                	mov    al,BYTE PTR [eax]
    1a66:	84 c0                	test   al,al
    1a68:	75 0a                	jne    1a74 <strspn+0x119>
    1a6a:	b8 01 00 00 00       	mov    eax,0x1
    1a6f:	e9 e0 00 00 00       	jmp    1b54 <strspn+0x1f9>
    1a74:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1a77:	83 c0 02             	add    eax,0x2
    1a7a:	8a 00                	mov    al,BYTE PTR [eax]
    1a7c:	0f b6 d0             	movzx  edx,al
    1a7f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1a82:	01 d0                	add    eax,edx
    1a84:	8a 00                	mov    al,BYTE PTR [eax]
    1a86:	84 c0                	test   al,al
    1a88:	75 0a                	jne    1a94 <strspn+0x139>
    1a8a:	b8 02 00 00 00       	mov    eax,0x2
    1a8f:	e9 c0 00 00 00       	jmp    1b54 <strspn+0x1f9>
    1a94:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1a97:	83 c0 03             	add    eax,0x3
    1a9a:	8a 00                	mov    al,BYTE PTR [eax]
    1a9c:	0f b6 d0             	movzx  edx,al
    1a9f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1aa2:	01 d0                	add    eax,edx
    1aa4:	8a 00                	mov    al,BYTE PTR [eax]
    1aa6:	84 c0                	test   al,al
    1aa8:	75 0a                	jne    1ab4 <strspn+0x159>
    1aaa:	b8 03 00 00 00       	mov    eax,0x3
    1aaf:	e9 a0 00 00 00       	jmp    1b54 <strspn+0x1f9>
    1ab4:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1ab7:	83 e0 fc             	and    eax,0xfffffffc
    1aba:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    1abd:	83 45 f4 04          	add    DWORD PTR [ebp-0xc],0x4
    1ac1:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1ac4:	8a 00                	mov    al,BYTE PTR [eax]
    1ac6:	0f b6 d0             	movzx  edx,al
    1ac9:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1acc:	01 d0                	add    eax,edx
    1ace:	8a 00                	mov    al,BYTE PTR [eax]
    1ad0:	0f b6 c0             	movzx  eax,al
    1ad3:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
    1ad6:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1ad9:	40                   	inc    eax
    1ada:	8a 00                	mov    al,BYTE PTR [eax]
    1adc:	0f b6 d0             	movzx  edx,al
    1adf:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1ae2:	01 d0                	add    eax,edx
    1ae4:	8a 00                	mov    al,BYTE PTR [eax]
    1ae6:	0f b6 c0             	movzx  eax,al
    1ae9:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
    1aec:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1aef:	83 c0 02             	add    eax,0x2
    1af2:	8a 00                	mov    al,BYTE PTR [eax]
    1af4:	0f b6 d0             	movzx  edx,al
    1af7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1afa:	01 d0                	add    eax,edx
    1afc:	8a 00                	mov    al,BYTE PTR [eax]
    1afe:	0f b6 c0             	movzx  eax,al
    1b01:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
    1b04:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1b07:	83 c0 03             	add    eax,0x3
    1b0a:	8a 00                	mov    al,BYTE PTR [eax]
    1b0c:	0f b6 d0             	movzx  edx,al
    1b0f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1b12:	01 d0                	add    eax,edx
    1b14:	8a 00                	mov    al,BYTE PTR [eax]
    1b16:	0f b6 c0             	movzx  eax,al
    1b19:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
    1b1c:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    1b1f:	23 45 e8             	and    eax,DWORD PTR [ebp-0x18]
    1b22:	23 45 e4             	and    eax,DWORD PTR [ebp-0x1c]
    1b25:	23 45 e0             	and    eax,DWORD PTR [ebp-0x20]
    1b28:	85 c0                	test   eax,eax
    1b2a:	75 91                	jne    1abd <strspn+0x162>
    1b2c:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1b2f:	2b 45 08             	sub    eax,DWORD PTR [ebp+0x8]
    1b32:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
    1b35:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    1b38:	23 45 e8             	and    eax,DWORD PTR [ebp-0x18]
    1b3b:	85 c0                	test   eax,eax
    1b3d:	75 0a                	jne    1b49 <strspn+0x1ee>
    1b3f:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
    1b42:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    1b45:	01 d0                	add    eax,edx
    1b47:	eb 0b                	jmp    1b54 <strspn+0x1f9>
    1b49:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
    1b4c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1b4f:	01 d0                	add    eax,edx
    1b51:	83 c0 02             	add    eax,0x2
    1b54:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1b57:	c9                   	leave
    1b58:	c3                   	ret

00001b59 <__strchrnul>:
    1b59:	55                   	push   ebp
    1b5a:	89 e5                	mov    ebp,esp
    1b5c:	53                   	push   ebx
    1b5d:	83 ec 14             	sub    esp,0x14
    1b60:	e8 96 e9 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    1b65:	81 c3 ef 1a 00 00    	add    ebx,0x1aef
    1b6b:	83 ec 08             	sub    esp,0x8
    1b6e:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
    1b71:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    1b74:	e8 14 02 00 00       	call   1d8d <strchr>
    1b79:	83 c4 10             	add    esp,0x10
    1b7c:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    1b7f:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
    1b83:	75 13                	jne    1b98 <__strchrnul+0x3f>
    1b85:	83 ec 08             	sub    esp,0x8
    1b88:	6a 00                	push   0x0
    1b8a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    1b8d:	e8 fb 01 00 00       	call   1d8d <strchr>
    1b92:	83 c4 10             	add    esp,0x10
    1b95:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    1b98:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1b9b:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1b9e:	c9                   	leave
    1b9f:	c3                   	ret

00001ba0 <strcspn>:
    1ba0:	55                   	push   ebp
    1ba1:	89 e5                	mov    ebp,esp
    1ba3:	53                   	push   ebx
    1ba4:	81 ec 24 01 00 00    	sub    esp,0x124
    1baa:	e8 4c e9 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    1baf:	81 c3 a5 1a 00 00    	add    ebx,0x1aa5
    1bb5:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1bb8:	8a 00                	mov    al,BYTE PTR [eax]
    1bba:	84 c0                	test   al,al
    1bbc:	74 0a                	je     1bc8 <strcspn+0x28>
    1bbe:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1bc1:	40                   	inc    eax
    1bc2:	8a 00                	mov    al,BYTE PTR [eax]
    1bc4:	84 c0                	test   al,al
    1bc6:	75 1f                	jne    1be7 <strcspn+0x47>
    1bc8:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1bcb:	8a 00                	mov    al,BYTE PTR [eax]
    1bcd:	0f be c0             	movsx  eax,al
    1bd0:	83 ec 08             	sub    esp,0x8
    1bd3:	50                   	push   eax
    1bd4:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    1bd7:	e8 7d ff ff ff       	call   1b59 <__strchrnul>
    1bdc:	83 c4 10             	add    esp,0x10
    1bdf:	2b 45 08             	sub    eax,DWORD PTR [ebp+0x8]
    1be2:	e9 a1 01 00 00       	jmp    1d88 <strcspn+0x1e8>
    1be7:	83 ec 04             	sub    esp,0x4
    1bea:	6a 40                	push   0x40
    1bec:	6a 00                	push   0x0
    1bee:	8d 85 d8 fe ff ff    	lea    eax,[ebp-0x128]
    1bf4:	50                   	push   eax
    1bf5:	e8 fe fa ff ff       	call   16f8 <memset>
    1bfa:	83 c4 10             	add    esp,0x10
    1bfd:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    1c00:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1c03:	83 c0 40             	add    eax,0x40
    1c06:	83 ec 04             	sub    esp,0x4
    1c09:	6a 40                	push   0x40
    1c0b:	6a 00                	push   0x0
    1c0d:	50                   	push   eax
    1c0e:	e8 e5 fa ff ff       	call   16f8 <memset>
    1c13:	83 c4 10             	add    esp,0x10
    1c16:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1c19:	83 e8 80             	sub    eax,0xffffff80
    1c1c:	83 ec 04             	sub    esp,0x4
    1c1f:	6a 40                	push   0x40
    1c21:	6a 00                	push   0x0
    1c23:	50                   	push   eax
    1c24:	e8 cf fa ff ff       	call   16f8 <memset>
    1c29:	83 c4 10             	add    esp,0x10
    1c2c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1c2f:	05 c0 00 00 00       	add    eax,0xc0
    1c34:	83 ec 04             	sub    esp,0x4
    1c37:	6a 40                	push   0x40
    1c39:	6a 00                	push   0x0
    1c3b:	50                   	push   eax
    1c3c:	e8 b7 fa ff ff       	call   16f8 <memset>
    1c41:	83 c4 10             	add    esp,0x10
    1c44:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1c47:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    1c4a:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1c4d:	8d 50 01             	lea    edx,[eax+0x1]
    1c50:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
    1c53:	8a 00                	mov    al,BYTE PTR [eax]
    1c55:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
    1c58:	0f b6 55 ef          	movzx  edx,BYTE PTR [ebp-0x11]
    1c5c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1c5f:	01 d0                	add    eax,edx
    1c61:	c6 00 01             	mov    BYTE PTR [eax],0x1
    1c64:	80 7d ef 00          	cmp    BYTE PTR [ebp-0x11],0x0
    1c68:	75 e0                	jne    1c4a <strcspn+0xaa>
    1c6a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1c6d:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    1c70:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1c73:	8a 00                	mov    al,BYTE PTR [eax]
    1c75:	0f b6 d0             	movzx  edx,al
    1c78:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1c7b:	01 d0                	add    eax,edx
    1c7d:	8a 00                	mov    al,BYTE PTR [eax]
    1c7f:	84 c0                	test   al,al
    1c81:	74 0a                	je     1c8d <strcspn+0xed>
    1c83:	b8 00 00 00 00       	mov    eax,0x0
    1c88:	e9 fb 00 00 00       	jmp    1d88 <strcspn+0x1e8>
    1c8d:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1c90:	40                   	inc    eax
    1c91:	8a 00                	mov    al,BYTE PTR [eax]
    1c93:	0f b6 d0             	movzx  edx,al
    1c96:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1c99:	01 d0                	add    eax,edx
    1c9b:	8a 00                	mov    al,BYTE PTR [eax]
    1c9d:	84 c0                	test   al,al
    1c9f:	74 0a                	je     1cab <strcspn+0x10b>
    1ca1:	b8 01 00 00 00       	mov    eax,0x1
    1ca6:	e9 dd 00 00 00       	jmp    1d88 <strcspn+0x1e8>
    1cab:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1cae:	83 c0 02             	add    eax,0x2
    1cb1:	8a 00                	mov    al,BYTE PTR [eax]
    1cb3:	0f b6 d0             	movzx  edx,al
    1cb6:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1cb9:	01 d0                	add    eax,edx
    1cbb:	8a 00                	mov    al,BYTE PTR [eax]
    1cbd:	84 c0                	test   al,al
    1cbf:	74 0a                	je     1ccb <strcspn+0x12b>
    1cc1:	b8 02 00 00 00       	mov    eax,0x2
    1cc6:	e9 bd 00 00 00       	jmp    1d88 <strcspn+0x1e8>
    1ccb:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1cce:	83 c0 03             	add    eax,0x3
    1cd1:	8a 00                	mov    al,BYTE PTR [eax]
    1cd3:	0f b6 d0             	movzx  edx,al
    1cd6:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1cd9:	01 d0                	add    eax,edx
    1cdb:	8a 00                	mov    al,BYTE PTR [eax]
    1cdd:	84 c0                	test   al,al
    1cdf:	74 0a                	je     1ceb <strcspn+0x14b>
    1ce1:	b8 03 00 00 00       	mov    eax,0x3
    1ce6:	e9 9d 00 00 00       	jmp    1d88 <strcspn+0x1e8>
    1ceb:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1cee:	83 e0 fc             	and    eax,0xfffffffc
    1cf1:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    1cf4:	83 45 f4 04          	add    DWORD PTR [ebp-0xc],0x4
    1cf8:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1cfb:	8a 00                	mov    al,BYTE PTR [eax]
    1cfd:	0f b6 d0             	movzx  edx,al
    1d00:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1d03:	01 d0                	add    eax,edx
    1d05:	8a 00                	mov    al,BYTE PTR [eax]
    1d07:	0f b6 c0             	movzx  eax,al
    1d0a:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
    1d0d:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1d10:	40                   	inc    eax
    1d11:	8a 00                	mov    al,BYTE PTR [eax]
    1d13:	0f b6 d0             	movzx  edx,al
    1d16:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1d19:	01 d0                	add    eax,edx
    1d1b:	8a 00                	mov    al,BYTE PTR [eax]
    1d1d:	0f b6 c0             	movzx  eax,al
    1d20:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
    1d23:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1d26:	83 c0 02             	add    eax,0x2
    1d29:	8a 00                	mov    al,BYTE PTR [eax]
    1d2b:	0f b6 d0             	movzx  edx,al
    1d2e:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1d31:	01 d0                	add    eax,edx
    1d33:	8a 00                	mov    al,BYTE PTR [eax]
    1d35:	0f b6 c0             	movzx  eax,al
    1d38:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
    1d3b:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1d3e:	83 c0 03             	add    eax,0x3
    1d41:	8a 00                	mov    al,BYTE PTR [eax]
    1d43:	0f b6 d0             	movzx  edx,al
    1d46:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1d49:	01 d0                	add    eax,edx
    1d4b:	8a 00                	mov    al,BYTE PTR [eax]
    1d4d:	0f b6 c0             	movzx  eax,al
    1d50:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
    1d53:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
    1d56:	0b 45 e4             	or     eax,DWORD PTR [ebp-0x1c]
    1d59:	0b 45 e0             	or     eax,DWORD PTR [ebp-0x20]
    1d5c:	0b 45 dc             	or     eax,DWORD PTR [ebp-0x24]
    1d5f:	85 c0                	test   eax,eax
    1d61:	74 91                	je     1cf4 <strcspn+0x154>
    1d63:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1d66:	2b 45 08             	sub    eax,DWORD PTR [ebp+0x8]
    1d69:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
    1d6c:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
    1d6f:	0b 45 e4             	or     eax,DWORD PTR [ebp-0x1c]
    1d72:	85 c0                	test   eax,eax
    1d74:	74 09                	je     1d7f <strcspn+0x1df>
    1d76:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
    1d79:	2b 45 e8             	sub    eax,DWORD PTR [ebp-0x18]
    1d7c:	40                   	inc    eax
    1d7d:	eb 09                	jmp    1d88 <strcspn+0x1e8>
    1d7f:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
    1d82:	2b 45 e0             	sub    eax,DWORD PTR [ebp-0x20]
    1d85:	83 c0 03             	add    eax,0x3
    1d88:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1d8b:	c9                   	leave
    1d8c:	c3                   	ret

00001d8d <strchr>:
    1d8d:	55                   	push   ebp
    1d8e:	89 e5                	mov    ebp,esp
    1d90:	83 ec 20             	sub    esp,0x20
    1d93:	e8 5f e7 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    1d98:	05 bc 18 00 00       	add    eax,0x18bc
    1d9d:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1da0:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
    1da3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1da6:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
    1da9:	eb 28                	jmp    1dd3 <strchr+0x46>
    1dab:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    1dae:	8a 00                	mov    al,BYTE PTR [eax]
    1db0:	38 45 f7             	cmp    BYTE PTR [ebp-0x9],al
    1db3:	75 08                	jne    1dbd <strchr+0x30>
    1db5:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    1db8:	e9 35 01 00 00       	jmp    1ef2 <strchr+0x165>
    1dbd:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    1dc0:	8a 00                	mov    al,BYTE PTR [eax]
    1dc2:	84 c0                	test   al,al
    1dc4:	75 0a                	jne    1dd0 <strchr+0x43>
    1dc6:	b8 00 00 00 00       	mov    eax,0x0
    1dcb:	e9 22 01 00 00       	jmp    1ef2 <strchr+0x165>
    1dd0:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
    1dd3:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    1dd6:	83 e0 03             	and    eax,0x3
    1dd9:	85 c0                	test   eax,eax
    1ddb:	75 ce                	jne    1dab <strchr+0x1e>
    1ddd:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    1de0:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    1de3:	c7 45 f0 ff ff ff ff 	mov    DWORD PTR [ebp-0x10],0xffffffff
    1dea:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1ded:	ba 81 80 80 80       	mov    edx,0x80808081
    1df2:	f7 e2                	mul    edx
    1df4:	c1 ea 07             	shr    edx,0x7
    1df7:	89 d0                	mov    eax,edx
    1df9:	c1 e0 07             	shl    eax,0x7
    1dfc:	29 d0                	sub    eax,edx
    1dfe:	01 c0                	add    eax,eax
    1e00:	25 fe ff ff 7f       	and    eax,0x7ffffffe
    1e05:	83 c8 01             	or     eax,0x1
    1e08:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    1e0b:	0f b6 55 f7          	movzx  edx,BYTE PTR [ebp-0x9]
    1e0f:	89 d0                	mov    eax,edx
    1e11:	c1 e0 08             	shl    eax,0x8
    1e14:	01 d0                	add    eax,edx
    1e16:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
    1e19:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    1e1c:	c1 e0 10             	shl    eax,0x10
    1e1f:	09 45 ec             	or     DWORD PTR [ebp-0x14],eax
    1e22:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1e25:	8d 50 04             	lea    edx,[eax+0x4]
    1e28:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
    1e2b:	8b 00                	mov    eax,DWORD PTR [eax]
    1e2d:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
    1e30:	8b 55 e8             	mov    edx,DWORD PTR [ebp-0x18]
    1e33:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1e36:	01 d0                	add    eax,edx
    1e38:	33 45 e8             	xor    eax,DWORD PTR [ebp-0x18]
    1e3b:	0b 45 f0             	or     eax,DWORD PTR [ebp-0x10]
    1e3e:	83 f8 ff             	cmp    eax,0xffffffff
    1e41:	75 1f                	jne    1e62 <strchr+0xd5>
    1e43:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
    1e46:	33 45 ec             	xor    eax,DWORD PTR [ebp-0x14]
    1e49:	89 c2                	mov    edx,eax
    1e4b:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
    1e4e:	33 45 ec             	xor    eax,DWORD PTR [ebp-0x14]
    1e51:	89 c1                	mov    ecx,eax
    1e53:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1e56:	01 c8                	add    eax,ecx
    1e58:	31 d0                	xor    eax,edx
    1e5a:	0b 45 f0             	or     eax,DWORD PTR [ebp-0x10]
    1e5d:	83 f8 ff             	cmp    eax,0xffffffff
    1e60:	74 c0                	je     1e22 <strchr+0x95>
    1e62:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1e65:	83 e8 04             	sub    eax,0x4
    1e68:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
    1e6b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1e6e:	8a 00                	mov    al,BYTE PTR [eax]
    1e70:	38 45 f7             	cmp    BYTE PTR [ebp-0x9],al
    1e73:	75 05                	jne    1e7a <strchr+0xed>
    1e75:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1e78:	eb 78                	jmp    1ef2 <strchr+0x165>
    1e7a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1e7d:	8a 00                	mov    al,BYTE PTR [eax]
    1e7f:	84 c0                	test   al,al
    1e81:	75 07                	jne    1e8a <strchr+0xfd>
    1e83:	b8 00 00 00 00       	mov    eax,0x0
    1e88:	eb 68                	jmp    1ef2 <strchr+0x165>
    1e8a:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
    1e8d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1e90:	8a 00                	mov    al,BYTE PTR [eax]
    1e92:	38 45 f7             	cmp    BYTE PTR [ebp-0x9],al
    1e95:	75 05                	jne    1e9c <strchr+0x10f>
    1e97:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1e9a:	eb 56                	jmp    1ef2 <strchr+0x165>
    1e9c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1e9f:	8a 00                	mov    al,BYTE PTR [eax]
    1ea1:	84 c0                	test   al,al
    1ea3:	75 07                	jne    1eac <strchr+0x11f>
    1ea5:	b8 00 00 00 00       	mov    eax,0x0
    1eaa:	eb 46                	jmp    1ef2 <strchr+0x165>
    1eac:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
    1eaf:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1eb2:	8a 00                	mov    al,BYTE PTR [eax]
    1eb4:	38 45 f7             	cmp    BYTE PTR [ebp-0x9],al
    1eb7:	75 05                	jne    1ebe <strchr+0x131>
    1eb9:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1ebc:	eb 34                	jmp    1ef2 <strchr+0x165>
    1ebe:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1ec1:	8a 00                	mov    al,BYTE PTR [eax]
    1ec3:	84 c0                	test   al,al
    1ec5:	75 07                	jne    1ece <strchr+0x141>
    1ec7:	b8 00 00 00 00       	mov    eax,0x0
    1ecc:	eb 24                	jmp    1ef2 <strchr+0x165>
    1ece:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
    1ed1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1ed4:	8a 00                	mov    al,BYTE PTR [eax]
    1ed6:	38 45 f7             	cmp    BYTE PTR [ebp-0x9],al
    1ed9:	75 05                	jne    1ee0 <strchr+0x153>
    1edb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1ede:	eb 12                	jmp    1ef2 <strchr+0x165>
    1ee0:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1ee3:	8a 00                	mov    al,BYTE PTR [eax]
    1ee5:	84 c0                	test   al,al
    1ee7:	0f 85 35 ff ff ff    	jne    1e22 <strchr+0x95>
    1eed:	b8 00 00 00 00       	mov    eax,0x0
    1ef2:	c9                   	leave
    1ef3:	c3                   	ret

00001ef4 <strncpy>:
    1ef4:	55                   	push   ebp
    1ef5:	89 e5                	mov    ebp,esp
    1ef7:	83 ec 10             	sub    esp,0x10
    1efa:	e8 f8 e5 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    1eff:	05 55 17 00 00       	add    eax,0x1755
    1f04:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
    1f0b:	eb 25                	jmp    1f32 <strncpy+0x3e>
    1f0d:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
    1f10:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1f13:	01 d0                	add    eax,edx
    1f15:	8a 00                	mov    al,BYTE PTR [eax]
    1f17:	84 c0                	test   al,al
    1f19:	74 21                	je     1f3c <strncpy+0x48>
    1f1b:	8b 55 fc             	mov    edx,DWORD PTR [ebp-0x4]
    1f1e:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1f21:	01 d0                	add    eax,edx
    1f23:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
    1f26:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
    1f29:	01 ca                	add    edx,ecx
    1f2b:	8a 00                	mov    al,BYTE PTR [eax]
    1f2d:	88 02                	mov    BYTE PTR [edx],al
    1f2f:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
    1f32:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1f35:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
    1f38:	72 d3                	jb     1f0d <strncpy+0x19>
    1f3a:	eb 16                	jmp    1f52 <strncpy+0x5e>
    1f3c:	90                   	nop
    1f3d:	eb 13                	jmp    1f52 <strncpy+0x5e>
    1f3f:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1f42:	8d 50 01             	lea    edx,[eax+0x1]
    1f45:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
    1f48:	89 c2                	mov    edx,eax
    1f4a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1f4d:	01 d0                	add    eax,edx
    1f4f:	c6 00 00             	mov    BYTE PTR [eax],0x0
    1f52:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1f55:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
    1f58:	72 e5                	jb     1f3f <strncpy+0x4b>
    1f5a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1f5d:	c9                   	leave
    1f5e:	c3                   	ret

00001f5f <strdup>:
    1f5f:	55                   	push   ebp
    1f60:	89 e5                	mov    ebp,esp
    1f62:	53                   	push   ebx
    1f63:	83 ec 14             	sub    esp,0x14
    1f66:	e8 90 e5 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    1f6b:	81 c3 e9 16 00 00    	add    ebx,0x16e9
    1f71:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
    1f75:	75 07                	jne    1f7e <strdup+0x1f>
    1f77:	b8 00 00 00 00       	mov    eax,0x0
    1f7c:	eb 50                	jmp    1fce <strdup+0x6f>
    1f7e:	83 ec 0c             	sub    esp,0xc
    1f81:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    1f84:	e8 f9 f8 ff ff       	call   1882 <strlen>
    1f89:	83 c4 10             	add    esp,0x10
    1f8c:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    1f8f:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1f92:	40                   	inc    eax
    1f93:	83 ec 0c             	sub    esp,0xc
    1f96:	50                   	push   eax
    1f97:	e8 8e f0 ff ff       	call   102a <malloc>
    1f9c:	83 c4 10             	add    esp,0x10
    1f9f:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    1fa2:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
    1fa6:	75 07                	jne    1faf <strdup+0x50>
    1fa8:	b8 00 00 00 00       	mov    eax,0x0
    1fad:	eb 1f                	jmp    1fce <strdup+0x6f>
    1faf:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    1fb2:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1fb5:	01 d0                	add    eax,edx
    1fb7:	c6 00 00             	mov    BYTE PTR [eax],0x0
    1fba:	83 ec 08             	sub    esp,0x8
    1fbd:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    1fc0:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
    1fc3:	e8 23 f8 ff ff       	call   17eb <strcpy>
    1fc8:	83 c4 10             	add    esp,0x10
    1fcb:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1fce:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1fd1:	c9                   	leave
    1fd2:	c3                   	ret

00001fd3 <open>:
    1fd3:	55                   	push   ebp
    1fd4:	89 e5                	mov    ebp,esp
    1fd6:	53                   	push   ebx
    1fd7:	e8 1b e5 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    1fdc:	05 78 16 00 00       	add    eax,0x1678
    1fe1:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1fe4:	89 c1                	mov    ecx,eax
    1fe6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1fe9:	89 c3                	mov    ebx,eax
    1feb:	b8 35 00 00 00       	mov    eax,0x35
    1ff0:	cd 80                	int    0x80
    1ff2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1ff5:	c9                   	leave
    1ff6:	c3                   	ret

00001ff7 <close>:
    1ff7:	55                   	push   ebp
    1ff8:	89 e5                	mov    ebp,esp
    1ffa:	53                   	push   ebx
    1ffb:	e8 f7 e4 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    2000:	05 54 16 00 00       	add    eax,0x1654
    2005:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    2008:	89 c3                	mov    ebx,eax
    200a:	b8 36 00 00 00       	mov    eax,0x36
    200f:	cd 80                	int    0x80
    2011:	90                   	nop
    2012:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    2015:	c9                   	leave
    2016:	c3                   	ret

00002017 <read>:
    2017:	55                   	push   ebp
    2018:	89 e5                	mov    ebp,esp
    201a:	53                   	push   ebx
    201b:	e8 d7 e4 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    2020:	05 34 16 00 00       	add    eax,0x1634
    2025:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    2028:	89 c2                	mov    edx,eax
    202a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    202d:	89 c1                	mov    ecx,eax
    202f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    2032:	89 c3                	mov    ebx,eax
    2034:	b8 37 00 00 00       	mov    eax,0x37
    2039:	cd 80                	int    0x80
    203b:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    203e:	c9                   	leave
    203f:	c3                   	ret

00002040 <write>:
    2040:	55                   	push   ebp
    2041:	89 e5                	mov    ebp,esp
    2043:	53                   	push   ebx
    2044:	e8 ae e4 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    2049:	05 0b 16 00 00       	add    eax,0x160b
    204e:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    2051:	89 c2                	mov    edx,eax
    2053:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    2056:	89 c1                	mov    ecx,eax
    2058:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    205b:	89 c3                	mov    ebx,eax
    205d:	b8 38 00 00 00       	mov    eax,0x38
    2062:	cd 80                	int    0x80
    2064:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    2067:	c9                   	leave
    2068:	c3                   	ret

00002069 <lseek>:
    2069:	55                   	push   ebp
    206a:	89 e5                	mov    ebp,esp
    206c:	53                   	push   ebx
    206d:	e8 85 e4 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    2072:	05 e2 15 00 00       	add    eax,0x15e2
    2077:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    207a:	89 c2                	mov    edx,eax
    207c:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    207f:	89 c1                	mov    ecx,eax
    2081:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    2084:	89 c3                	mov    ebx,eax
    2086:	b8 39 00 00 00       	mov    eax,0x39
    208b:	cd 80                	int    0x80
    208d:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    2090:	c9                   	leave
    2091:	c3                   	ret

00002092 <creat>:
    2092:	55                   	push   ebp
    2093:	89 e5                	mov    ebp,esp
    2095:	53                   	push   ebx
    2096:	e8 5c e4 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    209b:	05 b9 15 00 00       	add    eax,0x15b9
    20a0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    20a3:	89 c3                	mov    ebx,eax
    20a5:	b8 3a 00 00 00       	mov    eax,0x3a
    20aa:	cd 80                	int    0x80
    20ac:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    20af:	c9                   	leave
    20b0:	c3                   	ret

000020b1 <ftruncate>:
    20b1:	55                   	push   ebp
    20b2:	89 e5                	mov    ebp,esp
    20b4:	53                   	push   ebx
    20b5:	e8 3d e4 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    20ba:	05 9a 15 00 00       	add    eax,0x159a
    20bf:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
    20c2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    20c5:	89 c3                	mov    ebx,eax
    20c7:	b8 3f 00 00 00       	mov    eax,0x3f
    20cc:	cd 80                	int    0x80
    20ce:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    20d1:	c9                   	leave
    20d2:	c3                   	ret

000020d3 <memory_requestRegion>:
    20d3:	55                   	push   ebp
    20d4:	89 e5                	mov    ebp,esp
    20d6:	53                   	push   ebx
    20d7:	e8 1b e4 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    20dc:	05 78 15 00 00       	add    eax,0x1578
    20e1:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
    20e4:	b8 20 00 00 00       	mov    eax,0x20
    20e9:	cd 80                	int    0x80
    20eb:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    20ee:	c9                   	leave
    20ef:	c3                   	ret

000020f0 <memory_returnRegion>:
    20f0:	55                   	push   ebp
    20f1:	89 e5                	mov    ebp,esp
    20f3:	53                   	push   ebx
    20f4:	e8 fe e3 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    20f9:	05 5b 15 00 00       	add    eax,0x155b
    20fe:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
    2101:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    2104:	89 c3                	mov    ebx,eax
    2106:	b8 2b 00 00 00       	mov    eax,0x2b
    210b:	cd 80                	int    0x80
    210d:	90                   	nop
    210e:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    2111:	c9                   	leave
    2112:	c3                   	ret

00002113 <getKernelFeature>:
    2113:	55                   	push   ebp
    2114:	89 e5                	mov    ebp,esp
    2116:	53                   	push   ebx
    2117:	83 ec 10             	sub    esp,0x10
    211a:	e8 d8 e3 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    211f:	05 35 15 00 00       	add    eax,0x1535
    2124:	8b 5d 0c             	mov    ebx,DWORD PTR [ebp+0xc]
    2127:	b8 17 00 00 00       	mov    eax,0x17
    212c:	cd 80                	int    0x80
    212e:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
    2131:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
    2134:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    2137:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
    213a:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    213d:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    2140:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
    2143:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    2146:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    2149:	89 01                	mov    DWORD PTR [ecx],eax
    214b:	89 51 04             	mov    DWORD PTR [ecx+0x4],edx
    214e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    2151:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    2154:	c9                   	leave
    2155:	c2 04 00             	ret    0x4

00002158 <exec>:
    2158:	55                   	push   ebp
    2159:	89 e5                	mov    ebp,esp
    215b:	53                   	push   ebx
    215c:	e8 96 e3 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    2161:	05 f3 14 00 00       	add    eax,0x14f3
    2166:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    2169:	89 c2                	mov    edx,eax
    216b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    216e:	89 c1                	mov    ecx,eax
    2170:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    2173:	89 c3                	mov    ebx,eax
    2175:	b8 06 00 00 00       	mov    eax,0x6
    217a:	cd 80                	int    0x80
    217c:	90                   	nop
    217d:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    2180:	c9                   	leave
    2181:	c3                   	ret

00002182 <set_schedule>:
    2182:	55                   	push   ebp
    2183:	89 e5                	mov    ebp,esp
    2185:	53                   	push   ebx
    2186:	e8 6c e3 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    218b:	05 c9 14 00 00       	add    eax,0x14c9
    2190:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
    2193:	b8 07 00 00 00       	mov    eax,0x7
    2198:	cd 80                	int    0x80
    219a:	90                   	nop
    219b:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    219e:	c9                   	leave
    219f:	c3                   	ret

000021a0 <yield>:
    21a0:	55                   	push   ebp
    21a1:	89 e5                	mov    ebp,esp
    21a3:	e8 4f e3 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    21a8:	05 ac 14 00 00       	add    eax,0x14ac
    21ad:	b8 34 00 00 00       	mov    eax,0x34
    21b2:	cd 80                	int    0x80
    21b4:	90                   	nop
    21b5:	5d                   	pop    ebp
    21b6:	c3                   	ret

000021b7 <task_lock>:
    21b7:	55                   	push   ebp
    21b8:	89 e5                	mov    ebp,esp
    21ba:	53                   	push   ebx
    21bb:	e8 37 e3 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    21c0:	05 94 14 00 00       	add    eax,0x1494
    21c5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    21c8:	89 c3                	mov    ebx,eax
    21ca:	b8 32 00 00 00       	mov    eax,0x32
    21cf:	cd 80                	int    0x80
    21d1:	90                   	nop
    21d2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    21d5:	c9                   	leave
    21d6:	c3                   	ret

000021d7 <manual_task>:
    21d7:	55                   	push   ebp
    21d8:	89 e5                	mov    ebp,esp
    21da:	53                   	push   ebx
    21db:	e8 17 e3 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    21e0:	05 74 14 00 00       	add    eax,0x1474
    21e5:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    21e8:	89 c1                	mov    ecx,eax
    21ea:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    21ed:	89 c3                	mov    ebx,eax
    21ef:	b8 26 00 00 00       	mov    eax,0x26
    21f4:	cd 80                	int    0x80
    21f6:	90                   	nop
    21f7:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    21fa:	c9                   	leave
    21fb:	c3                   	ret

000021fc <vp_init>:
    21fc:	55                   	push   ebp
    21fd:	89 e5                	mov    ebp,esp
    21ff:	53                   	push   ebx
    2200:	83 ec 14             	sub    esp,0x14
    2203:	e8 f3 e2 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    2208:	81 c3 4c 14 00 00    	add    ebx,0x144c
    220e:	83 ec 08             	sub    esp,0x8
    2211:	6a 01                	push   0x1
    2213:	8d 83 dc ef ff ff    	lea    eax,[ebx-0x1024]
    2219:	50                   	push   eax
    221a:	e8 b4 fd ff ff       	call   1fd3 <open>
    221f:	83 c4 10             	add    esp,0x10
    2222:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    2225:	83 7d f4 ff          	cmp    DWORD PTR [ebp-0xc],0xffffffff
    2229:	74 23                	je     224e <vp_init+0x52>
    222b:	83 ec 04             	sub    esp,0x4
    222e:	6a 1c                	push   0x1c
    2230:	c7 c0 ac 36 00 00    	mov    eax,0x36ac
    2236:	50                   	push   eax
    2237:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
    223a:	e8 d8 fd ff ff       	call   2017 <read>
    223f:	83 c4 10             	add    esp,0x10
    2242:	c7 c0 c8 36 00 00    	mov    eax,0x36c8
    2248:	c7 00 01 00 00 00    	mov    DWORD PTR [eax],0x1
    224e:	83 ec 0c             	sub    esp,0xc
    2251:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
    2254:	e8 9e fd ff ff       	call   1ff7 <close>
    2259:	83 c4 10             	add    esp,0x10
    225c:	90                   	nop
    225d:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    2260:	c9                   	leave
    2261:	c3                   	ret

00002262 <vp_open>:
    2262:	55                   	push   ebp
    2263:	89 e5                	mov    ebp,esp
    2265:	53                   	push   ebx
    2266:	83 ec 04             	sub    esp,0x4
    2269:	e8 8d e2 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    226e:	81 c3 e6 13 00 00    	add    ebx,0x13e6
    2274:	c7 c0 c8 36 00 00    	mov    eax,0x36c8
    227a:	8b 00                	mov    eax,DWORD PTR [eax]
    227c:	85 c0                	test   eax,eax
    227e:	75 05                	jne    2285 <vp_open+0x23>
    2280:	e8 77 ff ff ff       	call   21fc <vp_init>
    2285:	c7 c0 ac 36 00 00    	mov    eax,0x36ac
    228b:	8b 00                	mov    eax,DWORD PTR [eax]
    228d:	83 ec 04             	sub    esp,0x4
    2290:	ff 75 10             	push   DWORD PTR [ebp+0x10]
    2293:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
    2296:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    2299:	ff d0                	call   eax
    229b:	83 c4 10             	add    esp,0x10
    229e:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    22a1:	c9                   	leave
    22a2:	c3                   	ret

000022a3 <vp_close>:
    22a3:	55                   	push   ebp
    22a4:	89 e5                	mov    ebp,esp
    22a6:	53                   	push   ebx
    22a7:	83 ec 04             	sub    esp,0x4
    22aa:	e8 4c e2 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    22af:	81 c3 a5 13 00 00    	add    ebx,0x13a5
    22b5:	c7 c0 c8 36 00 00    	mov    eax,0x36c8
    22bb:	8b 00                	mov    eax,DWORD PTR [eax]
    22bd:	85 c0                	test   eax,eax
    22bf:	75 05                	jne    22c6 <vp_close+0x23>
    22c1:	e8 36 ff ff ff       	call   21fc <vp_init>
    22c6:	c7 c0 ac 36 00 00    	mov    eax,0x36ac
    22cc:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
    22cf:	83 ec 0c             	sub    esp,0xc
    22d2:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    22d5:	ff d0                	call   eax
    22d7:	83 c4 10             	add    esp,0x10
    22da:	90                   	nop
    22db:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    22de:	c9                   	leave
    22df:	c3                   	ret

000022e0 <vp_set_buffer>:
    22e0:	55                   	push   ebp
    22e1:	89 e5                	mov    ebp,esp
    22e3:	53                   	push   ebx
    22e4:	83 ec 04             	sub    esp,0x4
    22e7:	e8 0f e2 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    22ec:	81 c3 68 13 00 00    	add    ebx,0x1368
    22f2:	c7 c0 c8 36 00 00    	mov    eax,0x36c8
    22f8:	8b 00                	mov    eax,DWORD PTR [eax]
    22fa:	85 c0                	test   eax,eax
    22fc:	75 05                	jne    2303 <vp_set_buffer+0x23>
    22fe:	e8 f9 fe ff ff       	call   21fc <vp_init>
    2303:	c7 c0 ac 36 00 00    	mov    eax,0x36ac
    2309:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
    230c:	83 ec 04             	sub    esp,0x4
    230f:	ff 75 10             	push   DWORD PTR [ebp+0x10]
    2312:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
    2315:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    2318:	ff d0                	call   eax
    231a:	83 c4 10             	add    esp,0x10
    231d:	90                   	nop
    231e:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    2321:	c9                   	leave
    2322:	c3                   	ret

00002323 <vp_copy>:
    2323:	55                   	push   ebp
    2324:	89 e5                	mov    ebp,esp
    2326:	53                   	push   ebx
    2327:	83 ec 04             	sub    esp,0x4
    232a:	e8 cc e1 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    232f:	81 c3 25 13 00 00    	add    ebx,0x1325
    2335:	c7 c0 c8 36 00 00    	mov    eax,0x36c8
    233b:	8b 00                	mov    eax,DWORD PTR [eax]
    233d:	85 c0                	test   eax,eax
    233f:	75 05                	jne    2346 <vp_copy+0x23>
    2341:	e8 b6 fe ff ff       	call   21fc <vp_init>
    2346:	c7 c0 ac 36 00 00    	mov    eax,0x36ac
    234c:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
    234f:	83 ec 0c             	sub    esp,0xc
    2352:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    2355:	ff d0                	call   eax
    2357:	83 c4 10             	add    esp,0x10
    235a:	90                   	nop
    235b:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    235e:	c9                   	leave
    235f:	c3                   	ret

00002360 <vp_add_event_handler>:
    2360:	55                   	push   ebp
    2361:	89 e5                	mov    ebp,esp
    2363:	53                   	push   ebx
    2364:	83 ec 04             	sub    esp,0x4
    2367:	e8 8f e1 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    236c:	81 c3 e8 12 00 00    	add    ebx,0x12e8
    2372:	c7 c0 c8 36 00 00    	mov    eax,0x36c8
    2378:	8b 00                	mov    eax,DWORD PTR [eax]
    237a:	85 c0                	test   eax,eax
    237c:	75 05                	jne    2383 <vp_add_event_handler+0x23>
    237e:	e8 79 fe ff ff       	call   21fc <vp_init>
    2383:	c7 c0 ac 36 00 00    	mov    eax,0x36ac
    2389:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
    238c:	83 ec 08             	sub    esp,0x8
    238f:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
    2392:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    2395:	ff d0                	call   eax
    2397:	83 c4 10             	add    esp,0x10
    239a:	90                   	nop
    239b:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    239e:	c9                   	leave
    239f:	c3                   	ret

000023a0 <vp_drawChar>:
    23a0:	55                   	push   ebp
    23a1:	89 e5                	mov    ebp,esp
    23a3:	53                   	push   ebx
    23a4:	83 ec 14             	sub    esp,0x14
    23a7:	e8 4f e1 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    23ac:	81 c3 a8 12 00 00    	add    ebx,0x12a8
    23b2:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
    23b5:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
    23b8:	c7 c0 c8 36 00 00    	mov    eax,0x36c8
    23be:	8b 00                	mov    eax,DWORD PTR [eax]
    23c0:	85 c0                	test   eax,eax
    23c2:	75 05                	jne    23c9 <vp_drawChar+0x29>
    23c4:	e8 33 fe ff ff       	call   21fc <vp_init>
    23c9:	c7 c0 ac 36 00 00    	mov    eax,0x36ac
    23cf:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
    23d2:	0f be 55 f4          	movsx  edx,BYTE PTR [ebp-0xc]
    23d6:	83 ec 08             	sub    esp,0x8
    23d9:	ff 75 1c             	push   DWORD PTR [ebp+0x1c]
    23dc:	ff 75 18             	push   DWORD PTR [ebp+0x18]
    23df:	52                   	push   edx
    23e0:	ff 75 10             	push   DWORD PTR [ebp+0x10]
    23e3:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
    23e6:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    23e9:	ff d0                	call   eax
    23eb:	83 c4 20             	add    esp,0x20
    23ee:	90                   	nop
    23ef:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    23f2:	c9                   	leave
    23f3:	c3                   	ret

000023f4 <vp_getc>:
    23f4:	55                   	push   ebp
    23f5:	89 e5                	mov    ebp,esp
    23f7:	53                   	push   ebx
    23f8:	83 ec 04             	sub    esp,0x4
    23fb:	e8 fb e0 ff ff       	call   4fb <__x86.get_pc_thunk.bx>
    2400:	81 c3 54 12 00 00    	add    ebx,0x1254
    2406:	c7 c0 c8 36 00 00    	mov    eax,0x36c8
    240c:	8b 00                	mov    eax,DWORD PTR [eax]
    240e:	85 c0                	test   eax,eax
    2410:	75 05                	jne    2417 <vp_getc+0x23>
    2412:	e8 e5 fd ff ff       	call   21fc <vp_init>
    2417:	c7 c0 ac 36 00 00    	mov    eax,0x36ac
    241d:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
    2420:	83 ec 0c             	sub    esp,0xc
    2423:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    2426:	ff d0                	call   eax
    2428:	83 c4 10             	add    esp,0x10
    242b:	90                   	nop
    242c:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    242f:	c9                   	leave
    2430:	c3                   	ret

00002431 <isdigit>:
    2431:	55                   	push   ebp
    2432:	89 e5                	mov    ebp,esp
    2434:	e8 be e0 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    2439:	05 1b 12 00 00       	add    eax,0x121b
    243e:	83 7d 08 39          	cmp    DWORD PTR [ebp+0x8],0x39
    2442:	7f 0d                	jg     2451 <isdigit+0x20>
    2444:	83 7d 08 2f          	cmp    DWORD PTR [ebp+0x8],0x2f
    2448:	7e 07                	jle    2451 <isdigit+0x20>
    244a:	b8 01 00 00 00       	mov    eax,0x1
    244f:	eb 05                	jmp    2456 <isdigit+0x25>
    2451:	b8 00 00 00 00       	mov    eax,0x0
    2456:	5d                   	pop    ebp
    2457:	c3                   	ret

00002458 <isalpha>:
    2458:	55                   	push   ebp
    2459:	89 e5                	mov    ebp,esp
    245b:	e8 97 e0 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    2460:	05 f4 11 00 00       	add    eax,0x11f4
    2465:	83 7d 08 40          	cmp    DWORD PTR [ebp+0x8],0x40
    2469:	7e 06                	jle    2471 <isalpha+0x19>
    246b:	83 7d 08 5a          	cmp    DWORD PTR [ebp+0x8],0x5a
    246f:	7e 0c                	jle    247d <isalpha+0x25>
    2471:	83 7d 08 60          	cmp    DWORD PTR [ebp+0x8],0x60
    2475:	7e 0d                	jle    2484 <isalpha+0x2c>
    2477:	83 7d 08 7a          	cmp    DWORD PTR [ebp+0x8],0x7a
    247b:	7f 07                	jg     2484 <isalpha+0x2c>
    247d:	b8 01 00 00 00       	mov    eax,0x1
    2482:	eb 05                	jmp    2489 <isalpha+0x31>
    2484:	b8 00 00 00 00       	mov    eax,0x0
    2489:	5d                   	pop    ebp
    248a:	c3                   	ret

0000248b <isupper>:
    248b:	55                   	push   ebp
    248c:	89 e5                	mov    ebp,esp
    248e:	e8 64 e0 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    2493:	05 c1 11 00 00       	add    eax,0x11c1
    2498:	83 7d 08 40          	cmp    DWORD PTR [ebp+0x8],0x40
    249c:	7e 0d                	jle    24ab <isupper+0x20>
    249e:	83 7d 08 5a          	cmp    DWORD PTR [ebp+0x8],0x5a
    24a2:	7f 07                	jg     24ab <isupper+0x20>
    24a4:	b8 01 00 00 00       	mov    eax,0x1
    24a9:	eb 05                	jmp    24b0 <isupper+0x25>
    24ab:	b8 00 00 00 00       	mov    eax,0x0
    24b0:	5d                   	pop    ebp
    24b1:	c3                   	ret

000024b2 <tolower>:
    24b2:	55                   	push   ebp
    24b3:	89 e5                	mov    ebp,esp
    24b5:	e8 3d e0 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    24ba:	05 9a 11 00 00       	add    eax,0x119a
    24bf:	83 7d 08 40          	cmp    DWORD PTR [ebp+0x8],0x40
    24c3:	7e 0e                	jle    24d3 <tolower+0x21>
    24c5:	83 7d 08 5a          	cmp    DWORD PTR [ebp+0x8],0x5a
    24c9:	7f 08                	jg     24d3 <tolower+0x21>
    24cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    24ce:	83 e8 41             	sub    eax,0x41
    24d1:	eb 03                	jmp    24d6 <tolower+0x24>
    24d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    24d6:	5d                   	pop    ebp
    24d7:	c3                   	ret

000024d8 <toupper>:
    24d8:	55                   	push   ebp
    24d9:	89 e5                	mov    ebp,esp
    24db:	e8 17 e0 ff ff       	call   4f7 <__x86.get_pc_thunk.ax>
    24e0:	05 74 11 00 00       	add    eax,0x1174
    24e5:	83 7d 08 60          	cmp    DWORD PTR [ebp+0x8],0x60
    24e9:	7e 0e                	jle    24f9 <toupper+0x21>
    24eb:	83 7d 08 7a          	cmp    DWORD PTR [ebp+0x8],0x7a
    24ef:	7f 08                	jg     24f9 <toupper+0x21>
    24f1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    24f4:	83 e8 20             	sub    eax,0x20
    24f7:	eb 03                	jmp    24fc <toupper+0x24>
    24f9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    24fc:	5d                   	pop    ebp
    24fd:	c3                   	ret
    24fe:	66 90                	xchg   ax,ax

00002500 <__do_global_ctors_aux>:
    2500:	a1 44 36 00 00       	mov    eax,ds:0x3644
    2505:	83 f8 ff             	cmp    eax,0xffffffff
    2508:	74 1e                	je     2528 <__do_global_ctors_aux+0x28>
    250a:	55                   	push   ebp
    250b:	89 e5                	mov    ebp,esp
    250d:	53                   	push   ebx
    250e:	52                   	push   edx
    250f:	bb 44 36 00 00       	mov    ebx,0x3644
    2514:	ff d0                	call   eax
    2516:	83 eb 04             	sub    ebx,0x4
    2519:	8b 03                	mov    eax,DWORD PTR [ebx]
    251b:	83 f8 ff             	cmp    eax,0xffffffff
    251e:	75 f4                	jne    2514 <__do_global_ctors_aux+0x14>
    2520:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    2523:	c9                   	leave
    2524:	c3                   	ret
    2525:	8d 76 00             	lea    esi,[esi+0x0]
    2528:	c3                   	ret

Disassembly of section .fini:

00002529 <_fini>:
    2529:	e8 ee db ff ff       	call   11c <__do_global_dtors_aux>
    252e:	c2 00 00             	ret    0x0

Disassembly of section .rodata:

00002538 <.rodata>:
    2538:	46                   	inc    esi
    2539:	69 62 6f 6e 61 63 63 	imul   esp,DWORD PTR [edx+0x6f],0x6363616e
    2540:	69 20 53 65 72 69    	imul   esp,DWORD PTR [eax],0x69726553
    2546:	65 73 3a             	gs jae 2583 <.rodata+0x4b>
    2549:	20 25 64 2c 20 25    	and    BYTE PTR ds:0x25202c64,ah
    254f:	64 2c 20             	fs sub al,0x20
    2552:	00 25 64 2c 20 00    	add    BYTE PTR ds:0x202c64,ah
    2558:	48                   	dec    eax
    2559:	65 6c                	gs ins BYTE PTR es:[edi],dx
    255b:	6c                   	ins    BYTE PTR es:[edi],dx
    255c:	6f                   	outs   dx,DWORD PTR ds:[esi]
    255d:	20 66 72             	and    BYTE PTR [esi+0x72],ah
    2560:	6f                   	outs   dx,DWORD PTR ds:[esi]
    2561:	6d                   	ins    DWORD PTR es:[edi],dx
    2562:	20 53 65             	and    BYTE PTR [ebx+0x65],dl
    2565:	72 76                	jb     25dd <.rodata+0xa5>
    2567:	69 63 65 21 20 46 69 	imul   esp,DWORD PTR [ebx+0x65],0x69462021
    256e:	62 20                	bound  esp,QWORD PTR [eax]
    2570:	69 73 20 61 74 20 30 	imul   esi,DWORD PTR [ebx+0x20],0x30207461
    2577:	78 25                	js     259e <.rodata+0x66>
    2579:	78 0a                	js     2585 <.rodata+0x4d>
    257b:	00 77 00             	add    BYTE PTR [edi+0x0],dh
    257e:	2f                   	das
    257f:	2d 2f 64 65 76       	sub    eax,0x7665642f
    2584:	2f                   	das
    2585:	73 65                	jae    25ec <.rodata+0xb4>
    2587:	72 69                	jb     25f2 <.rodata+0xba>
    2589:	61                   	popa
    258a:	6c                   	ins    BYTE PTR es:[edi],dx
    258b:	00 72 00             	add    BYTE PTR [edx+0x0],dh
    258e:	2f                   	das
    258f:	2d 2f 66 73 43       	sub    eax,0x4373662f
    2594:	54                   	push   esp
    2595:	52                   	push   edx
    2596:	4c                   	dec    esp
    2597:	00 43 61             	add    BYTE PTR [ebx+0x61],al
    259a:	6e                   	outs   dx,BYTE PTR ds:[esi]
    259b:	6e                   	outs   dx,BYTE PTR ds:[esi]
    259c:	6f                   	outs   dx,DWORD PTR ds:[esi]
    259d:	74 20                	je     25bf <.rodata+0x87>
    259f:	6f                   	outs   dx,DWORD PTR ds:[esi]
    25a0:	70 65                	jo     2607 <.rodata+0xcf>
    25a2:	6e                   	outs   dx,BYTE PTR ds:[esi]
    25a3:	20 66 69             	and    BYTE PTR [esi+0x69],ah
    25a6:	6c                   	ins    BYTE PTR es:[edi],dx
    25a7:	65 21 00             	and    DWORD PTR gs:[eax],eax
    25aa:	52                   	push   edx
    25ab:	65 61                	gs popa
    25ad:	64 20 25 64 20 74 69 	and    BYTE PTR fs:0x69742064,ah
    25b4:	6d                   	ins    DWORD PTR es:[edi],dx
    25b5:	65 73 21             	gs jae 25d9 <.rodata+0xa1>
    25b8:	00 66 69             	add    BYTE PTR [esi+0x69],ah
    25bb:	6c                   	ins    BYTE PTR es:[edi],dx
    25bc:	65 00 53 65          	add    BYTE PTR gs:[ebx+0x65],dl
    25c0:	72 76                	jb     2638 <.rodata+0x100>
    25c2:	00 77 61             	add    BYTE PTR [edi+0x61],dh
    25c5:	73 5f                	jae    2626 <.rodata+0xee>
    25c7:	72 65                	jb     262e <.rodata+0xf6>
    25c9:	61                   	popa
    25ca:	64 20 40 20          	and    BYTE PTR fs:[eax+0x20],al
    25ce:	30 78 25             	xor    BYTE PTR [eax+0x25],bh
    25d1:	78 0a                	js     25dd <.rodata+0xa5>
    25d3:	00 5b 53             	add    BYTE PTR [ebx+0x53],bl
    25d6:	45                   	inc    ebp
    25d7:	52                   	push   edx
    25d8:	56                   	push   esi
    25d9:	49                   	dec    ecx
    25da:	43                   	inc    ebx
    25db:	45                   	inc    ebp
    25dc:	5d                   	pop    ebp
    25dd:	20 52 45             	and    BYTE PTR [edx+0x45],dl
    25e0:	41                   	inc    ecx
    25e1:	44                   	inc    esp
    25e2:	21 0a                	and    DWORD PTR [edx],ecx
    25e4:	00 2f                	add    BYTE PTR [edi],ch
    25e6:	2d 2f 64 65 76       	sub    eax,0x7665642f
    25eb:	2f                   	das
    25ec:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],ebp
    25ef:	73 6f                	jae    2660 <__EH_FRAME_BEGIN__+0x20>
    25f1:	6c                   	ins    BYTE PTR es:[edi],dx
    25f2:	65 00 25 00 0a 00 66 	add    BYTE PTR gs:0x66000a00,ah
    25f9:	6f                   	outs   dx,DWORD PTR ds:[esi]
    25fa:	70 65                	jo     2661 <__EH_FRAME_BEGIN__+0x21>
    25fc:	6e                   	outs   dx,BYTE PTR ds:[esi]
    25fd:	20 66 61             	and    BYTE PTR [esi+0x61],ah
    2600:	69 6c 0a 00 00 00 00 	imul   ebp,DWORD PTR [edx+ecx*1+0x0],0x0
    2607:	00 
    2608:	41                   	inc    ecx
    2609:	6c                   	ins    BYTE PTR es:[edi],dx
    260a:	6c                   	ins    BYTE PTR es:[edi],dx
    260b:	6f                   	outs   dx,DWORD PTR ds:[esi]
    260c:	63 20                	arpl   WORD PTR [eax],esp
    260e:	45                   	inc    ebp
    260f:	72 72                	jb     2683 <__EH_FRAME_BEGIN__+0x43>
    2611:	6f                   	outs   dx,DWORD PTR ds:[esi]
    2612:	72 20                	jb     2634 <.rodata+0xfc>
    2614:	4f                   	dec    edi
    2615:	75 74                	jne    268b <__EH_FRAME_BEGIN__+0x4b>
    2617:	20 6f 66             	and    BYTE PTR [edi+0x66],ch
    261a:	20 4d 65             	and    BYTE PTR [ebp+0x65],cl
    261d:	6d                   	ins    DWORD PTR es:[edi],dx
    261e:	6f                   	outs   dx,DWORD PTR ds:[esi]
    261f:	72 79                	jb     269a <__EH_FRAME_BEGIN__+0x5a>
    2621:	21 0a                	and    DWORD PTR [edx],ecx
    2623:	00 00                	add    BYTE PTR [eax],al
    2625:	00 20                	add    BYTE PTR [eax],ah
    2627:	41                   	inc    ecx
    2628:	00 00                	add    BYTE PTR [eax],al
    262a:	00 00                	add    BYTE PTR [eax],al
    262c:	00 00                	add    BYTE PTR [eax],al
    262e:	24 40                	and    al,0x40
    2630:	2f                   	das
    2631:	2d 2f 73 79 73       	sub    eax,0x7379732f
    2636:	2f                   	das
    2637:	76 69                	jbe    26a2 <__EH_FRAME_BEGIN__+0x62>
    2639:	65 77 70             	gs ja  26ac <__EH_FRAME_BEGIN__+0x6c>
    263c:	6f                   	outs   dx,DWORD PTR ds:[esi]
    263d:	72 74                	jb     26b3 <__EH_FRAME_BEGIN__+0x73>
	...

Disassembly of section .eh_frame:

00002640 <__EH_FRAME_BEGIN__>:
    2640:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .ctors:

00003644 <__CTOR_LIST__>:
    3644:	ff                   	(bad)
    3645:	ff                   	(bad)
    3646:	ff                   	(bad)
    3647:	ff                 	inc    DWORD PTR [eax]

00003648 <__CTOR_END__>:
    3648:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dtors:

0000364c <__DTOR_LIST__>:
    364c:	ff                   	(bad)
    364d:	ff                   	(bad)
    364e:	ff                   	(bad)
    364f:	ff                 	inc    DWORD PTR [eax]

00003650 <__DTOR_END__>:
    3650:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

00003654 <_GLOBAL_OFFSET_TABLE_>:
	...

Disassembly of section .data:

00003660 <__dso_handle>:
    3660:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 47 4e             	sub    BYTE PTR [edi+0x4e],al
   8:	55                   	push   ebp
   9:	29 20                	sub    DWORD PTR [eax],esp
   b:	31 34 2e             	xor    DWORD PTR [esi+ebp*1],esi
   e:	32 2e                	xor    ch,BYTE PTR [esi]
  10:	30 00                	xor    BYTE PTR [eax],al
  12:	47                   	inc    edi
  13:	4e                   	dec    esi
  14:	55                   	push   ebp
  15:	20 43 20             	and    BYTE PTR [ebx+0x20],al
  18:	63 72 74             	arpl   WORD PTR [edx+0x74],esi
  1b:	69 2e 73 00 47 4e    	imul   ebp,DWORD PTR [esi],0x4e470073
  21:	55                   	push   ebp
  22:	20 43 20             	and    BYTE PTR [ebx+0x20],al
  25:	63 72 74             	arpl   WORD PTR [edx+0x74],esi
  28:	6e                   	outs   dx,BYTE PTR ds:[esi]
  29:	2e 6f                	outs   dx,DWORD PTR cs:[esi]
	...
