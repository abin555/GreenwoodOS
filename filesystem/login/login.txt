
login.elf:     file format elf32-i386


Disassembly of section .text:

00000000 <main>:
   0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
   4:	83 e4 f0             	and    $0xfffffff0,%esp
   7:	ff 71 fc             	pushl  -0x4(%ecx)
   a:	55                   	push   %ebp
   b:	89 e5                	mov    %esp,%ebp
   d:	56                   	push   %esi
   e:	53                   	push   %ebx
   f:	51                   	push   %ecx
  10:	83 ec 3c             	sub    $0x3c,%esp
  13:	e8 0b 06 00 00       	call   623 <__x86.get_pc_thunk.bx>
  18:	81 c3 3c 06 00 00    	add    $0x63c,%ebx
  1e:	e8 6a 07 00 00       	call   78d <get_ascii_key_index>
  23:	c7 c2 90 13 00 00    	mov    $0x1390,%edx
  29:	89 02                	mov    %eax,(%edx)
  2b:	83 ec 0c             	sub    $0xc,%esp
  2e:	8d 83 9b ff ff ff    	lea    -0x65(%ebx),%eax
  34:	50                   	push   %eax
  35:	e8 26 06 00 00       	call   660 <print>
  3a:	83 c4 10             	add    $0x10,%esp
  3d:	e8 34 07 00 00       	call   776 <toggle_console>
  42:	83 ec 0c             	sub    $0xc,%esp
  45:	6a 01                	push   $0x1
  47:	e8 e2 07 00 00       	call   82e <set_backbuffer>
  4c:	83 c4 10             	add    $0x10,%esp
  4f:	83 ec 0c             	sub    $0xc,%esp
  52:	68 8c ff 00 00       	push   $0xff8c
  57:	e8 65 07 00 00       	call   7c1 <clear_screen>
  5c:	83 c4 10             	add    $0x10,%esp
  5f:	e8 f3 07 00 00       	call   857 <swap_buffers>
  64:	83 ec 0c             	sub    $0xc,%esp
  67:	6a 00                	push   $0x0
  69:	e8 eb 08 00 00       	call   959 <setPrintColor>
  6e:	83 c4 10             	add    $0x10,%esp
  71:	e8 70 08 00 00       	call   8e6 <get_keycode_next>
  76:	e8 fa 08 00 00       	call   975 <getFramebuffer>
  7b:	c7 c2 a4 09 00 00    	mov    $0x9a4,%edx
  81:	89 02                	mov    %eax,(%edx)
  83:	8d 45 c4             	lea    -0x3c(%ebp),%eax
  86:	83 ec 0c             	sub    $0xc,%esp
  89:	50                   	push   %eax
  8a:	e8 4e 07 00 00       	call   7dd <get_display>
  8f:	83 c4 0c             	add    $0xc,%esp
  92:	83 ec 0c             	sub    $0xc,%esp
  95:	8d 83 ac ff ff ff    	lea    -0x54(%ebx),%eax
  9b:	50                   	push   %eax
  9c:	e8 fa 05 00 00       	call   69b <fopen>
  a1:	83 c4 10             	add    $0x10,%esp
  a4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
  a7:	83 ec 0c             	sub    $0xc,%esp
  aa:	68 40 9c 00 00       	push   $0x9c40
  af:	e8 89 06 00 00       	call   73d <malloc>
  b4:	83 c4 10             	add    $0x10,%esp
  b7:	89 45 d0             	mov    %eax,-0x30(%ebp)
  ba:	83 ec 0c             	sub    $0xc,%esp
  bd:	6a 18                	push   $0x18
  bf:	e8 79 06 00 00       	call   73d <malloc>
  c4:	83 c4 10             	add    $0x10,%esp
  c7:	c7 c2 a8 09 00 00    	mov    $0x9a8,%edx
  cd:	89 02                	mov    %eax,(%edx)
  cf:	83 ec 0c             	sub    $0xc,%esp
  d2:	6a 18                	push   $0x18
  d4:	e8 64 06 00 00       	call   73d <malloc>
  d9:	83 c4 10             	add    $0x10,%esp
  dc:	c7 c2 84 13 00 00    	mov    $0x1384,%edx
  e2:	89 02                	mov    %eax,(%edx)
  e4:	83 ec 08             	sub    $0x8,%esp
  e7:	ff 75 d0             	pushl  -0x30(%ebp)
  ea:	ff 75 d4             	pushl  -0x2c(%ebp)
  ed:	e8 53 03 00 00       	call   445 <load_image>
  f2:	83 c4 10             	add    $0x10,%esp
  f5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
  f8:	83 ec 08             	sub    $0x8,%esp
  fb:	50                   	push   %eax
  fc:	8d 83 bd ff ff ff    	lea    -0x43(%ebx),%eax
 102:	50                   	push   %eax
 103:	e8 74 05 00 00       	call   67c <printval>
 108:	83 c4 10             	add    $0x10,%esp
 10b:	8b 45 c8             	mov    -0x38(%ebp),%eax
 10e:	83 ec 08             	sub    $0x8,%esp
 111:	50                   	push   %eax
 112:	8d 83 c4 ff ff ff    	lea    -0x3c(%ebx),%eax
 118:	50                   	push   %eax
 119:	e8 5e 05 00 00       	call   67c <printval>
 11e:	83 c4 10             	add    $0x10,%esp
 121:	8b 55 c8             	mov    -0x38(%ebp),%edx
 124:	c7 c0 88 13 00 00    	mov    $0x1388,%eax
 12a:	89 10                	mov    %edx,(%eax)
 12c:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 12f:	c7 c0 a0 09 00 00    	mov    $0x9a0,%eax
 135:	89 10                	mov    %edx,(%eax)
 137:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 13e:	c6 45 e3 00          	movb   $0x0,-0x1d(%ebp)
 142:	c6 45 e2 01          	movb   $0x1,-0x1e(%ebp)
 146:	e9 88 02 00 00       	jmp    3d3 <main+0x3d3>
 14b:	83 ec 04             	sub    $0x4,%esp
 14e:	ff 75 d0             	pushl  -0x30(%ebp)
 151:	6a 64                	push   $0x64
 153:	6a 64                	push   $0x64
 155:	e8 9e 05 00 00       	call   6f8 <image_load_buffer>
 15a:	83 c4 10             	add    $0x10,%esp
 15d:	c7 c0 a0 09 00 00    	mov    $0x9a0,%eax
 163:	8b 00                	mov    (%eax),%eax
 165:	d1 e8                	shr    %eax
 167:	83 e8 32             	sub    $0x32,%eax
 16a:	83 ec 08             	sub    $0x8,%esp
 16d:	6a 64                	push   $0x64
 16f:	50                   	push   %eax
 170:	e8 a9 05 00 00       	call   71e <draw_image>
 175:	83 c4 10             	add    $0x10,%esp
 178:	c7 c0 88 13 00 00    	mov    $0x1388,%eax
 17e:	8b 00                	mov    (%eax),%eax
 180:	d1 e8                	shr    %eax
 182:	8d 50 ec             	lea    -0x14(%eax),%edx
 185:	c7 c0 a0 09 00 00    	mov    $0x9a0,%eax
 18b:	8b 00                	mov    (%eax),%eax
 18d:	d1 e8                	shr    %eax
 18f:	83 e8 6c             	sub    $0x6c,%eax
 192:	83 ec 0c             	sub    $0xc,%esp
 195:	68 ff ff ff 00       	push   $0xffffff
 19a:	6a 0c                	push   $0xc
 19c:	68 d8 00 00 00       	push   $0xd8
 1a1:	52                   	push   %edx
 1a2:	50                   	push   %eax
 1a3:	e8 37 03 00 00       	call   4df <draw_rect>
 1a8:	83 c4 20             	add    $0x20,%esp
 1ab:	c7 c0 88 13 00 00    	mov    $0x1388,%eax
 1b1:	8b 00                	mov    (%eax),%eax
 1b3:	d1 e8                	shr    %eax
 1b5:	8d 50 14             	lea    0x14(%eax),%edx
 1b8:	c7 c0 a0 09 00 00    	mov    $0x9a0,%eax
 1be:	8b 00                	mov    (%eax),%eax
 1c0:	d1 e8                	shr    %eax
 1c2:	83 e8 6c             	sub    $0x6c,%eax
 1c5:	83 ec 0c             	sub    $0xc,%esp
 1c8:	68 ff ff ff 00       	push   $0xffffff
 1cd:	6a 0c                	push   $0xc
 1cf:	68 d8 00 00 00       	push   $0xd8
 1d4:	52                   	push   %edx
 1d5:	50                   	push   %eax
 1d6:	e8 04 03 00 00       	call   4df <draw_rect>
 1db:	83 c4 20             	add    $0x20,%esp
 1de:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 1e5:	e9 8e 00 00 00       	jmp    278 <main+0x278>
 1ea:	c7 c0 a8 09 00 00    	mov    $0x9a8,%eax
 1f0:	8b 10                	mov    (%eax),%edx
 1f2:	8b 45 dc             	mov    -0x24(%ebp),%eax
 1f5:	01 d0                	add    %edx,%eax
 1f7:	0f b6 00             	movzbl (%eax),%eax
 1fa:	0f be c0             	movsbl %al,%eax
 1fd:	c7 c2 88 13 00 00    	mov    $0x1388,%edx
 203:	8b 12                	mov    (%edx),%edx
 205:	d1 ea                	shr    %edx
 207:	8d 4a ee             	lea    -0x12(%edx),%ecx
 20a:	c7 c2 a0 09 00 00    	mov    $0x9a0,%edx
 210:	8b 12                	mov    (%edx),%edx
 212:	89 d6                	mov    %edx,%esi
 214:	d1 ee                	shr    %esi
 216:	8b 55 dc             	mov    -0x24(%ebp),%edx
 219:	c1 e2 03             	shl    $0x3,%edx
 21c:	01 f2                	add    %esi,%edx
 21e:	83 ea 6a             	sub    $0x6a,%edx
 221:	83 ec 04             	sub    $0x4,%esp
 224:	50                   	push   %eax
 225:	51                   	push   %ecx
 226:	52                   	push   %edx
 227:	e8 fe 06 00 00       	call   92a <printChar>
 22c:	83 c4 10             	add    $0x10,%esp
 22f:	c7 c0 84 13 00 00    	mov    $0x1384,%eax
 235:	8b 10                	mov    (%eax),%edx
 237:	8b 45 dc             	mov    -0x24(%ebp),%eax
 23a:	01 d0                	add    %edx,%eax
 23c:	0f b6 00             	movzbl (%eax),%eax
 23f:	0f be c0             	movsbl %al,%eax
 242:	c7 c2 88 13 00 00    	mov    $0x1388,%edx
 248:	8b 12                	mov    (%edx),%edx
 24a:	d1 ea                	shr    %edx
 24c:	8d 4a 16             	lea    0x16(%edx),%ecx
 24f:	c7 c2 a0 09 00 00    	mov    $0x9a0,%edx
 255:	8b 12                	mov    (%edx),%edx
 257:	89 d6                	mov    %edx,%esi
 259:	d1 ee                	shr    %esi
 25b:	8b 55 dc             	mov    -0x24(%ebp),%edx
 25e:	c1 e2 03             	shl    $0x3,%edx
 261:	01 f2                	add    %esi,%edx
 263:	83 ea 6a             	sub    $0x6a,%edx
 266:	83 ec 04             	sub    $0x4,%esp
 269:	50                   	push   %eax
 26a:	51                   	push   %ecx
 26b:	52                   	push   %edx
 26c:	e8 b9 06 00 00       	call   92a <printChar>
 271:	83 c4 10             	add    $0x10,%esp
 274:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 278:	83 7d dc 17          	cmpl   $0x17,-0x24(%ebp)
 27c:	0f 8e 68 ff ff ff    	jle    1ea <main+0x1ea>
 282:	80 7d e3 00          	cmpb   $0x0,-0x1d(%ebp)
 286:	74 32                	je     2ba <main+0x2ba>
 288:	c7 c0 88 13 00 00    	mov    $0x1388,%eax
 28e:	8b 00                	mov    (%eax),%eax
 290:	d1 e8                	shr    %eax
 292:	8d 50 14             	lea    0x14(%eax),%edx
 295:	c7 c0 a0 09 00 00    	mov    $0x9a0,%eax
 29b:	8b 00                	mov    (%eax),%eax
 29d:	d1 e8                	shr    %eax
 29f:	83 e8 6c             	sub    $0x6c,%eax
 2a2:	83 ec 0c             	sub    $0xc,%esp
 2a5:	6a 00                	push   $0x0
 2a7:	6a 0c                	push   $0xc
 2a9:	68 d8 00 00 00       	push   $0xd8
 2ae:	52                   	push   %edx
 2af:	50                   	push   %eax
 2b0:	e8 9e 02 00 00       	call   553 <draw_empty_rect>
 2b5:	83 c4 20             	add    $0x20,%esp
 2b8:	eb 30                	jmp    2ea <main+0x2ea>
 2ba:	c7 c0 88 13 00 00    	mov    $0x1388,%eax
 2c0:	8b 00                	mov    (%eax),%eax
 2c2:	d1 e8                	shr    %eax
 2c4:	8d 50 ec             	lea    -0x14(%eax),%edx
 2c7:	c7 c0 a0 09 00 00    	mov    $0x9a0,%eax
 2cd:	8b 00                	mov    (%eax),%eax
 2cf:	d1 e8                	shr    %eax
 2d1:	83 e8 6c             	sub    $0x6c,%eax
 2d4:	83 ec 0c             	sub    $0xc,%esp
 2d7:	6a 00                	push   $0x0
 2d9:	6a 0c                	push   $0xc
 2db:	68 d8 00 00 00       	push   $0xd8
 2e0:	52                   	push   %edx
 2e1:	50                   	push   %eax
 2e2:	e8 6c 02 00 00       	call   553 <draw_empty_rect>
 2e7:	83 c4 20             	add    $0x20,%esp
 2ea:	e8 7f 05 00 00       	call   86e <get_key>
 2ef:	88 45 cf             	mov    %al,-0x31(%ebp)
 2f2:	e8 ef 05 00 00       	call   8e6 <get_keycode_next>
 2f7:	88 45 ce             	mov    %al,-0x32(%ebp)
 2fa:	0f b6 45 ce          	movzbl -0x32(%ebp),%eax
 2fe:	83 f8 0f             	cmp    $0xf,%eax
 301:	74 09                	je     30c <main+0x30c>
 303:	3d 9c 00 00 00       	cmp    $0x9c,%eax
 308:	74 1b                	je     325 <main+0x325>
 30a:	eb 1e                	jmp    32a <main+0x32a>
 30c:	80 7d e3 00          	cmpb   $0x0,-0x1d(%ebp)
 310:	74 06                	je     318 <main+0x318>
 312:	c6 45 e3 00          	movb   $0x0,-0x1d(%ebp)
 316:	eb 04                	jmp    31c <main+0x31c>
 318:	c6 45 e3 01          	movb   $0x1,-0x1d(%ebp)
 31c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 323:	eb 05                	jmp    32a <main+0x32a>
 325:	c6 45 e2 00          	movb   $0x0,-0x1e(%ebp)
 329:	90                   	nop
 32a:	80 7d cf 71          	cmpb   $0x71,-0x31(%ebp)
 32e:	0f 84 ab 00 00 00    	je     3df <main+0x3df>
 334:	80 7d cf 00          	cmpb   $0x0,-0x31(%ebp)
 338:	74 38                	je     372 <main+0x372>
 33a:	83 7d e4 17          	cmpl   $0x17,-0x1c(%ebp)
 33e:	77 32                	ja     372 <main+0x372>
 340:	80 7d e3 00          	cmpb   $0x0,-0x1d(%ebp)
 344:	75 15                	jne    35b <main+0x35b>
 346:	c7 c0 a8 09 00 00    	mov    $0x9a8,%eax
 34c:	8b 10                	mov    (%eax),%edx
 34e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 351:	01 c2                	add    %eax,%edx
 353:	0f b6 45 cf          	movzbl -0x31(%ebp),%eax
 357:	88 02                	mov    %al,(%edx)
 359:	eb 13                	jmp    36e <main+0x36e>
 35b:	c7 c0 84 13 00 00    	mov    $0x1384,%eax
 361:	8b 10                	mov    (%eax),%edx
 363:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 366:	01 c2                	add    %eax,%edx
 368:	0f b6 45 cf          	movzbl -0x31(%ebp),%eax
 36c:	88 02                	mov    %al,(%edx)
 36e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 372:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 379:	eb 4d                	jmp    3c8 <main+0x3c8>
 37b:	c7 c0 a4 09 00 00    	mov    $0x9a4,%eax
 381:	8b 10                	mov    (%eax),%edx
 383:	c7 c0 88 13 00 00    	mov    $0x1388,%eax
 389:	8b 00                	mov    (%eax),%eax
 38b:	d1 e8                	shr    %eax
 38d:	89 c1                	mov    %eax,%ecx
 38f:	8b 45 d8             	mov    -0x28(%ebp),%eax
 392:	01 c8                	add    %ecx,%eax
 394:	8d 48 ed             	lea    -0x13(%eax),%ecx
 397:	c7 c0 a0 09 00 00    	mov    $0x9a0,%eax
 39d:	8b 00                	mov    (%eax),%eax
 39f:	0f af c8             	imul   %eax,%ecx
 3a2:	c7 c0 a0 09 00 00    	mov    $0x9a0,%eax
 3a8:	8b 00                	mov    (%eax),%eax
 3aa:	d1 e8                	shr    %eax
 3ac:	01 c1                	add    %eax,%ecx
 3ae:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 3b1:	c1 e0 03             	shl    $0x3,%eax
 3b4:	01 c8                	add    %ecx,%eax
 3b6:	83 e8 6a             	sub    $0x6a,%eax
 3b9:	c1 e0 02             	shl    $0x2,%eax
 3bc:	01 d0                	add    %edx,%eax
 3be:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 3c4:	83 45 d8 01          	addl   $0x1,-0x28(%ebp)
 3c8:	83 7d d8 09          	cmpl   $0x9,-0x28(%ebp)
 3cc:	7e ad                	jle    37b <main+0x37b>
 3ce:	e8 84 04 00 00       	call   857 <swap_buffers>
 3d3:	80 7d e2 00          	cmpb   $0x0,-0x1e(%ebp)
 3d7:	0f 85 6e fd ff ff    	jne    14b <main+0x14b>
 3dd:	eb 01                	jmp    3e0 <main+0x3e0>
 3df:	90                   	nop
 3e0:	83 ec 0c             	sub    $0xc,%esp
 3e3:	ff 75 d0             	pushl  -0x30(%ebp)
 3e6:	e8 6d 03 00 00       	call   758 <free>
 3eb:	83 c4 10             	add    $0x10,%esp
 3ee:	c7 c0 a8 09 00 00    	mov    $0x9a8,%eax
 3f4:	8b 00                	mov    (%eax),%eax
 3f6:	83 ec 0c             	sub    $0xc,%esp
 3f9:	50                   	push   %eax
 3fa:	e8 59 03 00 00       	call   758 <free>
 3ff:	83 c4 10             	add    $0x10,%esp
 402:	c7 c0 84 13 00 00    	mov    $0x1384,%eax
 408:	8b 00                	mov    (%eax),%eax
 40a:	83 ec 0c             	sub    $0xc,%esp
 40d:	50                   	push   %eax
 40e:	e8 45 03 00 00       	call   758 <free>
 413:	83 c4 10             	add    $0x10,%esp
 416:	83 ec 0c             	sub    $0xc,%esp
 419:	6a 00                	push   $0x0
 41b:	e8 0e 04 00 00       	call   82e <set_backbuffer>
 420:	83 c4 10             	add    $0x10,%esp
 423:	83 ec 0c             	sub    $0xc,%esp
 426:	6a 00                	push   $0x0
 428:	e8 94 03 00 00       	call   7c1 <clear_screen>
 42d:	83 c4 10             	add    $0x10,%esp
 430:	e8 41 03 00 00       	call   776 <toggle_console>
 435:	b8 00 00 00 00       	mov    $0x0,%eax
 43a:	8d 65 f4             	lea    -0xc(%ebp),%esp
 43d:	59                   	pop    %ecx
 43e:	5b                   	pop    %ebx
 43f:	5e                   	pop    %esi
 440:	5d                   	pop    %ebp
 441:	8d 61 fc             	lea    -0x4(%ecx),%esp
 444:	c3                   	ret    

00000445 <load_image>:
 445:	55                   	push   %ebp
 446:	89 e5                	mov    %esp,%ebp
 448:	53                   	push   %ebx
 449:	83 ec 14             	sub    $0x14,%esp
 44c:	e8 d2 01 00 00       	call   623 <__x86.get_pc_thunk.bx>
 451:	81 c3 03 02 00 00    	add    $0x203,%ebx
 457:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 45e:	eb 6d                	jmp    4cd <load_image+0x88>
 460:	8b 45 08             	mov    0x8(%ebp),%eax
 463:	8b 50 04             	mov    0x4(%eax),%edx
 466:	8b 45 f4             	mov    -0xc(%ebp),%eax
 469:	01 d0                	add    %edx,%eax
 46b:	83 ec 0c             	sub    $0xc,%esp
 46e:	50                   	push   %eax
 46f:	e8 62 02 00 00       	call   6d6 <fread>
 474:	83 c4 10             	add    $0x10,%esp
 477:	89 45 ec             	mov    %eax,-0x14(%ebp)
 47a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 481:	eb 3a                	jmp    4bd <load_image+0x78>
 483:	8b 45 f4             	mov    -0xc(%ebp),%eax
 486:	c1 e0 0b             	shl    $0xb,%eax
 489:	89 c2                	mov    %eax,%edx
 48b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 48e:	01 c2                	add    %eax,%edx
 490:	8b 45 08             	mov    0x8(%ebp),%eax
 493:	8b 40 0c             	mov    0xc(%eax),%eax
 496:	39 c2                	cmp    %eax,%edx
 498:	73 2e                	jae    4c8 <load_image+0x83>
 49a:	8b 55 ec             	mov    -0x14(%ebp),%edx
 49d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 4a0:	01 d0                	add    %edx,%eax
 4a2:	8b 55 f4             	mov    -0xc(%ebp),%edx
 4a5:	89 d1                	mov    %edx,%ecx
 4a7:	c1 e1 0b             	shl    $0xb,%ecx
 4aa:	8b 55 f0             	mov    -0x10(%ebp),%edx
 4ad:	01 d1                	add    %edx,%ecx
 4af:	8b 55 0c             	mov    0xc(%ebp),%edx
 4b2:	01 ca                	add    %ecx,%edx
 4b4:	0f b6 00             	movzbl (%eax),%eax
 4b7:	88 02                	mov    %al,(%edx)
 4b9:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 4bd:	81 7d f0 ff 07 00 00 	cmpl   $0x7ff,-0x10(%ebp)
 4c4:	76 bd                	jbe    483 <load_image+0x3e>
 4c6:	eb 01                	jmp    4c9 <load_image+0x84>
 4c8:	90                   	nop
 4c9:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 4cd:	8b 45 08             	mov    0x8(%ebp),%eax
 4d0:	8b 40 08             	mov    0x8(%eax),%eax
 4d3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
 4d6:	72 88                	jb     460 <load_image+0x1b>
 4d8:	90                   	nop
 4d9:	90                   	nop
 4da:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 4dd:	c9                   	leave  
 4de:	c3                   	ret    

000004df <draw_rect>:
 4df:	55                   	push   %ebp
 4e0:	89 e5                	mov    %esp,%ebp
 4e2:	56                   	push   %esi
 4e3:	53                   	push   %ebx
 4e4:	83 ec 10             	sub    $0x10,%esp
 4e7:	e8 33 01 00 00       	call   61f <__x86.get_pc_thunk.ax>
 4ec:	05 68 01 00 00       	add    $0x168,%eax
 4f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 4f8:	eb 48                	jmp    542 <draw_rect+0x63>
 4fa:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 501:	eb 33                	jmp    536 <draw_rect+0x57>
 503:	c7 c2 a4 09 00 00    	mov    $0x9a4,%edx
 509:	8b 0a                	mov    (%edx),%ecx
 50b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
 50e:	8b 55 f4             	mov    -0xc(%ebp),%edx
 511:	01 d3                	add    %edx,%ebx
 513:	c7 c2 a0 09 00 00    	mov    $0x9a0,%edx
 519:	8b 12                	mov    (%edx),%edx
 51b:	0f af d3             	imul   %ebx,%edx
 51e:	8b 75 08             	mov    0x8(%ebp),%esi
 521:	8b 5d f0             	mov    -0x10(%ebp),%ebx
 524:	01 f3                	add    %esi,%ebx
 526:	01 da                	add    %ebx,%edx
 528:	c1 e2 02             	shl    $0x2,%edx
 52b:	01 d1                	add    %edx,%ecx
 52d:	8b 55 18             	mov    0x18(%ebp),%edx
 530:	89 11                	mov    %edx,(%ecx)
 532:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 536:	8b 55 f0             	mov    -0x10(%ebp),%edx
 539:	3b 55 10             	cmp    0x10(%ebp),%edx
 53c:	72 c5                	jb     503 <draw_rect+0x24>
 53e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 542:	8b 55 f4             	mov    -0xc(%ebp),%edx
 545:	3b 55 14             	cmp    0x14(%ebp),%edx
 548:	72 b0                	jb     4fa <draw_rect+0x1b>
 54a:	90                   	nop
 54b:	90                   	nop
 54c:	83 c4 10             	add    $0x10,%esp
 54f:	5b                   	pop    %ebx
 550:	5e                   	pop    %esi
 551:	5d                   	pop    %ebp
 552:	c3                   	ret    

00000553 <draw_empty_rect>:
 553:	55                   	push   %ebp
 554:	89 e5                	mov    %esp,%ebp
 556:	53                   	push   %ebx
 557:	83 ec 14             	sub    $0x14,%esp
 55a:	e8 c4 00 00 00       	call   623 <__x86.get_pc_thunk.bx>
 55f:	81 c3 f5 00 00 00    	add    $0xf5,%ebx
 565:	e8 0b 04 00 00       	call   975 <getFramebuffer>
 56a:	89 45 ec             	mov    %eax,-0x14(%ebp)
 56d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 574:	eb 69                	jmp    5df <draw_empty_rect+0x8c>
 576:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 57d:	eb 54                	jmp    5d3 <draw_empty_rect+0x80>
 57f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 583:	74 1c                	je     5a1 <draw_empty_rect+0x4e>
 585:	8b 45 14             	mov    0x14(%ebp),%eax
 588:	83 e8 01             	sub    $0x1,%eax
 58b:	39 45 f4             	cmp    %eax,-0xc(%ebp)
 58e:	74 11                	je     5a1 <draw_empty_rect+0x4e>
 590:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 594:	74 0b                	je     5a1 <draw_empty_rect+0x4e>
 596:	8b 45 10             	mov    0x10(%ebp),%eax
 599:	83 e8 01             	sub    $0x1,%eax
 59c:	39 45 f0             	cmp    %eax,-0x10(%ebp)
 59f:	75 2e                	jne    5cf <draw_empty_rect+0x7c>
 5a1:	8b 55 0c             	mov    0xc(%ebp),%edx
 5a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
 5a7:	01 c2                	add    %eax,%edx
 5a9:	c7 c0 a0 09 00 00    	mov    $0x9a0,%eax
 5af:	8b 00                	mov    (%eax),%eax
 5b1:	0f af c2             	imul   %edx,%eax
 5b4:	8b 4d 08             	mov    0x8(%ebp),%ecx
 5b7:	8b 55 f0             	mov    -0x10(%ebp),%edx
 5ba:	01 ca                	add    %ecx,%edx
 5bc:	01 d0                	add    %edx,%eax
 5be:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 5c5:	8b 45 ec             	mov    -0x14(%ebp),%eax
 5c8:	01 c2                	add    %eax,%edx
 5ca:	8b 45 18             	mov    0x18(%ebp),%eax
 5cd:	89 02                	mov    %eax,(%edx)
 5cf:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 5d3:	8b 45 f0             	mov    -0x10(%ebp),%eax
 5d6:	3b 45 10             	cmp    0x10(%ebp),%eax
 5d9:	72 a4                	jb     57f <draw_empty_rect+0x2c>
 5db:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 5df:	8b 45 f4             	mov    -0xc(%ebp),%eax
 5e2:	3b 45 14             	cmp    0x14(%ebp),%eax
 5e5:	72 8f                	jb     576 <draw_empty_rect+0x23>
 5e7:	90                   	nop
 5e8:	90                   	nop
 5e9:	83 c4 14             	add    $0x14,%esp
 5ec:	5b                   	pop    %ebx
 5ed:	5d                   	pop    %ebp
 5ee:	c3                   	ret    
 5ef:	53                   	push   %ebx
 5f0:	74 61                	je     653 <__x86.get_pc_thunk.bx+0x30>
 5f2:	72 74                	jb     668 <print+0x8>
 5f4:	69 6e 67 20 4c 6f 67 	imul   $0x676f4c20,0x67(%esi),%ebp
 5fb:	69 6e 21 0a 00 2e 2f 	imul   $0x2f2e000a,0x21(%esi),%ebp
 602:	4c                   	dec    %esp
 603:	4f                   	dec    %edi
 604:	47                   	inc    %edi
 605:	49                   	dec    %ecx
 606:	4e                   	dec    %esi
 607:	2f                   	das    
 608:	49                   	dec    %ecx
 609:	43                   	inc    %ebx
 60a:	4f                   	dec    %edi
 60b:	4e                   	dec    %esi
 60c:	2e 42                	cs inc %edx
 60e:	49                   	dec    %ecx
 60f:	4e                   	dec    %esi
 610:	00 57 3a             	add    %dl,0x3a(%edi)
 613:	20 25 78 20 00 48    	and    %ah,0x48002078
 619:	3a 20                	cmp    (%eax),%ah
 61b:	25                   	.byte 0x25
 61c:	78 0a                	js     628 <__x86.get_pc_thunk.bx+0x5>
	...

0000061f <__x86.get_pc_thunk.ax>:
 61f:	8b 04 24             	mov    (%esp),%eax
 622:	c3                   	ret    

00000623 <__x86.get_pc_thunk.bx>:
 623:	8b 1c 24             	mov    (%esp),%ebx
 626:	c3                   	ret    
 627:	47                   	inc    %edi
 628:	43                   	inc    %ebx
 629:	43                   	inc    %ebx
 62a:	3a 20                	cmp    (%eax),%ah
 62c:	28 55 62             	sub    %dl,0x62(%ebp)
 62f:	75 6e                	jne    69f <fopen+0x4>
 631:	74 75                	je     6a8 <fopen+0xd>
 633:	20 39                	and    %bh,(%ecx)
 635:	2e 34 2e             	cs xor $0x2e,%al
 638:	30 2d 31 75 62 75    	xor    %ch,0x75627531
 63e:	6e                   	outsb  %ds:(%esi),(%dx)
 63f:	74 75                	je     6b6 <fopen+0x1b>
 641:	31 7e 32             	xor    %edi,0x32(%esi)
 644:	30 2e                	xor    %ch,(%esi)
 646:	30 34 2e             	xor    %dh,(%esi,%ebp,1)
 649:	31 29                	xor    %ebp,(%ecx)
 64b:	20 39                	and    %bh,(%ecx)
 64d:	2e 34 2e             	cs xor $0x2e,%al
 650:	30 00                	xor    %al,(%eax)
 652:	66 90                	xchg   %ax,%ax

00000654 <_GLOBAL_OFFSET_TABLE_>:
	...

00000660 <print>:
 660:	55                   	push   %ebp
 661:	89 e5                	mov    %esp,%ebp
 663:	53                   	push   %ebx
 664:	e8 b6 ff ff ff       	call   61f <__x86.get_pc_thunk.ax>
 669:	05 eb ff ff ff       	add    $0xffffffeb,%eax
 66e:	b8 01 00 00 00       	mov    $0x1,%eax
 673:	8b 5d 08             	mov    0x8(%ebp),%ebx
 676:	cd 80                	int    $0x80
 678:	90                   	nop
 679:	5b                   	pop    %ebx
 67a:	5d                   	pop    %ebp
 67b:	c3                   	ret    

0000067c <printval>:
 67c:	55                   	push   %ebp
 67d:	89 e5                	mov    %esp,%ebp
 67f:	53                   	push   %ebx
 680:	e8 9a ff ff ff       	call   61f <__x86.get_pc_thunk.ax>
 685:	05 cf ff ff ff       	add    $0xffffffcf,%eax
 68a:	b8 03 00 00 00       	mov    $0x3,%eax
 68f:	8b 5d 08             	mov    0x8(%ebp),%ebx
 692:	8b 55 0c             	mov    0xc(%ebp),%edx
 695:	cd 80                	int    $0x80
 697:	90                   	nop
 698:	5b                   	pop    %ebx
 699:	5d                   	pop    %ebp
 69a:	c3                   	ret    

0000069b <fopen>:
 69b:	55                   	push   %ebp
 69c:	89 e5                	mov    %esp,%ebp
 69e:	53                   	push   %ebx
 69f:	e8 7b ff ff ff       	call   61f <__x86.get_pc_thunk.ax>
 6a4:	05 b0 ff ff ff       	add    $0xffffffb0,%eax
 6a9:	b8 11 00 00 00       	mov    $0x11,%eax
 6ae:	bb 00 00 00 00       	mov    $0x0,%ebx
 6b3:	8b 4d 08             	mov    0x8(%ebp),%ecx
 6b6:	cd 80                	int    $0x80
 6b8:	5b                   	pop    %ebx
 6b9:	5d                   	pop    %ebp
 6ba:	c3                   	ret    

000006bb <fclose>:
 6bb:	55                   	push   %ebp
 6bc:	89 e5                	mov    %esp,%ebp
 6be:	53                   	push   %ebx
 6bf:	e8 5b ff ff ff       	call   61f <__x86.get_pc_thunk.ax>
 6c4:	05 90 ff ff ff       	add    $0xffffff90,%eax
 6c9:	b8 12 00 00 00       	mov    $0x12,%eax
 6ce:	8b 5d 08             	mov    0x8(%ebp),%ebx
 6d1:	cd 80                	int    $0x80
 6d3:	5b                   	pop    %ebx
 6d4:	5d                   	pop    %ebp
 6d5:	c3                   	ret    

000006d6 <fread>:
 6d6:	55                   	push   %ebp
 6d7:	89 e5                	mov    %esp,%ebp
 6d9:	53                   	push   %ebx
 6da:	e8 40 ff ff ff       	call   61f <__x86.get_pc_thunk.ax>
 6df:	05 75 ff ff ff       	add    $0xffffff75,%eax
 6e4:	b8 13 00 00 00       	mov    $0x13,%eax
 6e9:	bb 00 00 00 00       	mov    $0x0,%ebx
 6ee:	8b 55 08             	mov    0x8(%ebp),%edx
 6f1:	89 d1                	mov    %edx,%ecx
 6f3:	cd 80                	int    $0x80
 6f5:	5b                   	pop    %ebx
 6f6:	5d                   	pop    %ebp
 6f7:	c3                   	ret    

000006f8 <image_load_buffer>:
 6f8:	55                   	push   %ebp
 6f9:	89 e5                	mov    %esp,%ebp
 6fb:	53                   	push   %ebx
 6fc:	e8 1e ff ff ff       	call   61f <__x86.get_pc_thunk.ax>
 701:	05 53 ff ff ff       	add    $0xffffff53,%eax
 706:	8b 45 08             	mov    0x8(%ebp),%eax
 709:	89 c3                	mov    %eax,%ebx
 70b:	8b 45 0c             	mov    0xc(%ebp),%eax
 70e:	89 c1                	mov    %eax,%ecx
 710:	8b 55 10             	mov    0x10(%ebp),%edx
 713:	b8 0b 00 00 00       	mov    $0xb,%eax
 718:	cd 80                	int    $0x80
 71a:	90                   	nop
 71b:	5b                   	pop    %ebx
 71c:	5d                   	pop    %ebp
 71d:	c3                   	ret    

0000071e <draw_image>:
 71e:	55                   	push   %ebp
 71f:	89 e5                	mov    %esp,%ebp
 721:	53                   	push   %ebx
 722:	e8 f8 fe ff ff       	call   61f <__x86.get_pc_thunk.ax>
 727:	05 2d ff ff ff       	add    $0xffffff2d,%eax
 72c:	b8 0c 00 00 00       	mov    $0xc,%eax
 731:	8b 5d 08             	mov    0x8(%ebp),%ebx
 734:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 737:	cd 80                	int    $0x80
 739:	90                   	nop
 73a:	5b                   	pop    %ebx
 73b:	5d                   	pop    %ebp
 73c:	c3                   	ret    

0000073d <malloc>:
 73d:	55                   	push   %ebp
 73e:	89 e5                	mov    %esp,%ebp
 740:	53                   	push   %ebx
 741:	e8 d9 fe ff ff       	call   61f <__x86.get_pc_thunk.ax>
 746:	05 0e ff ff ff       	add    $0xffffff0e,%eax
 74b:	b8 06 00 00 00       	mov    $0x6,%eax
 750:	8b 5d 08             	mov    0x8(%ebp),%ebx
 753:	cd 80                	int    $0x80
 755:	5b                   	pop    %ebx
 756:	5d                   	pop    %ebp
 757:	c3                   	ret    

00000758 <free>:
 758:	55                   	push   %ebp
 759:	89 e5                	mov    %esp,%ebp
 75b:	53                   	push   %ebx
 75c:	e8 be fe ff ff       	call   61f <__x86.get_pc_thunk.ax>
 761:	05 f3 fe ff ff       	add    $0xfffffef3,%eax
 766:	b8 07 00 00 00       	mov    $0x7,%eax
 76b:	8b 45 08             	mov    0x8(%ebp),%eax
 76e:	89 c3                	mov    %eax,%ebx
 770:	cd 80                	int    $0x80
 772:	90                   	nop
 773:	5b                   	pop    %ebx
 774:	5d                   	pop    %ebp
 775:	c3                   	ret    

00000776 <toggle_console>:
 776:	55                   	push   %ebp
 777:	89 e5                	mov    %esp,%ebp
 779:	e8 a1 fe ff ff       	call   61f <__x86.get_pc_thunk.ax>
 77e:	05 d6 fe ff ff       	add    $0xfffffed6,%eax
 783:	b8 0f 00 00 00       	mov    $0xf,%eax
 788:	cd 80                	int    $0x80
 78a:	90                   	nop
 78b:	5d                   	pop    %ebp
 78c:	c3                   	ret    

0000078d <get_ascii_key_index>:
 78d:	55                   	push   %ebp
 78e:	89 e5                	mov    %esp,%ebp
 790:	53                   	push   %ebx
 791:	e8 89 fe ff ff       	call   61f <__x86.get_pc_thunk.ax>
 796:	05 be fe ff ff       	add    $0xfffffebe,%eax
 79b:	b8 0a 00 00 00       	mov    $0xa,%eax
 7a0:	cd 80                	int    $0x80
 7a2:	89 d8                	mov    %ebx,%eax
 7a4:	5b                   	pop    %ebx
 7a5:	5d                   	pop    %ebp
 7a6:	c3                   	ret    

000007a7 <get_ascii_key>:
 7a7:	55                   	push   %ebp
 7a8:	89 e5                	mov    %esp,%ebp
 7aa:	53                   	push   %ebx
 7ab:	e8 6f fe ff ff       	call   61f <__x86.get_pc_thunk.ax>
 7b0:	05 a4 fe ff ff       	add    $0xfffffea4,%eax
 7b5:	b8 09 00 00 00       	mov    $0x9,%eax
 7ba:	cd 80                	int    $0x80
 7bc:	89 d8                	mov    %ebx,%eax
 7be:	5b                   	pop    %ebx
 7bf:	5d                   	pop    %ebp
 7c0:	c3                   	ret    

000007c1 <clear_screen>:
 7c1:	55                   	push   %ebp
 7c2:	89 e5                	mov    %esp,%ebp
 7c4:	53                   	push   %ebx
 7c5:	e8 55 fe ff ff       	call   61f <__x86.get_pc_thunk.ax>
 7ca:	05 8a fe ff ff       	add    $0xfffffe8a,%eax
 7cf:	8b 5d 08             	mov    0x8(%ebp),%ebx
 7d2:	b8 10 00 00 00       	mov    $0x10,%eax
 7d7:	cd 80                	int    $0x80
 7d9:	90                   	nop
 7da:	5b                   	pop    %ebx
 7db:	5d                   	pop    %ebp
 7dc:	c3                   	ret    

000007dd <get_display>:
 7dd:	55                   	push   %ebp
 7de:	89 e5                	mov    %esp,%ebp
 7e0:	53                   	push   %ebx
 7e1:	83 ec 10             	sub    $0x10,%esp
 7e4:	e8 36 fe ff ff       	call   61f <__x86.get_pc_thunk.ax>
 7e9:	05 6b fe ff ff       	add    $0xfffffe6b,%eax
 7ee:	b8 08 00 00 00       	mov    $0x8,%eax
 7f3:	cd 80                	int    $0x80
 7f5:	89 d8                	mov    %ebx,%eax
 7f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 7fa:	89 c8                	mov    %ecx,%eax
 7fc:	89 45 f8             	mov    %eax,-0x8(%ebp)
 7ff:	8b 4d 08             	mov    0x8(%ebp),%ecx
 802:	8b 45 f4             	mov    -0xc(%ebp),%eax
 805:	8b 55 f8             	mov    -0x8(%ebp),%edx
 808:	89 01                	mov    %eax,(%ecx)
 80a:	89 51 04             	mov    %edx,0x4(%ecx)
 80d:	8b 45 08             	mov    0x8(%ebp),%eax
 810:	83 c4 10             	add    $0x10,%esp
 813:	5b                   	pop    %ebx
 814:	5d                   	pop    %ebp
 815:	c2 04 00             	ret    $0x4

00000818 <get_timer_ticks>:
 818:	55                   	push   %ebp
 819:	89 e5                	mov    %esp,%ebp
 81b:	e8 ff fd ff ff       	call   61f <__x86.get_pc_thunk.ax>
 820:	05 34 fe ff ff       	add    $0xfffffe34,%eax
 825:	b8 14 00 00 00       	mov    $0x14,%eax
 82a:	cd 80                	int    $0x80
 82c:	5d                   	pop    %ebp
 82d:	c3                   	ret    

0000082e <set_backbuffer>:
 82e:	55                   	push   %ebp
 82f:	89 e5                	mov    %esp,%ebp
 831:	53                   	push   %ebx
 832:	83 ec 04             	sub    $0x4,%esp
 835:	e8 e5 fd ff ff       	call   61f <__x86.get_pc_thunk.ax>
 83a:	05 1a fe ff ff       	add    $0xfffffe1a,%eax
 83f:	8b 45 08             	mov    0x8(%ebp),%eax
 842:	88 45 f8             	mov    %al,-0x8(%ebp)
 845:	0f b6 5d f8          	movzbl -0x8(%ebp),%ebx
 849:	b8 15 00 00 00       	mov    $0x15,%eax
 84e:	cd 80                	int    $0x80
 850:	90                   	nop
 851:	83 c4 04             	add    $0x4,%esp
 854:	5b                   	pop    %ebx
 855:	5d                   	pop    %ebp
 856:	c3                   	ret    

00000857 <swap_buffers>:
 857:	55                   	push   %ebp
 858:	89 e5                	mov    %esp,%ebp
 85a:	e8 c0 fd ff ff       	call   61f <__x86.get_pc_thunk.ax>
 85f:	05 f5 fd ff ff       	add    $0xfffffdf5,%eax
 864:	b8 16 00 00 00       	mov    $0x16,%eax
 869:	cd 80                	int    $0x80
 86b:	90                   	nop
 86c:	5d                   	pop    %ebp
 86d:	c3                   	ret    

0000086e <get_key>:
 86e:	55                   	push   %ebp
 86f:	89 e5                	mov    %esp,%ebp
 871:	53                   	push   %ebx
 872:	83 ec 10             	sub    $0x10,%esp
 875:	e8 a9 fd ff ff       	call   623 <__x86.get_pc_thunk.bx>
 87a:	81 c3 da fd ff ff    	add    $0xfffffdda,%ebx
 880:	e8 08 ff ff ff       	call   78d <get_ascii_key_index>
 885:	89 45 f8             	mov    %eax,-0x8(%ebp)
 888:	c7 c0 90 13 00 00    	mov    $0x1390,%eax
 88e:	8b 00                	mov    (%eax),%eax
 890:	39 45 f8             	cmp    %eax,-0x8(%ebp)
 893:	74 12                	je     8a7 <get_key+0x39>
 895:	c7 c0 90 13 00 00    	mov    $0x1390,%eax
 89b:	8b 55 f8             	mov    -0x8(%ebp),%edx
 89e:	89 10                	mov    %edx,(%eax)
 8a0:	e8 02 ff ff ff       	call   7a7 <get_ascii_key>
 8a5:	eb 05                	jmp    8ac <get_key+0x3e>
 8a7:	b8 00 00 00 00       	mov    $0x0,%eax
 8ac:	83 c4 10             	add    $0x10,%esp
 8af:	5b                   	pop    %ebx
 8b0:	5d                   	pop    %ebp
 8b1:	c3                   	ret    

000008b2 <get_keycode_index>:
 8b2:	55                   	push   %ebp
 8b3:	89 e5                	mov    %esp,%ebp
 8b5:	53                   	push   %ebx
 8b6:	e8 64 fd ff ff       	call   61f <__x86.get_pc_thunk.ax>
 8bb:	05 99 fd ff ff       	add    $0xfffffd99,%eax
 8c0:	b8 19 00 00 00       	mov    $0x19,%eax
 8c5:	cd 80                	int    $0x80
 8c7:	89 d8                	mov    %ebx,%eax
 8c9:	5b                   	pop    %ebx
 8ca:	5d                   	pop    %ebp
 8cb:	c3                   	ret    

000008cc <get_keycode>:
 8cc:	55                   	push   %ebp
 8cd:	89 e5                	mov    %esp,%ebp
 8cf:	53                   	push   %ebx
 8d0:	e8 4a fd ff ff       	call   61f <__x86.get_pc_thunk.ax>
 8d5:	05 7f fd ff ff       	add    $0xfffffd7f,%eax
 8da:	b8 18 00 00 00       	mov    $0x18,%eax
 8df:	cd 80                	int    $0x80
 8e1:	89 d8                	mov    %ebx,%eax
 8e3:	5b                   	pop    %ebx
 8e4:	5d                   	pop    %ebp
 8e5:	c3                   	ret    

000008e6 <get_keycode_next>:
 8e6:	55                   	push   %ebp
 8e7:	89 e5                	mov    %esp,%ebp
 8e9:	53                   	push   %ebx
 8ea:	83 ec 10             	sub    $0x10,%esp
 8ed:	e8 31 fd ff ff       	call   623 <__x86.get_pc_thunk.bx>
 8f2:	81 c3 62 fd ff ff    	add    $0xfffffd62,%ebx
 8f8:	e8 b5 ff ff ff       	call   8b2 <get_keycode_index>
 8fd:	89 45 f8             	mov    %eax,-0x8(%ebp)
 900:	c7 c0 8c 13 00 00    	mov    $0x138c,%eax
 906:	8b 00                	mov    (%eax),%eax
 908:	39 45 f8             	cmp    %eax,-0x8(%ebp)
 90b:	74 12                	je     91f <get_keycode_next+0x39>
 90d:	c7 c0 8c 13 00 00    	mov    $0x138c,%eax
 913:	8b 55 f8             	mov    -0x8(%ebp),%edx
 916:	89 10                	mov    %edx,(%eax)
 918:	e8 af ff ff ff       	call   8cc <get_keycode>
 91d:	eb 05                	jmp    924 <get_keycode_next+0x3e>
 91f:	b8 00 00 00 00       	mov    $0x0,%eax
 924:	83 c4 10             	add    $0x10,%esp
 927:	5b                   	pop    %ebx
 928:	5d                   	pop    %ebp
 929:	c3                   	ret    

0000092a <printChar>:
 92a:	55                   	push   %ebp
 92b:	89 e5                	mov    %esp,%ebp
 92d:	53                   	push   %ebx
 92e:	83 ec 04             	sub    $0x4,%esp
 931:	e8 e9 fc ff ff       	call   61f <__x86.get_pc_thunk.ax>
 936:	05 1e fd ff ff       	add    $0xfffffd1e,%eax
 93b:	8b 45 10             	mov    0x10(%ebp),%eax
 93e:	88 45 f8             	mov    %al,-0x8(%ebp)
 941:	b8 04 00 00 00       	mov    $0x4,%eax
 946:	8b 5d 08             	mov    0x8(%ebp),%ebx
 949:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 94c:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
 950:	cd 80                	int    $0x80
 952:	90                   	nop
 953:	83 c4 04             	add    $0x4,%esp
 956:	5b                   	pop    %ebx
 957:	5d                   	pop    %ebp
 958:	c3                   	ret    

00000959 <setPrintColor>:
 959:	55                   	push   %ebp
 95a:	89 e5                	mov    %esp,%ebp
 95c:	53                   	push   %ebx
 95d:	e8 bd fc ff ff       	call   61f <__x86.get_pc_thunk.ax>
 962:	05 f2 fc ff ff       	add    $0xfffffcf2,%eax
 967:	b8 1a 00 00 00       	mov    $0x1a,%eax
 96c:	8b 5d 08             	mov    0x8(%ebp),%ebx
 96f:	cd 80                	int    $0x80
 971:	90                   	nop
 972:	5b                   	pop    %ebx
 973:	5d                   	pop    %ebp
 974:	c3                   	ret    

00000975 <getFramebuffer>:
 975:	55                   	push   %ebp
 976:	89 e5                	mov    %esp,%ebp
 978:	e8 a2 fc ff ff       	call   61f <__x86.get_pc_thunk.ax>
 97d:	05 d7 fc ff ff       	add    $0xfffffcd7,%eax
 982:	b8 17 00 00 00       	mov    $0x17,%eax
 987:	cd 80                	int    $0x80
 989:	5d                   	pop    %ebp
 98a:	c3                   	ret    
