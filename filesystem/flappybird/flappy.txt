
flappy.elf:     file format elf32-i386


Disassembly of section .text:

00000000 <main>:
   0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
   4:	83 e4 f0             	and    $0xfffffff0,%esp
   7:	ff 71 fc             	pushl  -0x4(%ecx)
   a:	55                   	push   %ebp
   b:	89 e5                	mov    %esp,%ebp
   d:	53                   	push   %ebx
   e:	51                   	push   %ecx
   f:	83 ec 30             	sub    $0x30,%esp
  12:	e8 ca 04 00 00       	call   4e1 <__x86.get_pc_thunk.bx>
  17:	81 c3 f9 04 00 00    	add    $0x4f9,%ebx
  1d:	e8 27 06 00 00       	call   649 <get_ascii_key_index>
  22:	c7 c2 ac 06 00 00    	mov    $0x6ac,%edx
  28:	89 02                	mov    %eax,(%edx)
  2a:	e8 65 06 00 00       	call   694 <get_timer_ticks>
  2f:	83 ec 08             	sub    $0x8,%esp
  32:	50                   	push   %eax
  33:	8d 83 7c ff ff ff    	lea    -0x84(%ebx),%eax
  39:	50                   	push   %eax
  3a:	e8 f9 04 00 00       	call   538 <printval>
  3f:	83 c4 10             	add    $0x10,%esp
  42:	83 ec 0c             	sub    $0xc,%esp
  45:	8d 83 86 ff ff ff    	lea    -0x7a(%ebx),%eax
  4b:	50                   	push   %eax
  4c:	e8 cb 04 00 00       	call   51c <print>
  51:	83 c4 10             	add    $0x10,%esp
  54:	e8 d9 05 00 00       	call   632 <toggle_console>
  59:	e8 1f 06 00 00       	call   67d <clear_screen>
  5e:	83 ec 0c             	sub    $0xc,%esp
  61:	8d 83 96 ff ff ff    	lea    -0x6a(%ebx),%eax
  67:	50                   	push   %eax
  68:	e8 ea 04 00 00       	call   557 <fopen>
  6d:	83 c4 10             	add    $0x10,%esp
  70:	89 45 d8             	mov    %eax,-0x28(%ebp)
  73:	83 ec 0c             	sub    $0xc,%esp
  76:	8d 83 aa ff ff ff    	lea    -0x56(%ebx),%eax
  7c:	50                   	push   %eax
  7d:	e8 d5 04 00 00       	call   557 <fopen>
  82:	83 c4 10             	add    $0x10,%esp
  85:	89 45 d4             	mov    %eax,-0x2c(%ebp)
  88:	8b 45 d8             	mov    -0x28(%ebp),%eax
  8b:	8b 40 0c             	mov    0xc(%eax),%eax
  8e:	83 ec 0c             	sub    $0xc,%esp
  91:	50                   	push   %eax
  92:	e8 62 05 00 00       	call   5f9 <malloc>
  97:	83 c4 10             	add    $0x10,%esp
  9a:	89 45 d0             	mov    %eax,-0x30(%ebp)
  9d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  a0:	8b 40 0c             	mov    0xc(%eax),%eax
  a3:	83 ec 0c             	sub    $0xc,%esp
  a6:	50                   	push   %eax
  a7:	e8 4d 05 00 00       	call   5f9 <malloc>
  ac:	83 c4 10             	add    $0x10,%esp
  af:	89 45 cc             	mov    %eax,-0x34(%ebp)
  b2:	83 ec 08             	sub    $0x8,%esp
  b5:	ff 75 d0             	pushl  -0x30(%ebp)
  b8:	ff 75 d8             	pushl  -0x28(%ebp)
  bb:	e8 32 03 00 00       	call   3f2 <load_image>
  c0:	83 c4 10             	add    $0x10,%esp
  c3:	83 ec 08             	sub    $0x8,%esp
  c6:	ff 75 cc             	pushl  -0x34(%ebp)
  c9:	ff 75 d4             	pushl  -0x2c(%ebp)
  cc:	e8 21 03 00 00       	call   3f2 <load_image>
  d1:	83 c4 10             	add    $0x10,%esp
  d4:	83 ec 04             	sub    $0x4,%esp
  d7:	ff 75 cc             	pushl  -0x34(%ebp)
  da:	68 d2 00 00 00       	push   $0xd2
  df:	68 c0 00 00 00       	push   $0xc0
  e4:	e8 cb 04 00 00       	call   5b4 <image_load_buffer>
  e9:	83 c4 10             	add    $0x10,%esp
  ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  f3:	eb 1b                	jmp    110 <main+0x110>
  f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
  f8:	83 ec 08             	sub    $0x8,%esp
  fb:	68 4e 02 00 00       	push   $0x24e
 100:	50                   	push   %eax
 101:	e8 d4 04 00 00       	call   5da <draw_image>
 106:	83 c4 10             	add    $0x10,%esp
 109:	81 45 f4 c0 00 00 00 	addl   $0xc0,-0xc(%ebp)
 110:	81 7d f4 ff 04 00 00 	cmpl   $0x4ff,-0xc(%ebp)
 117:	7e dc                	jle    f5 <main+0xf5>
 119:	83 ec 04             	sub    $0x4,%esp
 11c:	ff 75 d0             	pushl  -0x30(%ebp)
 11f:	6a 0c                	push   $0xc
 121:	6a 11                	push   $0x11
 123:	e8 8c 04 00 00       	call   5b4 <image_load_buffer>
 128:	83 c4 10             	add    $0x10,%esp
 12b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 132:	eb 2c                	jmp    160 <main+0x160>
 134:	8b 55 f0             	mov    -0x10(%ebp),%edx
 137:	89 d0                	mov    %edx,%eax
 139:	01 c0                	add    %eax,%eax
 13b:	01 d0                	add    %edx,%eax
 13d:	c1 e0 02             	shl    $0x2,%eax
 140:	89 c1                	mov    %eax,%ecx
 142:	8b 55 f0             	mov    -0x10(%ebp),%edx
 145:	89 d0                	mov    %edx,%eax
 147:	c1 e0 02             	shl    $0x2,%eax
 14a:	01 d0                	add    %edx,%eax
 14c:	c1 e0 02             	shl    $0x2,%eax
 14f:	83 ec 08             	sub    $0x8,%esp
 152:	51                   	push   %ecx
 153:	50                   	push   %eax
 154:	e8 81 04 00 00       	call   5da <draw_image>
 159:	83 c4 10             	add    $0x10,%esp
 15c:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 160:	83 7d f0 09          	cmpl   $0x9,-0x10(%ebp)
 164:	7e ce                	jle    134 <main+0x134>
 166:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
 16d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
 174:	c7 45 c8 32 00 00 00 	movl   $0x32,-0x38(%ebp)
 17b:	c7 45 e4 fa 00 00 00 	movl   $0xfa,-0x1c(%ebp)
 182:	83 ec 08             	sub    $0x8,%esp
 185:	ff 75 e4             	pushl  -0x1c(%ebp)
 188:	ff 75 c8             	pushl  -0x38(%ebp)
 18b:	e8 4a 04 00 00       	call   5da <draw_image>
 190:	83 c4 10             	add    $0x10,%esp
 193:	e9 5f 01 00 00       	jmp    2f7 <main+0x2f7>
 198:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
 19c:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 19f:	ba 01 10 00 00       	mov    $0x1001,%edx
 1a4:	89 c8                	mov    %ecx,%eax
 1a6:	f7 e2                	mul    %edx
 1a8:	89 c8                	mov    %ecx,%eax
 1aa:	29 d0                	sub    %edx,%eax
 1ac:	d1 e8                	shr    %eax
 1ae:	01 d0                	add    %edx,%eax
 1b0:	c1 e8 13             	shr    $0x13,%eax
 1b3:	89 c2                	mov    %eax,%edx
 1b5:	c1 e2 14             	shl    $0x14,%edx
 1b8:	29 c2                	sub    %eax,%edx
 1ba:	89 c8                	mov    %ecx,%eax
 1bc:	29 d0                	sub    %edx,%eax
 1be:	85 c0                	test   %eax,%eax
 1c0:	75 2f                	jne    1f1 <main+0x1f1>
 1c2:	81 7d e4 8f 01 00 00 	cmpl   $0x18f,-0x1c(%ebp)
 1c9:	77 26                	ja     1f1 <main+0x1f1>
 1cb:	83 ec 08             	sub    $0x8,%esp
 1ce:	ff 75 e4             	pushl  -0x1c(%ebp)
 1d1:	ff 75 c8             	pushl  -0x38(%ebp)
 1d4:	e8 82 01 00 00       	call   35b <clear_img>
 1d9:	83 c4 10             	add    $0x10,%esp
 1dc:	83 45 e4 0c          	addl   $0xc,-0x1c(%ebp)
 1e0:	83 ec 08             	sub    $0x8,%esp
 1e3:	ff 75 e4             	pushl  -0x1c(%ebp)
 1e6:	ff 75 c8             	pushl  -0x38(%ebp)
 1e9:	e8 ec 03 00 00       	call   5da <draw_image>
 1ee:	83 c4 10             	add    $0x10,%esp
 1f1:	e8 84 01 00 00       	call   37a <get_key>
 1f6:	0f be c0             	movsbl %al,%eax
 1f9:	83 f8 77             	cmp    $0x77,%eax
 1fc:	0f 84 a6 00 00 00    	je     2a8 <main+0x2a8>
 202:	83 f8 77             	cmp    $0x77,%eax
 205:	0f 8f ec 00 00 00    	jg     2f7 <main+0x2f7>
 20b:	83 f8 73             	cmp    $0x73,%eax
 20e:	0f 84 bc 00 00 00    	je     2d0 <main+0x2d0>
 214:	83 f8 73             	cmp    $0x73,%eax
 217:	0f 8f da 00 00 00    	jg     2f7 <main+0x2f7>
 21d:	83 f8 71             	cmp    $0x71,%eax
 220:	74 26                	je     248 <main+0x248>
 222:	83 f8 71             	cmp    $0x71,%eax
 225:	0f 8f cc 00 00 00    	jg     2f7 <main+0x2f7>
 22b:	83 f8 46             	cmp    $0x46,%eax
 22e:	74 24                	je     254 <main+0x254>
 230:	83 f8 46             	cmp    $0x46,%eax
 233:	0f 8f be 00 00 00    	jg     2f7 <main+0x2f7>
 239:	83 f8 20             	cmp    $0x20,%eax
 23c:	74 6a                	je     2a8 <main+0x2a8>
 23e:	83 f8 43             	cmp    $0x43,%eax
 241:	74 5e                	je     2a1 <main+0x2a1>
 243:	e9 af 00 00 00       	jmp    2f7 <main+0x2f7>
 248:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 24f:	e9 a3 00 00 00       	jmp    2f7 <main+0x2f7>
 254:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
 25b:	eb 3c                	jmp    299 <main+0x299>
 25d:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 264:	eb 29                	jmp    28f <main+0x28f>
 266:	8b 55 e0             	mov    -0x20(%ebp),%edx
 269:	89 d0                	mov    %edx,%eax
 26b:	01 c0                	add    %eax,%eax
 26d:	01 d0                	add    %edx,%eax
 26f:	c1 e0 02             	shl    $0x2,%eax
 272:	89 c1                	mov    %eax,%ecx
 274:	8b 55 dc             	mov    -0x24(%ebp),%edx
 277:	89 d0                	mov    %edx,%eax
 279:	c1 e0 04             	shl    $0x4,%eax
 27c:	01 d0                	add    %edx,%eax
 27e:	83 ec 08             	sub    $0x8,%esp
 281:	51                   	push   %ecx
 282:	50                   	push   %eax
 283:	e8 52 03 00 00       	call   5da <draw_image>
 288:	83 c4 10             	add    $0x10,%esp
 28b:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 28f:	83 7d dc 4a          	cmpl   $0x4a,-0x24(%ebp)
 293:	7e d1                	jle    266 <main+0x266>
 295:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
 299:	83 7d e0 40          	cmpl   $0x40,-0x20(%ebp)
 29d:	7e be                	jle    25d <main+0x25d>
 29f:	eb 56                	jmp    2f7 <main+0x2f7>
 2a1:	e8 d7 03 00 00       	call   67d <clear_screen>
 2a6:	eb 4f                	jmp    2f7 <main+0x2f7>
 2a8:	83 ec 08             	sub    $0x8,%esp
 2ab:	ff 75 e4             	pushl  -0x1c(%ebp)
 2ae:	ff 75 c8             	pushl  -0x38(%ebp)
 2b1:	e8 a5 00 00 00       	call   35b <clear_img>
 2b6:	83 c4 10             	add    $0x10,%esp
 2b9:	83 6d e4 0c          	subl   $0xc,-0x1c(%ebp)
 2bd:	83 ec 08             	sub    $0x8,%esp
 2c0:	ff 75 e4             	pushl  -0x1c(%ebp)
 2c3:	ff 75 c8             	pushl  -0x38(%ebp)
 2c6:	e8 0f 03 00 00       	call   5da <draw_image>
 2cb:	83 c4 10             	add    $0x10,%esp
 2ce:	eb 27                	jmp    2f7 <main+0x2f7>
 2d0:	83 ec 08             	sub    $0x8,%esp
 2d3:	ff 75 e4             	pushl  -0x1c(%ebp)
 2d6:	ff 75 c8             	pushl  -0x38(%ebp)
 2d9:	e8 7d 00 00 00       	call   35b <clear_img>
 2de:	83 c4 10             	add    $0x10,%esp
 2e1:	83 45 e4 0c          	addl   $0xc,-0x1c(%ebp)
 2e5:	83 ec 08             	sub    $0x8,%esp
 2e8:	ff 75 e4             	pushl  -0x1c(%ebp)
 2eb:	ff 75 c8             	pushl  -0x38(%ebp)
 2ee:	e8 e7 02 00 00       	call   5da <draw_image>
 2f3:	83 c4 10             	add    $0x10,%esp
 2f6:	90                   	nop
 2f7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 2fb:	0f 85 97 fe ff ff    	jne    198 <main+0x198>
 301:	83 ec 0c             	sub    $0xc,%esp
 304:	ff 75 d0             	pushl  -0x30(%ebp)
 307:	e8 08 03 00 00       	call   614 <free>
 30c:	83 c4 10             	add    $0x10,%esp
 30f:	83 ec 0c             	sub    $0xc,%esp
 312:	ff 75 d8             	pushl  -0x28(%ebp)
 315:	e8 5d 02 00 00       	call   577 <fclose>
 31a:	83 c4 10             	add    $0x10,%esp
 31d:	e8 10 03 00 00       	call   632 <toggle_console>
 322:	83 ec 0c             	sub    $0xc,%esp
 325:	8d 83 be ff ff ff    	lea    -0x42(%ebx),%eax
 32b:	50                   	push   %eax
 32c:	e8 eb 01 00 00       	call   51c <print>
 331:	83 c4 10             	add    $0x10,%esp
 334:	e8 5b 03 00 00       	call   694 <get_timer_ticks>
 339:	83 ec 08             	sub    $0x8,%esp
 33c:	50                   	push   %eax
 33d:	8d 83 7c ff ff ff    	lea    -0x84(%ebx),%eax
 343:	50                   	push   %eax
 344:	e8 ef 01 00 00       	call   538 <printval>
 349:	83 c4 10             	add    $0x10,%esp
 34c:	b8 00 00 00 00       	mov    $0x0,%eax
 351:	8d 65 f8             	lea    -0x8(%ebp),%esp
 354:	59                   	pop    %ecx
 355:	5b                   	pop    %ebx
 356:	5d                   	pop    %ebp
 357:	8d 61 fc             	lea    -0x4(%ecx),%esp
 35a:	c3                   	ret    

0000035b <clear_img>:
 35b:	55                   	push   %ebp
 35c:	89 e5                	mov    %esp,%ebp
 35e:	53                   	push   %ebx
 35f:	e8 79 01 00 00       	call   4dd <__x86.get_pc_thunk.ax>
 364:	05 ac 01 00 00       	add    $0x1ac,%eax
 369:	8b 5d 08             	mov    0x8(%ebp),%ebx
 36c:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 36f:	b8 0e 00 00 00       	mov    $0xe,%eax
 374:	cd 80                	int    $0x80
 376:	90                   	nop
 377:	5b                   	pop    %ebx
 378:	5d                   	pop    %ebp
 379:	c3                   	ret    

0000037a <get_key>:
 37a:	55                   	push   %ebp
 37b:	89 e5                	mov    %esp,%ebp
 37d:	53                   	push   %ebx
 37e:	83 ec 14             	sub    $0x14,%esp
 381:	e8 5b 01 00 00       	call   4e1 <__x86.get_pc_thunk.bx>
 386:	81 c3 8a 01 00 00    	add    $0x18a,%ebx
 38c:	e8 b8 02 00 00       	call   649 <get_ascii_key_index>
 391:	89 45 f4             	mov    %eax,-0xc(%ebp)
 394:	c7 c0 ac 06 00 00    	mov    $0x6ac,%eax
 39a:	8b 00                	mov    (%eax),%eax
 39c:	39 45 f4             	cmp    %eax,-0xc(%ebp)
 39f:	74 12                	je     3b3 <get_key+0x39>
 3a1:	c7 c0 ac 06 00 00    	mov    $0x6ac,%eax
 3a7:	8b 55 f4             	mov    -0xc(%ebp),%edx
 3aa:	89 10                	mov    %edx,(%eax)
 3ac:	e8 b2 02 00 00       	call   663 <get_ascii_key>
 3b1:	eb 05                	jmp    3b8 <get_key+0x3e>
 3b3:	b8 00 00 00 00       	mov    $0x0,%eax
 3b8:	83 c4 14             	add    $0x14,%esp
 3bb:	5b                   	pop    %ebx
 3bc:	5d                   	pop    %ebp
 3bd:	c3                   	ret    

000003be <delay>:
 3be:	55                   	push   %ebp
 3bf:	89 e5                	mov    %esp,%ebp
 3c1:	53                   	push   %ebx
 3c2:	83 ec 14             	sub    $0x14,%esp
 3c5:	e8 17 01 00 00       	call   4e1 <__x86.get_pc_thunk.bx>
 3ca:	81 c3 46 01 00 00    	add    $0x146,%ebx
 3d0:	e8 bf 02 00 00       	call   694 <get_timer_ticks>
 3d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
 3d8:	90                   	nop
 3d9:	e8 b6 02 00 00       	call   694 <get_timer_ticks>
 3de:	8b 4d 08             	mov    0x8(%ebp),%ecx
 3e1:	8b 55 f4             	mov    -0xc(%ebp),%edx
 3e4:	01 ca                	add    %ecx,%edx
 3e6:	39 d0                	cmp    %edx,%eax
 3e8:	72 ef                	jb     3d9 <delay+0x1b>
 3ea:	90                   	nop
 3eb:	90                   	nop
 3ec:	83 c4 14             	add    $0x14,%esp
 3ef:	5b                   	pop    %ebx
 3f0:	5d                   	pop    %ebp
 3f1:	c3                   	ret    

000003f2 <load_image>:
 3f2:	55                   	push   %ebp
 3f3:	89 e5                	mov    %esp,%ebp
 3f5:	53                   	push   %ebx
 3f6:	83 ec 14             	sub    $0x14,%esp
 3f9:	e8 e3 00 00 00       	call   4e1 <__x86.get_pc_thunk.bx>
 3fe:	81 c3 12 01 00 00    	add    $0x112,%ebx
 404:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 40b:	eb 6d                	jmp    47a <load_image+0x88>
 40d:	8b 45 08             	mov    0x8(%ebp),%eax
 410:	8b 50 04             	mov    0x4(%eax),%edx
 413:	8b 45 f4             	mov    -0xc(%ebp),%eax
 416:	01 d0                	add    %edx,%eax
 418:	83 ec 0c             	sub    $0xc,%esp
 41b:	50                   	push   %eax
 41c:	e8 71 01 00 00       	call   592 <fread>
 421:	83 c4 10             	add    $0x10,%esp
 424:	89 45 ec             	mov    %eax,-0x14(%ebp)
 427:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 42e:	eb 3a                	jmp    46a <load_image+0x78>
 430:	8b 45 f4             	mov    -0xc(%ebp),%eax
 433:	c1 e0 0b             	shl    $0xb,%eax
 436:	89 c2                	mov    %eax,%edx
 438:	8b 45 f0             	mov    -0x10(%ebp),%eax
 43b:	01 c2                	add    %eax,%edx
 43d:	8b 45 08             	mov    0x8(%ebp),%eax
 440:	8b 40 0c             	mov    0xc(%eax),%eax
 443:	39 c2                	cmp    %eax,%edx
 445:	73 2e                	jae    475 <load_image+0x83>
 447:	8b 55 ec             	mov    -0x14(%ebp),%edx
 44a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 44d:	01 d0                	add    %edx,%eax
 44f:	8b 55 f4             	mov    -0xc(%ebp),%edx
 452:	89 d1                	mov    %edx,%ecx
 454:	c1 e1 0b             	shl    $0xb,%ecx
 457:	8b 55 f0             	mov    -0x10(%ebp),%edx
 45a:	01 d1                	add    %edx,%ecx
 45c:	8b 55 0c             	mov    0xc(%ebp),%edx
 45f:	01 ca                	add    %ecx,%edx
 461:	0f b6 00             	movzbl (%eax),%eax
 464:	88 02                	mov    %al,(%edx)
 466:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 46a:	81 7d f0 ff 07 00 00 	cmpl   $0x7ff,-0x10(%ebp)
 471:	76 bd                	jbe    430 <load_image+0x3e>
 473:	eb 01                	jmp    476 <load_image+0x84>
 475:	90                   	nop
 476:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 47a:	8b 45 08             	mov    0x8(%ebp),%eax
 47d:	8b 40 08             	mov    0x8(%eax),%eax
 480:	39 45 f4             	cmp    %eax,-0xc(%ebp)
 483:	72 88                	jb     40d <load_image+0x1b>
 485:	90                   	nop
 486:	90                   	nop
 487:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 48a:	c9                   	leave  
 48b:	c3                   	ret    
 48c:	54                   	push   %esp
 48d:	69 63 6b 73 20 25 78 	imul   $0x78252073,0x6b(%ebx),%esp
 494:	0a 00                	or     (%eax),%al
 496:	50                   	push   %eax
 497:	72 6f                	jb     508 <__x86.get_pc_thunk.bx+0x27>
 499:	67 72 61             	addr16 jb 4fd <__x86.get_pc_thunk.bx+0x1c>
 49c:	6d                   	insl   (%dx),%es:(%edi)
 49d:	20 53 74             	and    %dl,0x74(%ebx)
 4a0:	61                   	popa   
 4a1:	72 74                	jb     517 <_GLOBAL_OFFSET_TABLE_+0x7>
 4a3:	21 0a                	and    %ecx,(%edx)
 4a5:	00 2e                	add    %ch,(%esi)
 4a7:	2f                   	das    
 4a8:	46                   	inc    %esi
 4a9:	4c                   	dec    %esp
 4aa:	41                   	inc    %ecx
 4ab:	50                   	push   %eax
 4ac:	50                   	push   %eax
 4ad:	59                   	pop    %ecx
 4ae:	42                   	inc    %edx
 4af:	49                   	dec    %ecx
 4b0:	2f                   	das    
 4b1:	42                   	inc    %edx
 4b2:	49                   	dec    %ecx
 4b3:	52                   	push   %edx
 4b4:	44                   	inc    %esp
 4b5:	2e 42                	cs inc %edx
 4b7:	49                   	dec    %ecx
 4b8:	4e                   	dec    %esi
 4b9:	00 2e                	add    %ch,(%esi)
 4bb:	2f                   	das    
 4bc:	46                   	inc    %esi
 4bd:	4c                   	dec    %esp
 4be:	41                   	inc    %ecx
 4bf:	50                   	push   %eax
 4c0:	50                   	push   %eax
 4c1:	59                   	pop    %ecx
 4c2:	42                   	inc    %edx
 4c3:	49                   	dec    %ecx
 4c4:	2f                   	das    
 4c5:	42                   	inc    %edx
 4c6:	41                   	inc    %ecx
 4c7:	43                   	inc    %ebx
 4c8:	4b                   	dec    %ebx
 4c9:	2e 42                	cs inc %edx
 4cb:	49                   	dec    %ecx
 4cc:	4e                   	dec    %esi
 4cd:	00 50 72             	add    %dl,0x72(%eax)
 4d0:	6f                   	outsl  %ds:(%esi),(%dx)
 4d1:	67 72 61             	addr16 jb 535 <print+0x19>
 4d4:	6d                   	insl   (%dx),%es:(%edi)
 4d5:	20 44 6f 6e          	and    %al,0x6e(%edi,%ebp,2)
 4d9:	65 21 0a             	and    %ecx,%gs:(%edx)
	...

000004dd <__x86.get_pc_thunk.ax>:
 4dd:	8b 04 24             	mov    (%esp),%eax
 4e0:	c3                   	ret    

000004e1 <__x86.get_pc_thunk.bx>:
 4e1:	8b 1c 24             	mov    (%esp),%ebx
 4e4:	c3                   	ret    
 4e5:	47                   	inc    %edi
 4e6:	43                   	inc    %ebx
 4e7:	43                   	inc    %ebx
 4e8:	3a 20                	cmp    (%eax),%ah
 4ea:	28 55 62             	sub    %dl,0x62(%ebp)
 4ed:	75 6e                	jne    55d <fopen+0x6>
 4ef:	74 75                	je     566 <fopen+0xf>
 4f1:	20 39                	and    %bh,(%ecx)
 4f3:	2e 34 2e             	cs xor $0x2e,%al
 4f6:	30 2d 31 75 62 75    	xor    %ch,0x75627531
 4fc:	6e                   	outsb  %ds:(%esi),(%dx)
 4fd:	74 75                	je     574 <fopen+0x1d>
 4ff:	31 7e 32             	xor    %edi,0x32(%esi)
 502:	30 2e                	xor    %ch,(%esi)
 504:	30 34 2e             	xor    %dh,(%esi,%ebp,1)
 507:	31 29                	xor    %ebp,(%ecx)
 509:	20 39                	and    %bh,(%ecx)
 50b:	2e 34 2e             	cs xor $0x2e,%al
 50e:	30 00                	xor    %al,(%eax)

00000510 <_GLOBAL_OFFSET_TABLE_>:
	...

0000051c <print>:
 51c:	55                   	push   %ebp
 51d:	89 e5                	mov    %esp,%ebp
 51f:	53                   	push   %ebx
 520:	e8 b8 ff ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 525:	05 eb ff ff ff       	add    $0xffffffeb,%eax
 52a:	b8 01 00 00 00       	mov    $0x1,%eax
 52f:	8b 5d 08             	mov    0x8(%ebp),%ebx
 532:	cd 80                	int    $0x80
 534:	90                   	nop
 535:	5b                   	pop    %ebx
 536:	5d                   	pop    %ebp
 537:	c3                   	ret    

00000538 <printval>:
 538:	55                   	push   %ebp
 539:	89 e5                	mov    %esp,%ebp
 53b:	53                   	push   %ebx
 53c:	e8 9c ff ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 541:	05 cf ff ff ff       	add    $0xffffffcf,%eax
 546:	b8 03 00 00 00       	mov    $0x3,%eax
 54b:	8b 5d 08             	mov    0x8(%ebp),%ebx
 54e:	8b 55 0c             	mov    0xc(%ebp),%edx
 551:	cd 80                	int    $0x80
 553:	90                   	nop
 554:	5b                   	pop    %ebx
 555:	5d                   	pop    %ebp
 556:	c3                   	ret    

00000557 <fopen>:
 557:	55                   	push   %ebp
 558:	89 e5                	mov    %esp,%ebp
 55a:	53                   	push   %ebx
 55b:	e8 7d ff ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 560:	05 b0 ff ff ff       	add    $0xffffffb0,%eax
 565:	b8 11 00 00 00       	mov    $0x11,%eax
 56a:	bb 00 00 00 00       	mov    $0x0,%ebx
 56f:	8b 4d 08             	mov    0x8(%ebp),%ecx
 572:	cd 80                	int    $0x80
 574:	5b                   	pop    %ebx
 575:	5d                   	pop    %ebp
 576:	c3                   	ret    

00000577 <fclose>:
 577:	55                   	push   %ebp
 578:	89 e5                	mov    %esp,%ebp
 57a:	53                   	push   %ebx
 57b:	e8 5d ff ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 580:	05 90 ff ff ff       	add    $0xffffff90,%eax
 585:	b8 12 00 00 00       	mov    $0x12,%eax
 58a:	8b 5d 08             	mov    0x8(%ebp),%ebx
 58d:	cd 80                	int    $0x80
 58f:	5b                   	pop    %ebx
 590:	5d                   	pop    %ebp
 591:	c3                   	ret    

00000592 <fread>:
 592:	55                   	push   %ebp
 593:	89 e5                	mov    %esp,%ebp
 595:	53                   	push   %ebx
 596:	e8 42 ff ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 59b:	05 75 ff ff ff       	add    $0xffffff75,%eax
 5a0:	b8 13 00 00 00       	mov    $0x13,%eax
 5a5:	bb 00 00 00 00       	mov    $0x0,%ebx
 5aa:	8b 55 08             	mov    0x8(%ebp),%edx
 5ad:	89 d1                	mov    %edx,%ecx
 5af:	cd 80                	int    $0x80
 5b1:	5b                   	pop    %ebx
 5b2:	5d                   	pop    %ebp
 5b3:	c3                   	ret    

000005b4 <image_load_buffer>:
 5b4:	55                   	push   %ebp
 5b5:	89 e5                	mov    %esp,%ebp
 5b7:	53                   	push   %ebx
 5b8:	e8 20 ff ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 5bd:	05 53 ff ff ff       	add    $0xffffff53,%eax
 5c2:	8b 45 08             	mov    0x8(%ebp),%eax
 5c5:	89 c3                	mov    %eax,%ebx
 5c7:	8b 45 0c             	mov    0xc(%ebp),%eax
 5ca:	89 c1                	mov    %eax,%ecx
 5cc:	8b 55 10             	mov    0x10(%ebp),%edx
 5cf:	b8 0b 00 00 00       	mov    $0xb,%eax
 5d4:	cd 80                	int    $0x80
 5d6:	90                   	nop
 5d7:	5b                   	pop    %ebx
 5d8:	5d                   	pop    %ebp
 5d9:	c3                   	ret    

000005da <draw_image>:
 5da:	55                   	push   %ebp
 5db:	89 e5                	mov    %esp,%ebp
 5dd:	53                   	push   %ebx
 5de:	e8 fa fe ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 5e3:	05 2d ff ff ff       	add    $0xffffff2d,%eax
 5e8:	b8 0c 00 00 00       	mov    $0xc,%eax
 5ed:	8b 5d 08             	mov    0x8(%ebp),%ebx
 5f0:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 5f3:	cd 80                	int    $0x80
 5f5:	90                   	nop
 5f6:	5b                   	pop    %ebx
 5f7:	5d                   	pop    %ebp
 5f8:	c3                   	ret    

000005f9 <malloc>:
 5f9:	55                   	push   %ebp
 5fa:	89 e5                	mov    %esp,%ebp
 5fc:	53                   	push   %ebx
 5fd:	e8 db fe ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 602:	05 0e ff ff ff       	add    $0xffffff0e,%eax
 607:	b8 06 00 00 00       	mov    $0x6,%eax
 60c:	8b 5d 08             	mov    0x8(%ebp),%ebx
 60f:	cd 80                	int    $0x80
 611:	5b                   	pop    %ebx
 612:	5d                   	pop    %ebp
 613:	c3                   	ret    

00000614 <free>:
 614:	55                   	push   %ebp
 615:	89 e5                	mov    %esp,%ebp
 617:	53                   	push   %ebx
 618:	e8 c0 fe ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 61d:	05 f3 fe ff ff       	add    $0xfffffef3,%eax
 622:	b8 07 00 00 00       	mov    $0x7,%eax
 627:	8b 45 08             	mov    0x8(%ebp),%eax
 62a:	89 c3                	mov    %eax,%ebx
 62c:	cd 80                	int    $0x80
 62e:	90                   	nop
 62f:	5b                   	pop    %ebx
 630:	5d                   	pop    %ebp
 631:	c3                   	ret    

00000632 <toggle_console>:
 632:	55                   	push   %ebp
 633:	89 e5                	mov    %esp,%ebp
 635:	e8 a3 fe ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 63a:	05 d6 fe ff ff       	add    $0xfffffed6,%eax
 63f:	b8 0f 00 00 00       	mov    $0xf,%eax
 644:	cd 80                	int    $0x80
 646:	90                   	nop
 647:	5d                   	pop    %ebp
 648:	c3                   	ret    

00000649 <get_ascii_key_index>:
 649:	55                   	push   %ebp
 64a:	89 e5                	mov    %esp,%ebp
 64c:	53                   	push   %ebx
 64d:	e8 8b fe ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 652:	05 be fe ff ff       	add    $0xfffffebe,%eax
 657:	b8 0a 00 00 00       	mov    $0xa,%eax
 65c:	cd 80                	int    $0x80
 65e:	89 d8                	mov    %ebx,%eax
 660:	5b                   	pop    %ebx
 661:	5d                   	pop    %ebp
 662:	c3                   	ret    

00000663 <get_ascii_key>:
 663:	55                   	push   %ebp
 664:	89 e5                	mov    %esp,%ebp
 666:	53                   	push   %ebx
 667:	e8 71 fe ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 66c:	05 a4 fe ff ff       	add    $0xfffffea4,%eax
 671:	b8 09 00 00 00       	mov    $0x9,%eax
 676:	cd 80                	int    $0x80
 678:	89 d8                	mov    %ebx,%eax
 67a:	5b                   	pop    %ebx
 67b:	5d                   	pop    %ebp
 67c:	c3                   	ret    

0000067d <clear_screen>:
 67d:	55                   	push   %ebp
 67e:	89 e5                	mov    %esp,%ebp
 680:	e8 58 fe ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 685:	05 8b fe ff ff       	add    $0xfffffe8b,%eax
 68a:	b8 10 00 00 00       	mov    $0x10,%eax
 68f:	cd 80                	int    $0x80
 691:	90                   	nop
 692:	5d                   	pop    %ebp
 693:	c3                   	ret    

00000694 <get_timer_ticks>:
 694:	55                   	push   %ebp
 695:	89 e5                	mov    %esp,%ebp
 697:	e8 41 fe ff ff       	call   4dd <__x86.get_pc_thunk.ax>
 69c:	05 74 fe ff ff       	add    $0xfffffe74,%eax
 6a1:	b8 14 00 00 00       	mov    $0x14,%eax
 6a6:	cd 80                	int    $0x80
 6a8:	5d                   	pop    %ebp
 6a9:	c3                   	ret    
