
flappy.elf:     file format elf32-i386


Disassembly of section .text:

00000000 <main>:
   0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
   4:	83 e4 f0             	and    $0xfffffff0,%esp
   7:	ff 71 fc             	pushl  -0x4(%ecx)
   a:	55                   	push   %ebp
   b:	89 e5                	mov    %esp,%ebp
   d:	56                   	push   %esi
   e:	53                   	push   %ebx
   f:	51                   	push   %ecx
  10:	83 ec 4c             	sub    $0x4c,%esp
  13:	e8 3c 08 00 00       	call   854 <__x86.get_pc_thunk.bx>
  18:	81 c3 6c 08 00 00    	add    $0x86c,%ebx
  1e:	e8 9a 09 00 00       	call   9bd <get_ascii_key_index>
  23:	c7 c2 28 ca 03 00    	mov    $0x3ca28,%edx
  29:	89 02                	mov    %eax,(%edx)
  2b:	e8 18 0a 00 00       	call   a48 <get_timer_ticks>
  30:	83 ec 08             	sub    $0x8,%esp
  33:	50                   	push   %eax
  34:	8d 83 dc fe ff ff    	lea    -0x124(%ebx),%eax
  3a:	50                   	push   %eax
  3b:	e8 6c 08 00 00       	call   8ac <printval>
  40:	83 c4 10             	add    $0x10,%esp
  43:	83 ec 0c             	sub    $0xc,%esp
  46:	8d 83 e6 fe ff ff    	lea    -0x11a(%ebx),%eax
  4c:	50                   	push   %eax
  4d:	e8 3e 08 00 00       	call   890 <print>
  52:	83 c4 10             	add    $0x10,%esp
  55:	e8 4c 09 00 00       	call   9a6 <toggle_console>
  5a:	83 ec 0c             	sub    $0xc,%esp
  5d:	6a 01                	push   $0x1
  5f:	e8 fa 09 00 00       	call   a5e <set_backbuffer>
  64:	83 c4 10             	add    $0x10,%esp
  67:	83 ec 0c             	sub    $0xc,%esp
  6a:	68 cf c5 71 00       	push   $0x71c5cf
  6f:	e8 7d 09 00 00       	call   9f1 <clear_screen>
  74:	83 c4 10             	add    $0x10,%esp
  77:	e8 0b 0a 00 00       	call   a87 <swap_buffers>
  7c:	83 ec 0c             	sub    $0xc,%esp
  7f:	8d 83 f6 fe ff ff    	lea    -0x10a(%ebx),%eax
  85:	50                   	push   %eax
  86:	e8 40 08 00 00       	call   8cb <fopen>
  8b:	83 c4 10             	add    $0x10,%esp
  8e:	89 45 bc             	mov    %eax,-0x44(%ebp)
  91:	83 ec 0c             	sub    $0xc,%esp
  94:	8d 83 0a ff ff ff    	lea    -0xf6(%ebx),%eax
  9a:	50                   	push   %eax
  9b:	e8 2b 08 00 00       	call   8cb <fopen>
  a0:	83 c4 10             	add    $0x10,%esp
  a3:	89 45 b8             	mov    %eax,-0x48(%ebp)
  a6:	83 ec 0c             	sub    $0xc,%esp
  a9:	8d 83 1e ff ff ff    	lea    -0xe2(%ebx),%eax
  af:	50                   	push   %eax
  b0:	e8 16 08 00 00       	call   8cb <fopen>
  b5:	83 c4 10             	add    $0x10,%esp
  b8:	89 45 b4             	mov    %eax,-0x4c(%ebp)
  bb:	83 ec 0c             	sub    $0xc,%esp
  be:	8d 83 32 ff ff ff    	lea    -0xce(%ebx),%eax
  c4:	50                   	push   %eax
  c5:	e8 01 08 00 00       	call   8cb <fopen>
  ca:	83 c4 10             	add    $0x10,%esp
  cd:	89 45 b0             	mov    %eax,-0x50(%ebp)
  d0:	83 ec 08             	sub    $0x8,%esp
  d3:	c7 c0 80 42 01 00    	mov    $0x14280,%eax
  d9:	50                   	push   %eax
  da:	ff 75 bc             	pushl  -0x44(%ebp)
  dd:	e8 b7 05 00 00       	call   699 <load_image>
  e2:	83 c4 10             	add    $0x10,%esp
  e5:	83 ec 08             	sub    $0x8,%esp
  e8:	c7 c0 c0 45 01 00    	mov    $0x145c0,%eax
  ee:	50                   	push   %eax
  ef:	ff 75 b8             	pushl  -0x48(%ebp)
  f2:	e8 a2 05 00 00       	call   699 <load_image>
  f7:	83 c4 10             	add    $0x10,%esp
  fa:	83 ec 08             	sub    $0x8,%esp
  fd:	c7 c0 e0 0b 00 00    	mov    $0xbe0,%eax
 103:	50                   	push   %eax
 104:	ff 75 b4             	pushl  -0x4c(%ebp)
 107:	e8 8d 05 00 00       	call   699 <load_image>
 10c:	83 c4 10             	add    $0x10,%esp
 10f:	83 ec 08             	sub    $0x8,%esp
 112:	c7 c0 e0 bb 03 00    	mov    $0x3bbe0,%eax
 118:	50                   	push   %eax
 119:	ff 75 b0             	pushl  -0x50(%ebp)
 11c:	e8 78 05 00 00       	call   699 <load_image>
 121:	83 c4 10             	add    $0x10,%esp
 124:	e8 76 04 00 00       	call   59f <render_background>
 129:	83 ec 04             	sub    $0x4,%esp
 12c:	c7 c0 e0 0b 00 00    	mov    $0xbe0,%eax
 132:	50                   	push   %eax
 133:	68 20 01 00 00       	push   $0x120
 138:	6a 45                	push   $0x45
 13a:	e8 e9 07 00 00       	call   928 <image_load_buffer>
 13f:	83 c4 10             	add    $0x10,%esp
 142:	83 ec 08             	sub    $0x8,%esp
 145:	6a 70                	push   $0x70
 147:	68 80 02 00 00       	push   $0x280
 14c:	e8 fd 07 00 00       	call   94e <draw_image>
 151:	83 c4 10             	add    $0x10,%esp
 154:	83 ec 04             	sub    $0x4,%esp
 157:	c7 c0 80 42 01 00    	mov    $0x14280,%eax
 15d:	50                   	push   %eax
 15e:	6a 0c                	push   $0xc
 160:	6a 11                	push   $0x11
 162:	e8 c1 07 00 00       	call   928 <image_load_buffer>
 167:	83 c4 10             	add    $0x10,%esp
 16a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
 171:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
 178:	c7 45 a8 32 00 00 00 	movl   $0x32,-0x58(%ebp)
 17f:	c7 45 e0 fa 00 00 00 	movl   $0xfa,-0x20(%ebp)
 186:	c7 c0 c0 0b 00 00    	mov    $0xbc0,%eax
 18c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 192:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 199:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 1a0:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 1a7:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 1ae:	c7 45 cc 64 00 00 00 	movl   $0x64,-0x34(%ebp)
 1b5:	8b 45 e0             	mov    -0x20(%ebp),%eax
 1b8:	83 ec 08             	sub    $0x8,%esp
 1bb:	50                   	push   %eax
 1bc:	ff 75 a8             	pushl  -0x58(%ebp)
 1bf:	e8 8a 07 00 00       	call   94e <draw_image>
 1c4:	83 c4 10             	add    $0x10,%esp
 1c7:	e9 fc 01 00 00       	jmp    3c8 <.L5+0x11b>
 1cc:	e8 77 08 00 00       	call   a48 <get_timer_ticks>
 1d1:	89 45 ac             	mov    %eax,-0x54(%ebp)
 1d4:	90                   	nop
 1d5:	8b 55 ac             	mov    -0x54(%ebp),%edx
 1d8:	8b 45 cc             	mov    -0x34(%ebp),%eax
 1db:	8d 34 02             	lea    (%edx,%eax,1),%esi
 1de:	e8 65 08 00 00       	call   a48 <get_timer_ticks>
 1e3:	39 c6                	cmp    %eax,%esi
 1e5:	77 ee                	ja     1d5 <main+0x1d5>
 1e7:	8b 45 d8             	mov    -0x28(%ebp),%eax
 1ea:	83 c0 14             	add    $0x14,%eax
 1ed:	39 45 ac             	cmp    %eax,-0x54(%ebp)
 1f0:	76 13                	jbe    205 <main+0x205>
 1f2:	81 7d e0 7d 02 00 00 	cmpl   $0x27d,-0x20(%ebp)
 1f9:	7f 0a                	jg     205 <main+0x205>
 1fb:	83 45 e0 04          	addl   $0x4,-0x20(%ebp)
 1ff:	8b 45 ac             	mov    -0x54(%ebp),%eax
 202:	89 45 d8             	mov    %eax,-0x28(%ebp)
 205:	e8 94 08 00 00       	call   a9e <get_key>
 20a:	0f be c0             	movsbl %al,%eax
 20d:	83 f8 77             	cmp    $0x77,%eax
 210:	0f 8f 97 00 00 00    	jg     2ad <.L5>
 216:	83 f8 5b             	cmp    $0x5b,%eax
 219:	7d 0f                	jge    22a <main+0x22a>
 21b:	83 f8 20             	cmp    $0x20,%eax
 21e:	74 76                	je     296 <.L7>
 220:	83 f8 46             	cmp    $0x46,%eax
 223:	74 24                	je     249 <.L11+0x9>
 225:	e9 83 00 00 00       	jmp    2ad <.L5>
 22a:	83 e8 5b             	sub    $0x5b,%eax
 22d:	83 f8 1c             	cmp    $0x1c,%eax
 230:	77 7b                	ja     2ad <.L5>
 232:	c1 e0 02             	shl    $0x2,%eax
 235:	8b 84 18 58 ff ff ff 	mov    -0xa8(%eax,%ebx,1),%eax
 23c:	01 d8                	add    %ebx,%eax
 23e:	ff e0                	jmp    *%eax

00000240 <.L11>:
 240:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 247:	eb 64                	jmp    2ad <.L5>
 249:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 250:	eb 3c                	jmp    28e <.L11+0x4e>
 252:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 259:	eb 29                	jmp    284 <.L11+0x44>
 25b:	8b 55 c8             	mov    -0x38(%ebp),%edx
 25e:	89 d0                	mov    %edx,%eax
 260:	01 c0                	add    %eax,%eax
 262:	01 d0                	add    %edx,%eax
 264:	c1 e0 02             	shl    $0x2,%eax
 267:	89 c1                	mov    %eax,%ecx
 269:	8b 55 c4             	mov    -0x3c(%ebp),%edx
 26c:	89 d0                	mov    %edx,%eax
 26e:	c1 e0 04             	shl    $0x4,%eax
 271:	01 d0                	add    %edx,%eax
 273:	83 ec 08             	sub    $0x8,%esp
 276:	51                   	push   %ecx
 277:	50                   	push   %eax
 278:	e8 d1 06 00 00       	call   94e <draw_image>
 27d:	83 c4 10             	add    $0x10,%esp
 280:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 284:	83 7d c4 4a          	cmpl   $0x4a,-0x3c(%ebp)
 288:	7e d1                	jle    25b <.L11+0x1b>
 28a:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)
 28e:	83 7d c8 3b          	cmpl   $0x3b,-0x38(%ebp)
 292:	7e be                	jle    252 <.L11+0x12>
 294:	eb 17                	jmp    2ad <.L5>

00000296 <.L7>:
 296:	83 6d e0 18          	subl   $0x18,-0x20(%ebp)
 29a:	eb 11                	jmp    2ad <.L5>

0000029c <.L10>:
 29c:	83 45 e0 0c          	addl   $0xc,-0x20(%ebp)
 2a0:	eb 0b                	jmp    2ad <.L5>

000002a2 <.L13>:
 2a2:	83 6d cc 05          	subl   $0x5,-0x34(%ebp)
 2a6:	eb 05                	jmp    2ad <.L5>

000002a8 <.L12>:
 2a8:	83 45 cc 05          	addl   $0x5,-0x34(%ebp)
 2ac:	90                   	nop

000002ad <.L5>:
 2ad:	8b 45 d0             	mov    -0x30(%ebp),%eax
 2b0:	83 c0 07             	add    $0x7,%eax
 2b3:	39 45 ac             	cmp    %eax,-0x54(%ebp)
 2b6:	76 36                	jbe    2ee <.L5+0x41>
 2b8:	8b 45 ac             	mov    -0x54(%ebp),%eax
 2bb:	89 45 d0             	mov    %eax,-0x30(%ebp)
 2be:	c7 c0 c0 0b 00 00    	mov    $0xbc0,%eax
 2c4:	8b 00                	mov    (%eax),%eax
 2c6:	3d bf 00 00 00       	cmp    $0xbf,%eax
 2cb:	76 0e                	jbe    2db <.L5+0x2e>
 2cd:	c7 c0 c0 0b 00 00    	mov    $0xbc0,%eax
 2d3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
 2d9:	eb 13                	jmp    2ee <.L5+0x41>
 2db:	c7 c0 c0 0b 00 00    	mov    $0xbc0,%eax
 2e1:	8b 00                	mov    (%eax),%eax
 2e3:	8d 50 01             	lea    0x1(%eax),%edx
 2e6:	c7 c0 c0 0b 00 00    	mov    $0xbc0,%eax
 2ec:	89 10                	mov    %edx,(%eax)
 2ee:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 2f1:	83 c0 0a             	add    $0xa,%eax
 2f4:	39 45 ac             	cmp    %eax,-0x54(%ebp)
 2f7:	76 7c                	jbe    375 <.L5+0xc8>
 2f9:	8b 45 ac             	mov    -0x54(%ebp),%eax
 2fc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 2ff:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
 306:	eb 67                	jmp    36f <.L5+0xc2>
 308:	8b 45 c0             	mov    -0x40(%ebp),%eax
 30b:	8b 84 c3 bc fe ff ff 	mov    -0x144(%ebx,%eax,8),%eax
 312:	8d 50 fb             	lea    -0x5(%eax),%edx
 315:	8b 45 c0             	mov    -0x40(%ebp),%eax
 318:	89 94 c3 bc fe ff ff 	mov    %edx,-0x144(%ebx,%eax,8)
 31f:	8b 45 c0             	mov    -0x40(%ebp),%eax
 322:	8b 84 c3 bc fe ff ff 	mov    -0x144(%ebx,%eax,8),%eax
 329:	85 c0                	test   %eax,%eax
 32b:	7f 3e                	jg     36b <.L5+0xbe>
 32d:	8b 45 c0             	mov    -0x40(%ebp),%eax
 330:	c7 84 c3 bc fe ff ff 	movl   $0x500,-0x144(%ebx,%eax,8)
 337:	00 05 00 00 
 33b:	e8 08 07 00 00       	call   a48 <get_timer_ticks>
 340:	89 c1                	mov    %eax,%ecx
 342:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
 347:	89 c8                	mov    %ecx,%eax
 349:	f7 e2                	mul    %edx
 34b:	89 d0                	mov    %edx,%eax
 34d:	c1 e8 06             	shr    $0x6,%eax
 350:	69 c0 c8 00 00 00    	imul   $0xc8,%eax,%eax
 356:	29 c1                	sub    %eax,%ecx
 358:	89 c8                	mov    %ecx,%eax
 35a:	05 c8 00 00 00       	add    $0xc8,%eax
 35f:	89 c2                	mov    %eax,%edx
 361:	8b 45 c0             	mov    -0x40(%ebp),%eax
 364:	89 94 c3 c0 fe ff ff 	mov    %edx,-0x140(%ebx,%eax,8)
 36b:	83 45 c0 01          	addl   $0x1,-0x40(%ebp)
 36f:	83 7d c0 03          	cmpl   $0x3,-0x40(%ebp)
 373:	7e 93                	jle    308 <.L5+0x5b>
 375:	8b 45 dc             	mov    -0x24(%ebp),%eax
 378:	83 c0 14             	add    $0x14,%eax
 37b:	39 45 ac             	cmp    %eax,-0x54(%ebp)
 37e:	76 48                	jbe    3c8 <.L5+0x11b>
 380:	8b 45 ac             	mov    -0x54(%ebp),%eax
 383:	89 45 dc             	mov    %eax,-0x24(%ebp)
 386:	83 ec 0c             	sub    $0xc,%esp
 389:	68 cf c5 71 00       	push   $0x71c5cf
 38e:	e8 5e 06 00 00       	call   9f1 <clear_screen>
 393:	83 c4 10             	add    $0x10,%esp
 396:	e8 04 02 00 00       	call   59f <render_background>
 39b:	83 ec 04             	sub    $0x4,%esp
 39e:	c7 c0 80 42 01 00    	mov    $0x14280,%eax
 3a4:	50                   	push   %eax
 3a5:	6a 0c                	push   $0xc
 3a7:	6a 11                	push   $0x11
 3a9:	e8 7a 05 00 00       	call   928 <image_load_buffer>
 3ae:	83 c4 10             	add    $0x10,%esp
 3b1:	8b 45 e0             	mov    -0x20(%ebp),%eax
 3b4:	83 ec 08             	sub    $0x8,%esp
 3b7:	50                   	push   %eax
 3b8:	ff 75 a8             	pushl  -0x58(%ebp)
 3bb:	e8 8e 05 00 00       	call   94e <draw_image>
 3c0:	83 c4 10             	add    $0x10,%esp
 3c3:	e8 bf 06 00 00       	call   a87 <swap_buffers>
 3c8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 3cc:	0f 85 fa fd ff ff    	jne    1cc <main+0x1cc>
 3d2:	83 ec 0c             	sub    $0xc,%esp
 3d5:	c7 c0 80 42 01 00    	mov    $0x14280,%eax
 3db:	50                   	push   %eax
 3dc:	e8 a7 05 00 00       	call   988 <free>
 3e1:	83 c4 10             	add    $0x10,%esp
 3e4:	83 ec 0c             	sub    $0xc,%esp
 3e7:	c7 c0 c0 45 01 00    	mov    $0x145c0,%eax
 3ed:	50                   	push   %eax
 3ee:	e8 95 05 00 00       	call   988 <free>
 3f3:	83 c4 10             	add    $0x10,%esp
 3f6:	83 ec 0c             	sub    $0xc,%esp
 3f9:	c7 c0 e0 0b 00 00    	mov    $0xbe0,%eax
 3ff:	50                   	push   %eax
 400:	e8 83 05 00 00       	call   988 <free>
 405:	83 c4 10             	add    $0x10,%esp
 408:	83 ec 0c             	sub    $0xc,%esp
 40b:	ff 75 b4             	pushl  -0x4c(%ebp)
 40e:	e8 d8 04 00 00       	call   8eb <fclose>
 413:	83 c4 10             	add    $0x10,%esp
 416:	83 ec 0c             	sub    $0xc,%esp
 419:	ff 75 b8             	pushl  -0x48(%ebp)
 41c:	e8 ca 04 00 00       	call   8eb <fclose>
 421:	83 c4 10             	add    $0x10,%esp
 424:	83 ec 0c             	sub    $0xc,%esp
 427:	ff 75 bc             	pushl  -0x44(%ebp)
 42a:	e8 bc 04 00 00       	call   8eb <fclose>
 42f:	83 c4 10             	add    $0x10,%esp
 432:	83 ec 0c             	sub    $0xc,%esp
 435:	6a 00                	push   $0x0
 437:	e8 22 06 00 00       	call   a5e <set_backbuffer>
 43c:	83 c4 10             	add    $0x10,%esp
 43f:	83 ec 0c             	sub    $0xc,%esp
 442:	6a 00                	push   $0x0
 444:	e8 a8 05 00 00       	call   9f1 <clear_screen>
 449:	83 c4 10             	add    $0x10,%esp
 44c:	e8 55 05 00 00       	call   9a6 <toggle_console>
 451:	83 ec 0c             	sub    $0xc,%esp
 454:	8d 83 49 ff ff ff    	lea    -0xb7(%ebx),%eax
 45a:	50                   	push   %eax
 45b:	e8 30 04 00 00       	call   890 <print>
 460:	83 c4 10             	add    $0x10,%esp
 463:	e8 e0 05 00 00       	call   a48 <get_timer_ticks>
 468:	83 ec 08             	sub    $0x8,%esp
 46b:	50                   	push   %eax
 46c:	8d 83 dc fe ff ff    	lea    -0x124(%ebx),%eax
 472:	50                   	push   %eax
 473:	e8 34 04 00 00       	call   8ac <printval>
 478:	83 c4 10             	add    $0x10,%esp
 47b:	b8 00 00 00 00       	mov    $0x0,%eax
 480:	8d 65 f4             	lea    -0xc(%ebp),%esp
 483:	59                   	pop    %ecx
 484:	5b                   	pop    %ebx
 485:	5e                   	pop    %esi
 486:	5d                   	pop    %ebp
 487:	8d 61 fc             	lea    -0x4(%ecx),%esp
 48a:	c3                   	ret    

0000048b <draw_pipe>:
 48b:	55                   	push   %ebp
 48c:	89 e5                	mov    %esp,%ebp
 48e:	53                   	push   %ebx
 48f:	83 ec 14             	sub    $0x14,%esp
 492:	e8 bd 03 00 00       	call   854 <__x86.get_pc_thunk.bx>
 497:	81 c3 ed 03 00 00    	add    $0x3ed,%ebx
 49d:	83 ec 04             	sub    $0x4,%esp
 4a0:	c7 c0 e0 0b 00 00    	mov    $0xbe0,%eax
 4a6:	50                   	push   %eax
 4a7:	68 20 01 00 00       	push   $0x120
 4ac:	6a 45                	push   $0x45
 4ae:	e8 75 04 00 00       	call   928 <image_load_buffer>
 4b3:	83 c4 10             	add    $0x10,%esp
 4b6:	8b 45 0c             	mov    0xc(%ebp),%eax
 4b9:	2d 90 00 00 00       	sub    $0x90,%eax
 4be:	89 c2                	mov    %eax,%edx
 4c0:	8b 45 08             	mov    0x8(%ebp),%eax
 4c3:	83 e8 22             	sub    $0x22,%eax
 4c6:	83 ec 08             	sub    $0x8,%esp
 4c9:	52                   	push   %edx
 4ca:	50                   	push   %eax
 4cb:	e8 7e 04 00 00       	call   94e <draw_image>
 4d0:	83 c4 10             	add    $0x10,%esp
 4d3:	83 ec 04             	sub    $0x4,%esp
 4d6:	c7 c0 e0 bb 03 00    	mov    $0x3bbe0,%eax
 4dc:	50                   	push   %eax
 4dd:	6a 10                	push   $0x10
 4df:	6a 39                	push   $0x39
 4e1:	e8 42 04 00 00       	call   928 <image_load_buffer>
 4e6:	83 c4 10             	add    $0x10,%esp
 4e9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 4f0:	eb 1a                	jmp    50c <draw_pipe+0x81>
 4f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
 4f5:	8b 55 08             	mov    0x8(%ebp),%edx
 4f8:	83 ea 1c             	sub    $0x1c,%edx
 4fb:	83 ec 08             	sub    $0x8,%esp
 4fe:	50                   	push   %eax
 4ff:	52                   	push   %edx
 500:	e8 49 04 00 00       	call   94e <draw_image>
 505:	83 c4 10             	add    $0x10,%esp
 508:	83 45 f4 10          	addl   $0x10,-0xc(%ebp)
 50c:	8b 45 0c             	mov    0xc(%ebp),%eax
 50f:	2d 90 00 00 00       	sub    $0x90,%eax
 514:	39 45 f4             	cmp    %eax,-0xc(%ebp)
 517:	7c d9                	jl     4f2 <draw_pipe+0x67>
 519:	c7 45 f0 d0 02 00 00 	movl   $0x2d0,-0x10(%ebp)
 520:	eb 1a                	jmp    53c <draw_pipe+0xb1>
 522:	8b 45 f0             	mov    -0x10(%ebp),%eax
 525:	8b 55 08             	mov    0x8(%ebp),%edx
 528:	83 ea 1c             	sub    $0x1c,%edx
 52b:	83 ec 08             	sub    $0x8,%esp
 52e:	50                   	push   %eax
 52f:	52                   	push   %edx
 530:	e8 19 04 00 00       	call   94e <draw_image>
 535:	83 c4 10             	add    $0x10,%esp
 538:	83 6d f0 10          	subl   $0x10,-0x10(%ebp)
 53c:	8b 45 0c             	mov    0xc(%ebp),%eax
 53f:	83 e8 80             	sub    $0xffffff80,%eax
 542:	39 45 f0             	cmp    %eax,-0x10(%ebp)
 545:	7f db                	jg     522 <draw_pipe+0x97>
 547:	90                   	nop
 548:	90                   	nop
 549:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 54c:	c9                   	leave  
 54d:	c3                   	ret    

0000054e <clear_bird>:
 54e:	55                   	push   %ebp
 54f:	89 e5                	mov    %esp,%ebp
 551:	53                   	push   %ebx
 552:	83 ec 04             	sub    $0x4,%esp
 555:	e8 fa 02 00 00       	call   854 <__x86.get_pc_thunk.bx>
 55a:	81 c3 2a 03 00 00    	add    $0x32a,%ebx
 560:	83 ec 04             	sub    $0x4,%esp
 563:	6a 00                	push   $0x0
 565:	68 fe 01 00 00       	push   $0x1fe
 56a:	6a 32                	push   $0x32
 56c:	e8 b7 03 00 00       	call   928 <image_load_buffer>
 571:	83 c4 10             	add    $0x10,%esp
 574:	83 ec 08             	sub    $0x8,%esp
 577:	6a 00                	push   $0x0
 579:	6a 19                	push   $0x19
 57b:	e8 c1 00 00 00       	call   641 <clear_img>
 580:	83 c4 10             	add    $0x10,%esp
 583:	83 ec 04             	sub    $0x4,%esp
 586:	c7 c0 80 42 01 00    	mov    $0x14280,%eax
 58c:	50                   	push   %eax
 58d:	6a 0c                	push   $0xc
 58f:	6a 11                	push   $0x11
 591:	e8 92 03 00 00       	call   928 <image_load_buffer>
 596:	83 c4 10             	add    $0x10,%esp
 599:	90                   	nop
 59a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 59d:	c9                   	leave  
 59e:	c3                   	ret    

0000059f <render_background>:
 59f:	55                   	push   %ebp
 5a0:	89 e5                	mov    %esp,%ebp
 5a2:	53                   	push   %ebx
 5a3:	83 ec 14             	sub    $0x14,%esp
 5a6:	e8 a9 02 00 00       	call   854 <__x86.get_pc_thunk.bx>
 5ab:	81 c3 d9 02 00 00    	add    $0x2d9,%ebx
 5b1:	83 ec 04             	sub    $0x4,%esp
 5b4:	c7 c0 c0 45 01 00    	mov    $0x145c0,%eax
 5ba:	50                   	push   %eax
 5bb:	68 d2 00 00 00       	push   $0xd2
 5c0:	68 c0 00 00 00       	push   $0xc0
 5c5:	e8 5e 03 00 00       	call   928 <image_load_buffer>
 5ca:	83 c4 10             	add    $0x10,%esp
 5cd:	c7 45 f4 40 ff ff ff 	movl   $0xffffff40,-0xc(%ebp)
 5d4:	eb 27                	jmp    5fd <render_background+0x5e>
 5d6:	8b 55 f4             	mov    -0xc(%ebp),%edx
 5d9:	c7 c0 c0 0b 00 00    	mov    $0xbc0,%eax
 5df:	8b 00                	mov    (%eax),%eax
 5e1:	29 c2                	sub    %eax,%edx
 5e3:	89 d0                	mov    %edx,%eax
 5e5:	83 ec 08             	sub    $0x8,%esp
 5e8:	68 fe 01 00 00       	push   $0x1fe
 5ed:	50                   	push   %eax
 5ee:	e8 5b 03 00 00       	call   94e <draw_image>
 5f3:	83 c4 10             	add    $0x10,%esp
 5f6:	81 45 f4 c0 00 00 00 	addl   $0xc0,-0xc(%ebp)
 5fd:	81 7d f4 bf 05 00 00 	cmpl   $0x5bf,-0xc(%ebp)
 604:	7e d0                	jle    5d6 <render_background+0x37>
 606:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 60d:	eb 25                	jmp    634 <render_background+0x95>
 60f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 612:	8b 94 c3 c0 fe ff ff 	mov    -0x140(%ebx,%eax,8),%edx
 619:	8b 45 f0             	mov    -0x10(%ebp),%eax
 61c:	8b 84 c3 bc fe ff ff 	mov    -0x144(%ebx,%eax,8),%eax
 623:	83 ec 08             	sub    $0x8,%esp
 626:	52                   	push   %edx
 627:	50                   	push   %eax
 628:	e8 5e fe ff ff       	call   48b <draw_pipe>
 62d:	83 c4 10             	add    $0x10,%esp
 630:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 634:	83 7d f0 03          	cmpl   $0x3,-0x10(%ebp)
 638:	7e d5                	jle    60f <render_background+0x70>
 63a:	90                   	nop
 63b:	90                   	nop
 63c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 63f:	c9                   	leave  
 640:	c3                   	ret    

00000641 <clear_img>:
 641:	55                   	push   %ebp
 642:	89 e5                	mov    %esp,%ebp
 644:	53                   	push   %ebx
 645:	e8 06 02 00 00       	call   850 <__x86.get_pc_thunk.ax>
 64a:	05 3a 02 00 00       	add    $0x23a,%eax
 64f:	ba cf c5 71 00       	mov    $0x71c5cf,%edx
 654:	8b 5d 08             	mov    0x8(%ebp),%ebx
 657:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 65a:	b8 0e 00 00 00       	mov    $0xe,%eax
 65f:	cd 80                	int    $0x80
 661:	90                   	nop
 662:	5b                   	pop    %ebx
 663:	5d                   	pop    %ebp
 664:	c3                   	ret    

00000665 <delay>:
 665:	55                   	push   %ebp
 666:	89 e5                	mov    %esp,%ebp
 668:	53                   	push   %ebx
 669:	83 ec 14             	sub    $0x14,%esp
 66c:	e8 e3 01 00 00       	call   854 <__x86.get_pc_thunk.bx>
 671:	81 c3 13 02 00 00    	add    $0x213,%ebx
 677:	e8 cc 03 00 00       	call   a48 <get_timer_ticks>
 67c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 67f:	90                   	nop
 680:	e8 c3 03 00 00       	call   a48 <get_timer_ticks>
 685:	8b 4d 08             	mov    0x8(%ebp),%ecx
 688:	8b 55 f4             	mov    -0xc(%ebp),%edx
 68b:	01 ca                	add    %ecx,%edx
 68d:	39 d0                	cmp    %edx,%eax
 68f:	72 ef                	jb     680 <delay+0x1b>
 691:	90                   	nop
 692:	90                   	nop
 693:	83 c4 14             	add    $0x14,%esp
 696:	5b                   	pop    %ebx
 697:	5d                   	pop    %ebp
 698:	c3                   	ret    

00000699 <load_image>:
 699:	55                   	push   %ebp
 69a:	89 e5                	mov    %esp,%ebp
 69c:	53                   	push   %ebx
 69d:	83 ec 14             	sub    $0x14,%esp
 6a0:	e8 af 01 00 00       	call   854 <__x86.get_pc_thunk.bx>
 6a5:	81 c3 df 01 00 00    	add    $0x1df,%ebx
 6ab:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 6b2:	eb 6d                	jmp    721 <load_image+0x88>
 6b4:	8b 45 08             	mov    0x8(%ebp),%eax
 6b7:	8b 50 04             	mov    0x4(%eax),%edx
 6ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
 6bd:	01 d0                	add    %edx,%eax
 6bf:	83 ec 0c             	sub    $0xc,%esp
 6c2:	50                   	push   %eax
 6c3:	e8 3e 02 00 00       	call   906 <fread>
 6c8:	83 c4 10             	add    $0x10,%esp
 6cb:	89 45 ec             	mov    %eax,-0x14(%ebp)
 6ce:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 6d5:	eb 3a                	jmp    711 <load_image+0x78>
 6d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
 6da:	c1 e0 0b             	shl    $0xb,%eax
 6dd:	89 c2                	mov    %eax,%edx
 6df:	8b 45 f0             	mov    -0x10(%ebp),%eax
 6e2:	01 c2                	add    %eax,%edx
 6e4:	8b 45 08             	mov    0x8(%ebp),%eax
 6e7:	8b 40 0c             	mov    0xc(%eax),%eax
 6ea:	39 c2                	cmp    %eax,%edx
 6ec:	73 2e                	jae    71c <load_image+0x83>
 6ee:	8b 55 ec             	mov    -0x14(%ebp),%edx
 6f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
 6f4:	01 d0                	add    %edx,%eax
 6f6:	8b 55 f4             	mov    -0xc(%ebp),%edx
 6f9:	89 d1                	mov    %edx,%ecx
 6fb:	c1 e1 0b             	shl    $0xb,%ecx
 6fe:	8b 55 f0             	mov    -0x10(%ebp),%edx
 701:	01 d1                	add    %edx,%ecx
 703:	8b 55 0c             	mov    0xc(%ebp),%edx
 706:	01 ca                	add    %ecx,%edx
 708:	0f b6 00             	movzbl (%eax),%eax
 70b:	88 02                	mov    %al,(%edx)
 70d:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 711:	81 7d f0 ff 07 00 00 	cmpl   $0x7ff,-0x10(%ebp)
 718:	76 bd                	jbe    6d7 <load_image+0x3e>
 71a:	eb 01                	jmp    71d <load_image+0x84>
 71c:	90                   	nop
 71d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 721:	8b 45 08             	mov    0x8(%ebp),%eax
 724:	8b 40 08             	mov    0x8(%eax),%eax
 727:	39 45 f4             	cmp    %eax,-0xc(%ebp)
 72a:	72 88                	jb     6b4 <load_image+0x1b>
 72c:	90                   	nop
 72d:	90                   	nop
 72e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 731:	c9                   	leave  
 732:	c3                   	ret    
 733:	66 90                	xchg   %ax,%ax
 735:	66 90                	xchg   %ax,%ax
 737:	66 90                	xchg   %ax,%ax
 739:	66 90                	xchg   %ax,%ax
 73b:	66 90                	xchg   %ax,%ax
 73d:	66 90                	xchg   %ax,%ax
 73f:	90                   	nop

00000740 <pipes>:
 740:	dc 00 00 00 90 01 00 00 1c 02 00 00 90 01 00 00     ................
 750:	5c 03 00 00 90 01 00 00 9c 04 00 00 90 01 00 00     \...............
 760:	54 69 63 6b 73 20 25 78 0a 00 50 72 6f 67 72 61     Ticks %x..Progra
 770:	6d 20 53 74 61 72 74 21 0a 00 2e 2f 46 4c 41 50     m Start!.../FLAP
 780:	50 59 42 49 2f 42 49 52 44 2e 42 49 4e 00 2e 2f     PYBI/BIRD.BIN../
 790:	46 4c 41 50 50 59 42 49 2f 42 41 43 4b 2e 42 49     FLAPPYBI/BACK.BI
 7a0:	4e 00 2e 2f 46 4c 41 50 50 59 42 49 2f 50 49 50     N../FLAPPYBI/PIP
 7b0:	45 2e 42 49 4e 00 2e 2f 46 4c 41 50 50 59 42 49     E.BIN../FLAPPYBI
 7c0:	2f 50 49 50 45 53 45 47 2e 42 49 4e 00 50 72 6f     /PIPESEG.BIN.Pro
 7d0:	67 72 61 6d 20 44 6f 6e 65 21 0a 00 1e fa ff ff     gram Done!......
 7e0:	29 fa ff ff 24 fa ff ff 29 fa ff ff 29 fa ff ff     )...$...)...)...
 7f0:	29 fa ff ff 29 fa ff ff 29 fa ff ff 29 fa ff ff     )...)...)...)...
 800:	29 fa ff ff 29 fa ff ff 29 fa ff ff 29 fa ff ff     )...)...)...)...
 810:	29 fa ff ff 29 fa ff ff 29 fa ff ff 29 fa ff ff     )...)...)...)...
 820:	29 fa ff ff 29 fa ff ff 29 fa ff ff 29 fa ff ff     )...)...)...)...
 830:	29 fa ff ff bc f9 ff ff 29 fa ff ff 18 fa ff ff     ).......).......
 840:	29 fa ff ff 29 fa ff ff 29 fa ff ff 12 fa ff ff     )...)...).......

00000850 <__x86.get_pc_thunk.ax>:
 850:	8b 04 24             	mov    (%esp),%eax
 853:	c3                   	ret    

00000854 <__x86.get_pc_thunk.bx>:
 854:	8b 1c 24             	mov    (%esp),%ebx
 857:	c3                   	ret    
 858:	47                   	inc    %edi
 859:	43                   	inc    %ebx
 85a:	43                   	inc    %ebx
 85b:	3a 20                	cmp    (%eax),%ah
 85d:	28 55 62             	sub    %dl,0x62(%ebp)
 860:	75 6e                	jne    8d0 <fopen+0x5>
 862:	74 75                	je     8d9 <fopen+0xe>
 864:	20 39                	and    %bh,(%ecx)
 866:	2e 34 2e             	cs xor $0x2e,%al
 869:	30 2d 31 75 62 75    	xor    %ch,0x75627531
 86f:	6e                   	outsb  %ds:(%esi),(%dx)
 870:	74 75                	je     8e7 <fopen+0x1c>
 872:	31 7e 32             	xor    %edi,0x32(%esi)
 875:	30 2e                	xor    %ch,(%esi)
 877:	30 34 2e             	xor    %dh,(%esi,%ebp,1)
 87a:	31 29                	xor    %ebp,(%ecx)
 87c:	20 39                	and    %bh,(%ecx)
 87e:	2e 34 2e             	cs xor $0x2e,%al
 881:	30 00                	xor    %al,(%eax)
 883:	90                   	nop

00000884 <_GLOBAL_OFFSET_TABLE_>:
	...

00000890 <print>:
 890:	55                   	push   %ebp
 891:	89 e5                	mov    %esp,%ebp
 893:	53                   	push   %ebx
 894:	e8 b7 ff ff ff       	call   850 <__x86.get_pc_thunk.ax>
 899:	05 eb ff ff ff       	add    $0xffffffeb,%eax
 89e:	b8 01 00 00 00       	mov    $0x1,%eax
 8a3:	8b 5d 08             	mov    0x8(%ebp),%ebx
 8a6:	cd 80                	int    $0x80
 8a8:	90                   	nop
 8a9:	5b                   	pop    %ebx
 8aa:	5d                   	pop    %ebp
 8ab:	c3                   	ret    

000008ac <printval>:
 8ac:	55                   	push   %ebp
 8ad:	89 e5                	mov    %esp,%ebp
 8af:	53                   	push   %ebx
 8b0:	e8 9b ff ff ff       	call   850 <__x86.get_pc_thunk.ax>
 8b5:	05 cf ff ff ff       	add    $0xffffffcf,%eax
 8ba:	b8 03 00 00 00       	mov    $0x3,%eax
 8bf:	8b 5d 08             	mov    0x8(%ebp),%ebx
 8c2:	8b 55 0c             	mov    0xc(%ebp),%edx
 8c5:	cd 80                	int    $0x80
 8c7:	90                   	nop
 8c8:	5b                   	pop    %ebx
 8c9:	5d                   	pop    %ebp
 8ca:	c3                   	ret    

000008cb <fopen>:
 8cb:	55                   	push   %ebp
 8cc:	89 e5                	mov    %esp,%ebp
 8ce:	53                   	push   %ebx
 8cf:	e8 7c ff ff ff       	call   850 <__x86.get_pc_thunk.ax>
 8d4:	05 b0 ff ff ff       	add    $0xffffffb0,%eax
 8d9:	b8 11 00 00 00       	mov    $0x11,%eax
 8de:	bb 00 00 00 00       	mov    $0x0,%ebx
 8e3:	8b 4d 08             	mov    0x8(%ebp),%ecx
 8e6:	cd 80                	int    $0x80
 8e8:	5b                   	pop    %ebx
 8e9:	5d                   	pop    %ebp
 8ea:	c3                   	ret    

000008eb <fclose>:
 8eb:	55                   	push   %ebp
 8ec:	89 e5                	mov    %esp,%ebp
 8ee:	53                   	push   %ebx
 8ef:	e8 5c ff ff ff       	call   850 <__x86.get_pc_thunk.ax>
 8f4:	05 90 ff ff ff       	add    $0xffffff90,%eax
 8f9:	b8 12 00 00 00       	mov    $0x12,%eax
 8fe:	8b 5d 08             	mov    0x8(%ebp),%ebx
 901:	cd 80                	int    $0x80
 903:	5b                   	pop    %ebx
 904:	5d                   	pop    %ebp
 905:	c3                   	ret    

00000906 <fread>:
 906:	55                   	push   %ebp
 907:	89 e5                	mov    %esp,%ebp
 909:	53                   	push   %ebx
 90a:	e8 41 ff ff ff       	call   850 <__x86.get_pc_thunk.ax>
 90f:	05 75 ff ff ff       	add    $0xffffff75,%eax
 914:	b8 13 00 00 00       	mov    $0x13,%eax
 919:	bb 00 00 00 00       	mov    $0x0,%ebx
 91e:	8b 55 08             	mov    0x8(%ebp),%edx
 921:	89 d1                	mov    %edx,%ecx
 923:	cd 80                	int    $0x80
 925:	5b                   	pop    %ebx
 926:	5d                   	pop    %ebp
 927:	c3                   	ret    

00000928 <image_load_buffer>:
 928:	55                   	push   %ebp
 929:	89 e5                	mov    %esp,%ebp
 92b:	53                   	push   %ebx
 92c:	e8 1f ff ff ff       	call   850 <__x86.get_pc_thunk.ax>
 931:	05 53 ff ff ff       	add    $0xffffff53,%eax
 936:	8b 45 08             	mov    0x8(%ebp),%eax
 939:	89 c3                	mov    %eax,%ebx
 93b:	8b 45 0c             	mov    0xc(%ebp),%eax
 93e:	89 c1                	mov    %eax,%ecx
 940:	8b 55 10             	mov    0x10(%ebp),%edx
 943:	b8 0b 00 00 00       	mov    $0xb,%eax
 948:	cd 80                	int    $0x80
 94a:	90                   	nop
 94b:	5b                   	pop    %ebx
 94c:	5d                   	pop    %ebp
 94d:	c3                   	ret    

0000094e <draw_image>:
 94e:	55                   	push   %ebp
 94f:	89 e5                	mov    %esp,%ebp
 951:	53                   	push   %ebx
 952:	e8 f9 fe ff ff       	call   850 <__x86.get_pc_thunk.ax>
 957:	05 2d ff ff ff       	add    $0xffffff2d,%eax
 95c:	b8 0c 00 00 00       	mov    $0xc,%eax
 961:	8b 5d 08             	mov    0x8(%ebp),%ebx
 964:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 967:	cd 80                	int    $0x80
 969:	90                   	nop
 96a:	5b                   	pop    %ebx
 96b:	5d                   	pop    %ebp
 96c:	c3                   	ret    

0000096d <malloc>:
 96d:	55                   	push   %ebp
 96e:	89 e5                	mov    %esp,%ebp
 970:	53                   	push   %ebx
 971:	e8 da fe ff ff       	call   850 <__x86.get_pc_thunk.ax>
 976:	05 0e ff ff ff       	add    $0xffffff0e,%eax
 97b:	b8 06 00 00 00       	mov    $0x6,%eax
 980:	8b 5d 08             	mov    0x8(%ebp),%ebx
 983:	cd 80                	int    $0x80
 985:	5b                   	pop    %ebx
 986:	5d                   	pop    %ebp
 987:	c3                   	ret    

00000988 <free>:
 988:	55                   	push   %ebp
 989:	89 e5                	mov    %esp,%ebp
 98b:	53                   	push   %ebx
 98c:	e8 bf fe ff ff       	call   850 <__x86.get_pc_thunk.ax>
 991:	05 f3 fe ff ff       	add    $0xfffffef3,%eax
 996:	b8 07 00 00 00       	mov    $0x7,%eax
 99b:	8b 45 08             	mov    0x8(%ebp),%eax
 99e:	89 c3                	mov    %eax,%ebx
 9a0:	cd 80                	int    $0x80
 9a2:	90                   	nop
 9a3:	5b                   	pop    %ebx
 9a4:	5d                   	pop    %ebp
 9a5:	c3                   	ret    

000009a6 <toggle_console>:
 9a6:	55                   	push   %ebp
 9a7:	89 e5                	mov    %esp,%ebp
 9a9:	e8 a2 fe ff ff       	call   850 <__x86.get_pc_thunk.ax>
 9ae:	05 d6 fe ff ff       	add    $0xfffffed6,%eax
 9b3:	b8 0f 00 00 00       	mov    $0xf,%eax
 9b8:	cd 80                	int    $0x80
 9ba:	90                   	nop
 9bb:	5d                   	pop    %ebp
 9bc:	c3                   	ret    

000009bd <get_ascii_key_index>:
 9bd:	55                   	push   %ebp
 9be:	89 e5                	mov    %esp,%ebp
 9c0:	53                   	push   %ebx
 9c1:	e8 8a fe ff ff       	call   850 <__x86.get_pc_thunk.ax>
 9c6:	05 be fe ff ff       	add    $0xfffffebe,%eax
 9cb:	b8 0a 00 00 00       	mov    $0xa,%eax
 9d0:	cd 80                	int    $0x80
 9d2:	89 d8                	mov    %ebx,%eax
 9d4:	5b                   	pop    %ebx
 9d5:	5d                   	pop    %ebp
 9d6:	c3                   	ret    

000009d7 <get_ascii_key>:
 9d7:	55                   	push   %ebp
 9d8:	89 e5                	mov    %esp,%ebp
 9da:	53                   	push   %ebx
 9db:	e8 70 fe ff ff       	call   850 <__x86.get_pc_thunk.ax>
 9e0:	05 a4 fe ff ff       	add    $0xfffffea4,%eax
 9e5:	b8 09 00 00 00       	mov    $0x9,%eax
 9ea:	cd 80                	int    $0x80
 9ec:	89 d8                	mov    %ebx,%eax
 9ee:	5b                   	pop    %ebx
 9ef:	5d                   	pop    %ebp
 9f0:	c3                   	ret    

000009f1 <clear_screen>:
 9f1:	55                   	push   %ebp
 9f2:	89 e5                	mov    %esp,%ebp
 9f4:	53                   	push   %ebx
 9f5:	e8 56 fe ff ff       	call   850 <__x86.get_pc_thunk.ax>
 9fa:	05 8a fe ff ff       	add    $0xfffffe8a,%eax
 9ff:	8b 5d 08             	mov    0x8(%ebp),%ebx
 a02:	b8 10 00 00 00       	mov    $0x10,%eax
 a07:	cd 80                	int    $0x80
 a09:	90                   	nop
 a0a:	5b                   	pop    %ebx
 a0b:	5d                   	pop    %ebp
 a0c:	c3                   	ret    

00000a0d <get_display>:
 a0d:	55                   	push   %ebp
 a0e:	89 e5                	mov    %esp,%ebp
 a10:	53                   	push   %ebx
 a11:	83 ec 10             	sub    $0x10,%esp
 a14:	e8 37 fe ff ff       	call   850 <__x86.get_pc_thunk.ax>
 a19:	05 6b fe ff ff       	add    $0xfffffe6b,%eax
 a1e:	b8 08 00 00 00       	mov    $0x8,%eax
 a23:	cd 80                	int    $0x80
 a25:	89 d8                	mov    %ebx,%eax
 a27:	89 45 f4             	mov    %eax,-0xc(%ebp)
 a2a:	89 c8                	mov    %ecx,%eax
 a2c:	89 45 f8             	mov    %eax,-0x8(%ebp)
 a2f:	8b 4d 08             	mov    0x8(%ebp),%ecx
 a32:	8b 45 f4             	mov    -0xc(%ebp),%eax
 a35:	8b 55 f8             	mov    -0x8(%ebp),%edx
 a38:	89 01                	mov    %eax,(%ecx)
 a3a:	89 51 04             	mov    %edx,0x4(%ecx)
 a3d:	8b 45 08             	mov    0x8(%ebp),%eax
 a40:	83 c4 10             	add    $0x10,%esp
 a43:	5b                   	pop    %ebx
 a44:	5d                   	pop    %ebp
 a45:	c2 04 00             	ret    $0x4

00000a48 <get_timer_ticks>:
 a48:	55                   	push   %ebp
 a49:	89 e5                	mov    %esp,%ebp
 a4b:	e8 00 fe ff ff       	call   850 <__x86.get_pc_thunk.ax>
 a50:	05 34 fe ff ff       	add    $0xfffffe34,%eax
 a55:	b8 14 00 00 00       	mov    $0x14,%eax
 a5a:	cd 80                	int    $0x80
 a5c:	5d                   	pop    %ebp
 a5d:	c3                   	ret    

00000a5e <set_backbuffer>:
 a5e:	55                   	push   %ebp
 a5f:	89 e5                	mov    %esp,%ebp
 a61:	53                   	push   %ebx
 a62:	83 ec 04             	sub    $0x4,%esp
 a65:	e8 e6 fd ff ff       	call   850 <__x86.get_pc_thunk.ax>
 a6a:	05 1a fe ff ff       	add    $0xfffffe1a,%eax
 a6f:	8b 45 08             	mov    0x8(%ebp),%eax
 a72:	88 45 f8             	mov    %al,-0x8(%ebp)
 a75:	0f b6 5d f8          	movzbl -0x8(%ebp),%ebx
 a79:	b8 15 00 00 00       	mov    $0x15,%eax
 a7e:	cd 80                	int    $0x80
 a80:	90                   	nop
 a81:	83 c4 04             	add    $0x4,%esp
 a84:	5b                   	pop    %ebx
 a85:	5d                   	pop    %ebp
 a86:	c3                   	ret    

00000a87 <swap_buffers>:
 a87:	55                   	push   %ebp
 a88:	89 e5                	mov    %esp,%ebp
 a8a:	e8 c1 fd ff ff       	call   850 <__x86.get_pc_thunk.ax>
 a8f:	05 f5 fd ff ff       	add    $0xfffffdf5,%eax
 a94:	b8 16 00 00 00       	mov    $0x16,%eax
 a99:	cd 80                	int    $0x80
 a9b:	90                   	nop
 a9c:	5d                   	pop    %ebp
 a9d:	c3                   	ret    

00000a9e <get_key>:
 a9e:	55                   	push   %ebp
 a9f:	89 e5                	mov    %esp,%ebp
 aa1:	53                   	push   %ebx
 aa2:	83 ec 10             	sub    $0x10,%esp
 aa5:	e8 aa fd ff ff       	call   854 <__x86.get_pc_thunk.bx>
 aaa:	81 c3 da fd ff ff    	add    $0xfffffdda,%ebx
 ab0:	e8 08 ff ff ff       	call   9bd <get_ascii_key_index>
 ab5:	89 45 f8             	mov    %eax,-0x8(%ebp)
 ab8:	c7 c0 28 ca 03 00    	mov    $0x3ca28,%eax
 abe:	8b 00                	mov    (%eax),%eax
 ac0:	39 45 f8             	cmp    %eax,-0x8(%ebp)
 ac3:	74 12                	je     ad7 <get_key+0x39>
 ac5:	c7 c0 28 ca 03 00    	mov    $0x3ca28,%eax
 acb:	8b 55 f8             	mov    -0x8(%ebp),%edx
 ace:	89 10                	mov    %edx,(%eax)
 ad0:	e8 02 ff ff ff       	call   9d7 <get_ascii_key>
 ad5:	eb 05                	jmp    adc <get_key+0x3e>
 ad7:	b8 00 00 00 00       	mov    $0x0,%eax
 adc:	83 c4 10             	add    $0x10,%esp
 adf:	5b                   	pop    %ebx
 ae0:	5d                   	pop    %ebp
 ae1:	c3                   	ret    

00000ae2 <get_keycode_index>:
 ae2:	55                   	push   %ebp
 ae3:	89 e5                	mov    %esp,%ebp
 ae5:	53                   	push   %ebx
 ae6:	e8 65 fd ff ff       	call   850 <__x86.get_pc_thunk.ax>
 aeb:	05 99 fd ff ff       	add    $0xfffffd99,%eax
 af0:	b8 19 00 00 00       	mov    $0x19,%eax
 af5:	cd 80                	int    $0x80
 af7:	89 d8                	mov    %ebx,%eax
 af9:	5b                   	pop    %ebx
 afa:	5d                   	pop    %ebp
 afb:	c3                   	ret    

00000afc <get_keycode>:
 afc:	55                   	push   %ebp
 afd:	89 e5                	mov    %esp,%ebp
 aff:	53                   	push   %ebx
 b00:	e8 4b fd ff ff       	call   850 <__x86.get_pc_thunk.ax>
 b05:	05 7f fd ff ff       	add    $0xfffffd7f,%eax
 b0a:	b8 18 00 00 00       	mov    $0x18,%eax
 b0f:	cd 80                	int    $0x80
 b11:	89 d8                	mov    %ebx,%eax
 b13:	5b                   	pop    %ebx
 b14:	5d                   	pop    %ebp
 b15:	c3                   	ret    

00000b16 <get_keycode_next>:
 b16:	55                   	push   %ebp
 b17:	89 e5                	mov    %esp,%ebp
 b19:	53                   	push   %ebx
 b1a:	83 ec 10             	sub    $0x10,%esp
 b1d:	e8 32 fd ff ff       	call   854 <__x86.get_pc_thunk.bx>
 b22:	81 c3 62 fd ff ff    	add    $0xfffffd62,%ebx
 b28:	e8 b5 ff ff ff       	call   ae2 <get_keycode_index>
 b2d:	89 45 f8             	mov    %eax,-0x8(%ebp)
 b30:	c7 c0 24 ca 03 00    	mov    $0x3ca24,%eax
 b36:	8b 00                	mov    (%eax),%eax
 b38:	39 45 f8             	cmp    %eax,-0x8(%ebp)
 b3b:	74 12                	je     b4f <get_keycode_next+0x39>
 b3d:	c7 c0 24 ca 03 00    	mov    $0x3ca24,%eax
 b43:	8b 55 f8             	mov    -0x8(%ebp),%edx
 b46:	89 10                	mov    %edx,(%eax)
 b48:	e8 af ff ff ff       	call   afc <get_keycode>
 b4d:	eb 05                	jmp    b54 <get_keycode_next+0x3e>
 b4f:	b8 00 00 00 00       	mov    $0x0,%eax
 b54:	83 c4 10             	add    $0x10,%esp
 b57:	5b                   	pop    %ebx
 b58:	5d                   	pop    %ebp
 b59:	c3                   	ret    

00000b5a <printChar>:
 b5a:	55                   	push   %ebp
 b5b:	89 e5                	mov    %esp,%ebp
 b5d:	53                   	push   %ebx
 b5e:	83 ec 04             	sub    $0x4,%esp
 b61:	e8 ea fc ff ff       	call   850 <__x86.get_pc_thunk.ax>
 b66:	05 1e fd ff ff       	add    $0xfffffd1e,%eax
 b6b:	8b 45 10             	mov    0x10(%ebp),%eax
 b6e:	88 45 f8             	mov    %al,-0x8(%ebp)
 b71:	b8 04 00 00 00       	mov    $0x4,%eax
 b76:	8b 5d 08             	mov    0x8(%ebp),%ebx
 b79:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 b7c:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
 b80:	cd 80                	int    $0x80
 b82:	90                   	nop
 b83:	83 c4 04             	add    $0x4,%esp
 b86:	5b                   	pop    %ebx
 b87:	5d                   	pop    %ebp
 b88:	c3                   	ret    

00000b89 <setPrintColor>:
 b89:	55                   	push   %ebp
 b8a:	89 e5                	mov    %esp,%ebp
 b8c:	53                   	push   %ebx
 b8d:	e8 be fc ff ff       	call   850 <__x86.get_pc_thunk.ax>
 b92:	05 f2 fc ff ff       	add    $0xfffffcf2,%eax
 b97:	b8 1a 00 00 00       	mov    $0x1a,%eax
 b9c:	8b 5d 08             	mov    0x8(%ebp),%ebx
 b9f:	cd 80                	int    $0x80
 ba1:	90                   	nop
 ba2:	5b                   	pop    %ebx
 ba3:	5d                   	pop    %ebp
 ba4:	c3                   	ret    

00000ba5 <getFramebuffer>:
 ba5:	55                   	push   %ebp
 ba6:	89 e5                	mov    %esp,%ebp
 ba8:	e8 a3 fc ff ff       	call   850 <__x86.get_pc_thunk.ax>
 bad:	05 d7 fc ff ff       	add    $0xfffffcd7,%eax
 bb2:	b8 17 00 00 00       	mov    $0x17,%eax
 bb7:	cd 80                	int    $0x80
 bb9:	5d                   	pop    %ebp
 bba:	c3                   	ret    
