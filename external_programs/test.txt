
test:     file format elf32-i386


Disassembly of section .text:

00000000 <main>:
   0:	e8 6b 51 10 c0       	call   c0105170 <test_str+0xc010510c>
   5:	c3                   	ret    
   6:	b9 0a 00 00 00       	mov    $0xa,%ecx

0000000b <loop>:
   b:	b8 03 00 00 00       	mov    $0x3,%eax
  10:	bb 53 00 00 00       	mov    $0x53,%ebx
  15:	89 ca                	mov    %ecx,%edx
  17:	cd 80                	int    $0x80
  19:	49                   	dec    %ecx
  1a:	83 f9 00             	cmp    $0x0,%ecx
  1d:	74 02                	je     21 <end>
  1f:	eb ea                	jmp    b <loop>

00000021 <end>:
  21:	e8 0f 00 00 00       	call   35 <get_char>
  26:	89 c2                	mov    %eax,%edx
  28:	b8 03 00 00 00       	mov    $0x3,%eax
  2d:	bb 64 00 00 00       	mov    $0x64,%ebx
  32:	cd 80                	int    $0x80
  34:	c3                   	ret    

00000035 <get_char>:
  35:	b8 0a 00 00 00       	mov    $0xa,%eax
  3a:	cd 80                	int    $0x80
  3c:	89 d9                	mov    %ebx,%ecx

0000003e <get_char_loop>:
  3e:	b8 0a 00 00 00       	mov    $0xa,%eax
  43:	cd 80                	int    $0x80
  45:	39 cb                	cmp    %ecx,%ebx
  47:	74 f5                	je     3e <get_char_loop>
  49:	b8 09 00 00 00       	mov    $0x9,%eax
  4e:	cd 80                	int    $0x80
  50:	89 d8                	mov    %ebx,%eax
  52:	c3                   	ret    

00000053 <str>:
  53:	48                   	dec    %eax
  54:	65 6c                	gs insb (%dx),%es:(%edi)
  56:	6c                   	insb   (%dx),%es:(%edi)
  57:	6f                   	outsl  %ds:(%esi),(%dx)
  58:	20 57 6f             	and    %dl,0x6f(%edi)
  5b:	72 6c                	jb     c9 <test_str+0x65>
  5d:	64 20 25 31 78 0a 00 	and    %ah,%fs:0xa7831

00000064 <test_str>:
  64:	50                   	push   %eax
  65:	72 65                	jb     cc <test_str+0x68>
  67:	73 73                	jae    dc <test_str+0x78>
  69:	65 64 20 4b 65       	gs and %cl,%fs:0x65(%ebx)
  6e:	79 3a                	jns    aa <test_str+0x46>
  70:	20                   	.byte 0x20
  71:	25                   	.byte 0x25
  72:	63 0a                	arpl   %cx,(%edx)
	...
